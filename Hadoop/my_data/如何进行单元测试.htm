<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
<title>如何进行单元测试</title>
<meta name="GENERATOR" content="WinCHM">
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<style>
html,body { 
	/* Default Font */
	font-family: Arial, Helvetica, sans-serif;
	font-size: 11pt;
}
</style>

</head>

<body>
<P 
style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(51,51,51); TEXT-ALIGN: justify; FONT: 14px/22px tahoma, 宋体; WIDOWS: 1; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(250,250,252); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">写完程序后需要进行单元测试，分别对Map函数和Reduce函数进行测试，功能正确后，就可以在小规模集群上进行测试，测试成功后就可以在<A 
title=Hadoop style="TEXT-DECORATION: underline; COLOR: rgb(179,43,213)" 
href="http://www.linuxidc.com/topicnews.aspx?tid=13" 
target=_blank>Hadoop</A>集群上进行运行。这里先不介绍单元测试的知识，后面再专门介绍如何在Hadoop中使用MRUnit进行单元测试。MRUnit是由Couldera公司开发的专门针对 
Hadoop中 编写MapReduce单元测试的框架，基本原理是JUnit4和 
EasyMock。MR就是Map和Reduce的缩写。MRUnit框架非常精简，其核心的单元测试依赖于JUnit。而且MRUnit实现了一套 
Mock对象来控制OutputCollector的操作，从而可以拦截OutputCollector的输出，和我们的期望结果进行比较，达到自动断言 
的目的。</P>
<P 
style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(51,51,51); TEXT-ALIGN: justify; FONT: 14px/22px tahoma, 宋体; WIDOWS: 1; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(250,250,252); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">有了MRUnit，对MR程序做重构的时候，只要明确输入和输出，就可以写出单元测试，并且在放到群集校验前进行试验，从而节省时间和资源，也 
能更快的定位到问题。而进行重构的话，只要写得足够详细的单元测试都是绿色的话，那么基本就可以保证在群集运行的结果也是正常的。</P>
<P 
style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(51,51,51); TEXT-ALIGN: justify; FONT: 14px/22px tahoma, 宋体; WIDOWS: 1; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(250,250,252); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">MRUnit不在Apache标准的Hadoop的发行版中，而是在Couldera公司的增强版本中hadoop- 
0.20.1+133.tar.gz的contrib\mrunit\hadoop-0.20.1+169.56-mrunit.jar，已经贴在附件 
中。只要把它和Junit4的jar添加到Hadoop程序项目的classpath中，就可以使用MRUnit了。</P></body>
</html>
