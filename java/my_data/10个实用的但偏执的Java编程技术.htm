<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
<title>10个实用的但偏执的Java编程技术</title>
<meta name="GENERATOR" content="WinCHM">
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<style>
html,body { 
	/* Default Font */
	font-family: Arial, Helvetica, sans-serif;
	font-size: 11pt;
}
</style>

</head>

<body>
<P 
style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(68,68,68); PADDING-BOTTOM: 0px; TEXT-ALIGN: left; PADDING-TOP: 0px; FONT: 14px/25px 'microsoft yahei'; PADDING-LEFT: 0px; MARGIN: 0px 0px 15px; WIDOWS: 1; LETTER-SPACING: normal; PADDING-RIGHT: 0px; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">在沉浸于编码一段时间以后（比如说我已经投入近20年左右的时间在程序上了），你会渐渐对这些东西习以为常。因为，你知道的……</P>
<P 
style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(68,68,68); PADDING-BOTTOM: 0px; TEXT-ALIGN: left; PADDING-TOP: 0px; FONT: 14px/25px 'microsoft yahei'; PADDING-LEFT: 0px; MARGIN: 0px 0px 15px; WIDOWS: 1; LETTER-SPACING: normal; PADDING-RIGHT: 0px; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">任何事情有可能出错，没错，的确如此。</P>
<P 
style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(68,68,68); PADDING-BOTTOM: 0px; TEXT-ALIGN: left; PADDING-TOP: 0px; FONT: 14px/25px 'microsoft yahei'; PADDING-LEFT: 0px; MARGIN: 0px 0px 15px; WIDOWS: 1; LETTER-SPACING: normal; PADDING-RIGHT: 0px; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">这就是为什么我们要采用“<A 
style="CURSOR: pointer; TEXT-DECORATION: none; COLOR: rgb(0,136,219)" 
href="http://www.codeceo.com/article/defensive-programming-vs-crazy-programming.html" 
target=_blank>防御性编程</A>”，即一些偏执习惯的原因。下面是我个人认为的10个最有用但偏执的Java编程技术。一起来看一看吧：</P>
<H2 
style="FONT-SIZE: 18px; FONT-FAMILY: 'microsoft yahei'; FONT-VARIANT: normal; WHITE-SPACE: normal; WORD-SPACING: 0px; BORDER-BOTTOM: rgb(238,238,238) 1px solid; TEXT-TRANSFORM: none; COLOR: rgb(34,34,34); PADDING-BOTTOM: 5px; FONT-STYLE: normal; TEXT-ALIGN: left; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 30px 0px 14px; WIDOWS: 1; LETTER-SPACING: normal; LINE-HEIGHT: 25px; PADDING-RIGHT: 0px; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">1.将String字符串放在最前面</H2>
<P 
style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(68,68,68); PADDING-BOTTOM: 0px; TEXT-ALIGN: left; PADDING-TOP: 0px; FONT: 14px/25px 'microsoft yahei'; PADDING-LEFT: 0px; MARGIN: 0px 0px 15px; WIDOWS: 1; LETTER-SPACING: normal; PADDING-RIGHT: 0px; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">为了防止偶发性的<CODE 
style="FONT-SIZE: 12px; FONT-FAMILY: 'courier new'; COLOR: rgb(119,119,119); PADDING-BOTTOM: 1px; PADDING-TOP: 1px; PADDING-LEFT: 4px; MARGIN: 0px 4px; PADDING-RIGHT: 4px; BACKGROUND-COLOR: rgb(238,238,238); border-radius: 2px">NullPointerException</CODE>&nbsp;异常，我们通常将String放置在equals()函数的左边来实现字符串比较，如下代码：</P><PRE style="WORD-WRAP: break-word; BORDER-TOP: rgb(221,221,221) 1px solid; BORDER-RIGHT: rgb(221,221,221) 1px solid; BACKGROUND: rgb(251,251,251); WORD-SPACING: 0px; BORDER-BOTTOM: rgb(221,221,221) 1px solid; TEXT-TRANSFORM: none; WORD-BREAK: break-all; COLOR: rgb(68,68,68); PADDING-BOTTOM: 10px; TEXT-ALIGN: left; PADDING-TOP: 10px; FONT: 12px/20px 'courier new'; PADDING-LEFT: 15px; MARGIN: 15px auto; BORDER-LEFT: rgb(221,221,221) 4px solid; WIDOWS: 1; LETTER-SPACING: normal; PADDING-RIGHT: 15px; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px; font-stretch: normal">// Bad
if (variable.equals("literal")) { ... }
// Good
if ("literal".equals(variable)) { ... }</PRE>
<P 
style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(68,68,68); PADDING-BOTTOM: 0px; TEXT-ALIGN: left; PADDING-TOP: 0px; FONT: 14px/25px 'microsoft yahei'; PADDING-LEFT: 0px; MARGIN: 0px 0px 15px; WIDOWS: 1; LETTER-SPACING: normal; PADDING-RIGHT: 0px; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">这是随便用脑子想想就可以做的事，从Bad版本的代码改写表达式到Good版本的代码，这中间并不会丢失任何东西。欢迎不同的观点…</P>
<H2 
style="FONT-SIZE: 18px; FONT-FAMILY: 'microsoft yahei'; FONT-VARIANT: normal; WHITE-SPACE: normal; WORD-SPACING: 0px; BORDER-BOTTOM: rgb(238,238,238) 1px solid; TEXT-TRANSFORM: none; COLOR: rgb(34,34,34); PADDING-BOTTOM: 5px; FONT-STYLE: normal; TEXT-ALIGN: left; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 30px 0px 14px; WIDOWS: 1; LETTER-SPACING: normal; LINE-HEIGHT: 25px; PADDING-RIGHT: 0px; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">2.不要相信早期的JDK 
API</H2>
<P 
style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(68,68,68); PADDING-BOTTOM: 0px; TEXT-ALIGN: left; PADDING-TOP: 0px; FONT: 14px/25px 'microsoft yahei'; PADDING-LEFT: 0px; MARGIN: 0px 0px 15px; WIDOWS: 1; LETTER-SPACING: normal; PADDING-RIGHT: 0px; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">在Java早期，编程是一件非常痛苦的事情。那些API仍然很不成熟，也许你已经碰到过下面的代码块：</P><PRE style="WORD-WRAP: break-word; BORDER-TOP: rgb(221,221,221) 1px solid; BORDER-RIGHT: rgb(221,221,221) 1px solid; BACKGROUND: rgb(251,251,251); WORD-SPACING: 0px; BORDER-BOTTOM: rgb(221,221,221) 1px solid; TEXT-TRANSFORM: none; WORD-BREAK: break-all; COLOR: rgb(68,68,68); PADDING-BOTTOM: 10px; TEXT-ALIGN: left; PADDING-TOP: 10px; FONT: 12px/20px 'courier new'; PADDING-LEFT: 15px; MARGIN: 15px auto; BORDER-LEFT: rgb(221,221,221) 4px solid; WIDOWS: 1; LETTER-SPACING: normal; PADDING-RIGHT: 15px; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px; font-stretch: normal">String[] files = file.list();
// Watch out
if (files != null) {
    for (int i = 0; i &lt; files.length; i++) {
        ...
    }
}</PRE>
<P 
style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(68,68,68); PADDING-BOTTOM: 0px; TEXT-ALIGN: left; PADDING-TOP: 0px; FONT: 14px/25px 'microsoft yahei'; PADDING-LEFT: 0px; MARGIN: 0px 0px 15px; WIDOWS: 1; LETTER-SPACING: normal; PADDING-RIGHT: 0px; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">看上去很偏执？也许吧，但请看Javadoc：</P>
<P 
style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(68,68,68); PADDING-BOTTOM: 0px; TEXT-ALIGN: left; PADDING-TOP: 0px; FONT: 14px/25px 'microsoft yahei'; PADDING-LEFT: 0px; MARGIN: 0px 0px 15px; WIDOWS: 1; LETTER-SPACING: normal; PADDING-RIGHT: 0px; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">如果这个虚拟路径不表示一个文件夹目录，则此方法返回null。否则将会返回一个字符串数组，每一个字符串表示目录中的文件或文件夹。</P>
<P 
style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(68,68,68); PADDING-BOTTOM: 0px; TEXT-ALIGN: left; PADDING-TOP: 0px; FONT: 14px/25px 'microsoft yahei'; PADDING-LEFT: 0px; MARGIN: 0px 0px 15px; WIDOWS: 1; LETTER-SPACING: normal; PADDING-RIGHT: 0px; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">对，没错。我们可以添加一些校验：</P><PRE style="WORD-WRAP: break-word; BORDER-TOP: rgb(221,221,221) 1px solid; BORDER-RIGHT: rgb(221,221,221) 1px solid; BACKGROUND: rgb(251,251,251); WORD-SPACING: 0px; BORDER-BOTTOM: rgb(221,221,221) 1px solid; TEXT-TRANSFORM: none; WORD-BREAK: break-all; COLOR: rgb(68,68,68); PADDING-BOTTOM: 10px; TEXT-ALIGN: left; PADDING-TOP: 10px; FONT: 12px/20px 'courier new'; PADDING-LEFT: 15px; MARGIN: 15px auto; BORDER-LEFT: rgb(221,221,221) 4px solid; WIDOWS: 1; LETTER-SPACING: normal; PADDING-RIGHT: 15px; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px; font-stretch: normal">if (file.isDirectory()) {
    String[] files = file.list();
    // Watch out
    if (files != null) {
        for (int i = 0; i &lt; files.length; i++) {
            ...
        }
    }
}</PRE>
<H2 
style="FONT-SIZE: 18px; FONT-FAMILY: 'microsoft yahei'; FONT-VARIANT: normal; WHITE-SPACE: normal; WORD-SPACING: 0px; BORDER-BOTTOM: rgb(238,238,238) 1px solid; TEXT-TRANSFORM: none; COLOR: rgb(34,34,34); PADDING-BOTTOM: 5px; FONT-STYLE: normal; TEXT-ALIGN: left; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 30px 0px 14px; WIDOWS: 1; LETTER-SPACING: normal; LINE-HEIGHT: 25px; PADDING-RIGHT: 0px; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">3.不要相信“-1”</H2>
<P 
style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(68,68,68); PADDING-BOTTOM: 0px; TEXT-ALIGN: left; PADDING-TOP: 0px; FONT: 14px/25px 'microsoft yahei'; PADDING-LEFT: 0px; MARGIN: 0px 0px 15px; WIDOWS: 1; LETTER-SPACING: normal; PADDING-RIGHT: 0px; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">我知道这是偏执的，但Javadoc中对 
String.indexOf()方法明确指出：对象内第一次出现指定字符的位置索引，如果为-1则表示该字符不在字符序列中。</P>
<P 
style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(68,68,68); PADDING-BOTTOM: 0px; TEXT-ALIGN: left; PADDING-TOP: 0px; FONT: 14px/25px 'microsoft yahei'; PADDING-LEFT: 0px; MARGIN: 0px 0px 15px; WIDOWS: 1; LETTER-SPACING: normal; PADDING-RIGHT: 0px; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">所以使用-1是理所当然的，对吗？我说不对，请看以下代码：</P><PRE style="WORD-WRAP: break-word; BORDER-TOP: rgb(221,221,221) 1px solid; BORDER-RIGHT: rgb(221,221,221) 1px solid; BACKGROUND: rgb(251,251,251); WORD-SPACING: 0px; BORDER-BOTTOM: rgb(221,221,221) 1px solid; TEXT-TRANSFORM: none; WORD-BREAK: break-all; COLOR: rgb(68,68,68); PADDING-BOTTOM: 10px; TEXT-ALIGN: left; PADDING-TOP: 10px; FONT: 12px/20px 'courier new'; PADDING-LEFT: 15px; MARGIN: 15px auto; BORDER-LEFT: rgb(221,221,221) 4px solid; WIDOWS: 1; LETTER-SPACING: normal; PADDING-RIGHT: 15px; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px; font-stretch: normal">// Bad
if (string.indexOf(character) != -1) { ... }
// Good
if (string.indexOf(character) &gt;= 0) { ... }</PRE>
<P 
style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(68,68,68); PADDING-BOTTOM: 0px; TEXT-ALIGN: left; PADDING-TOP: 0px; FONT: 14px/25px 'microsoft yahei'; PADDING-LEFT: 0px; MARGIN: 0px 0px 15px; WIDOWS: 1; LETTER-SPACING: normal; PADDING-RIGHT: 0px; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">谁知道呢。也许到时候他们改变了编码方式，对字符串并不区分大小写，也许更好的方式是返回-2？谁知道呢。</P>
<H2 
style="FONT-SIZE: 18px; FONT-FAMILY: 'microsoft yahei'; FONT-VARIANT: normal; WHITE-SPACE: normal; WORD-SPACING: 0px; BORDER-BOTTOM: rgb(238,238,238) 1px solid; TEXT-TRANSFORM: none; COLOR: rgb(34,34,34); PADDING-BOTTOM: 5px; FONT-STYLE: normal; TEXT-ALIGN: left; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 30px 0px 14px; WIDOWS: 1; LETTER-SPACING: normal; LINE-HEIGHT: 25px; PADDING-RIGHT: 0px; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">4.避免意外赋值</H2>
<P 
style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(68,68,68); PADDING-BOTTOM: 0px; TEXT-ALIGN: left; PADDING-TOP: 0px; FONT: 14px/25px 'microsoft yahei'; PADDING-LEFT: 0px; MARGIN: 0px 0px 15px; WIDOWS: 1; LETTER-SPACING: normal; PADDING-RIGHT: 0px; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">是的。这种事情也许经常会发生。</P><PRE style="WORD-WRAP: break-word; BORDER-TOP: rgb(221,221,221) 1px solid; BORDER-RIGHT: rgb(221,221,221) 1px solid; BACKGROUND: rgb(251,251,251); WORD-SPACING: 0px; BORDER-BOTTOM: rgb(221,221,221) 1px solid; TEXT-TRANSFORM: none; WORD-BREAK: break-all; COLOR: rgb(68,68,68); PADDING-BOTTOM: 10px; TEXT-ALIGN: left; PADDING-TOP: 10px; FONT: 12px/20px 'courier new'; PADDING-LEFT: 15px; MARGIN: 15px auto; BORDER-LEFT: rgb(221,221,221) 4px solid; WIDOWS: 1; LETTER-SPACING: normal; PADDING-RIGHT: 15px; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px; font-stretch: normal">// Ooops
if (variable = 5) { ... }
// Better (because causes an error)
if (5 = variable) { ... }
// Intent (remember. Paranoid JavaScript: ===)
if (5 === variable) { ... }</PRE>
<P 
style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(68,68,68); PADDING-BOTTOM: 0px; TEXT-ALIGN: left; PADDING-TOP: 0px; FONT: 14px/25px 'microsoft yahei'; PADDING-LEFT: 0px; MARGIN: 0px 0px 15px; WIDOWS: 1; LETTER-SPACING: normal; PADDING-RIGHT: 0px; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">所以你可以将比较常量放置在左侧，这样就不会发生意外赋值的错误了。</P>
<H2 
style="FONT-SIZE: 18px; FONT-FAMILY: 'microsoft yahei'; FONT-VARIANT: normal; WHITE-SPACE: normal; WORD-SPACING: 0px; BORDER-BOTTOM: rgb(238,238,238) 1px solid; TEXT-TRANSFORM: none; COLOR: rgb(34,34,34); PADDING-BOTTOM: 5px; FONT-STYLE: normal; TEXT-ALIGN: left; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 30px 0px 14px; WIDOWS: 1; LETTER-SPACING: normal; LINE-HEIGHT: 25px; PADDING-RIGHT: 0px; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">5.检查Null和Length</H2>
<P 
style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(68,68,68); PADDING-BOTTOM: 0px; TEXT-ALIGN: left; PADDING-TOP: 0px; FONT: 14px/25px 'microsoft yahei'; PADDING-LEFT: 0px; MARGIN: 0px 0px 15px; WIDOWS: 1; LETTER-SPACING: normal; PADDING-RIGHT: 0px; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">无论如何，只要你有一个集合、数组等，请确保它存在，并且不为空。</P><PRE style="WORD-WRAP: break-word; BORDER-TOP: rgb(221,221,221) 1px solid; BORDER-RIGHT: rgb(221,221,221) 1px solid; BACKGROUND: rgb(251,251,251); WORD-SPACING: 0px; BORDER-BOTTOM: rgb(221,221,221) 1px solid; TEXT-TRANSFORM: none; WORD-BREAK: break-all; COLOR: rgb(68,68,68); PADDING-BOTTOM: 10px; TEXT-ALIGN: left; PADDING-TOP: 10px; FONT: 12px/20px 'courier new'; PADDING-LEFT: 15px; MARGIN: 15px auto; BORDER-LEFT: rgb(221,221,221) 4px solid; WIDOWS: 1; LETTER-SPACING: normal; PADDING-RIGHT: 15px; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px; font-stretch: normal">// Bad
if (array.length &gt; 0) { ... }
// Good
if (array != null &amp;&amp; array.length &gt; 0) { ... }</PRE>
<P 
style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(68,68,68); PADDING-BOTTOM: 0px; TEXT-ALIGN: left; PADDING-TOP: 0px; FONT: 14px/25px 'microsoft yahei'; PADDING-LEFT: 0px; MARGIN: 0px 0px 15px; WIDOWS: 1; LETTER-SPACING: normal; PADDING-RIGHT: 0px; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">你并不知道这些数组从哪里来，也许是来自早期版本的JDK 
API，谁知道呢。</P>
<H2 
style="FONT-SIZE: 18px; FONT-FAMILY: 'microsoft yahei'; FONT-VARIANT: normal; WHITE-SPACE: normal; WORD-SPACING: 0px; BORDER-BOTTOM: rgb(238,238,238) 1px solid; TEXT-TRANSFORM: none; COLOR: rgb(34,34,34); PADDING-BOTTOM: 5px; FONT-STYLE: normal; TEXT-ALIGN: left; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 30px 0px 14px; WIDOWS: 1; LETTER-SPACING: normal; LINE-HEIGHT: 25px; PADDING-RIGHT: 0px; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">6.所有的方法都是final的</H2>
<P 
style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(68,68,68); PADDING-BOTTOM: 0px; TEXT-ALIGN: left; PADDING-TOP: 0px; FONT: 14px/25px 'microsoft yahei'; PADDING-LEFT: 0px; MARGIN: 0px 0px 15px; WIDOWS: 1; LETTER-SPACING: normal; PADDING-RIGHT: 0px; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">你也许会告诉我你的开/闭原则，但这都是胡说八道。我不相信你（正确继承我这个父类的所有子类），我也不相信我自己（不小心继承我这个父类的所有子类）。所以对于那些意义明确的方法要严格用final标识。</P><PRE style="WORD-WRAP: break-word; BORDER-TOP: rgb(221,221,221) 1px solid; BORDER-RIGHT: rgb(221,221,221) 1px solid; BACKGROUND: rgb(251,251,251); WORD-SPACING: 0px; BORDER-BOTTOM: rgb(221,221,221) 1px solid; TEXT-TRANSFORM: none; WORD-BREAK: break-all; COLOR: rgb(68,68,68); PADDING-BOTTOM: 10px; TEXT-ALIGN: left; PADDING-TOP: 10px; FONT: 12px/20px 'courier new'; PADDING-LEFT: 15px; MARGIN: 15px auto; BORDER-LEFT: rgb(221,221,221) 4px solid; WIDOWS: 1; LETTER-SPACING: normal; PADDING-RIGHT: 15px; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px; font-stretch: normal">// Bad
public void boom() { ... }
// Good. Don't touch.
public final void dontTouch() { ... }</PRE>
<H2 
style="FONT-SIZE: 18px; FONT-FAMILY: 'microsoft yahei'; FONT-VARIANT: normal; WHITE-SPACE: normal; WORD-SPACING: 0px; BORDER-BOTTOM: rgb(238,238,238) 1px solid; TEXT-TRANSFORM: none; COLOR: rgb(34,34,34); PADDING-BOTTOM: 5px; FONT-STYLE: normal; TEXT-ALIGN: left; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 30px 0px 14px; WIDOWS: 1; LETTER-SPACING: normal; LINE-HEIGHT: 25px; PADDING-RIGHT: 0px; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">7.所有变量和参数都是final</H2>
<P 
style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(68,68,68); PADDING-BOTTOM: 0px; TEXT-ALIGN: left; PADDING-TOP: 0px; FONT: 14px/25px 'microsoft yahei'; PADDING-LEFT: 0px; MARGIN: 0px 0px 15px; WIDOWS: 1; LETTER-SPACING: normal; PADDING-RIGHT: 0px; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">就像我说的。我不相信我自己（不要意外覆盖我的值）。话虽如此，我不相信我自己的是因为…</P>
<P 
style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(68,68,68); PADDING-BOTTOM: 0px; TEXT-ALIGN: left; PADDING-TOP: 0px; FONT: 14px/25px 'microsoft yahei'; PADDING-LEFT: 0px; MARGIN: 0px 0px 15px; WIDOWS: 1; LETTER-SPACING: normal; PADDING-RIGHT: 0px; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">…这就是为什么所有的变量和参数都是final的原因。</P><PRE style="WORD-WRAP: break-word; BORDER-TOP: rgb(221,221,221) 1px solid; BORDER-RIGHT: rgb(221,221,221) 1px solid; BACKGROUND: rgb(251,251,251); WORD-SPACING: 0px; BORDER-BOTTOM: rgb(221,221,221) 1px solid; TEXT-TRANSFORM: none; WORD-BREAK: break-all; COLOR: rgb(68,68,68); PADDING-BOTTOM: 10px; TEXT-ALIGN: left; PADDING-TOP: 10px; FONT: 12px/20px 'courier new'; PADDING-LEFT: 15px; MARGIN: 15px auto; BORDER-LEFT: rgb(221,221,221) 4px solid; WIDOWS: 1; LETTER-SPACING: normal; PADDING-RIGHT: 15px; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px; font-stretch: normal">// Bad
void input(String importantMessage) {
    String answer = "...";
    answer = importantMessage = "LOL accident";
}
// Good
final void input(final String importantMessage) {
    final String answer = "...";
}</PRE>
<H2 
style="FONT-SIZE: 18px; FONT-FAMILY: 'microsoft yahei'; FONT-VARIANT: normal; WHITE-SPACE: normal; WORD-SPACING: 0px; BORDER-BOTTOM: rgb(238,238,238) 1px solid; TEXT-TRANSFORM: none; COLOR: rgb(34,34,34); PADDING-BOTTOM: 5px; FONT-STYLE: normal; TEXT-ALIGN: left; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 30px 0px 14px; WIDOWS: 1; LETTER-SPACING: normal; LINE-HEIGHT: 25px; PADDING-RIGHT: 0px; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">8.重载时不要相信泛型</H2>
<P 
style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(68,68,68); PADDING-BOTTOM: 0px; TEXT-ALIGN: left; PADDING-TOP: 0px; FONT: 14px/25px 'microsoft yahei'; PADDING-LEFT: 0px; MARGIN: 0px 0px 15px; WIDOWS: 1; LETTER-SPACING: normal; PADDING-RIGHT: 0px; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">是，它可以发生。你相信你写的超级好看的API，它很直观，随之而来的，一些用户谁只是将原始类型转换成Object类型，直到那该死的编译器停止发牢骚，并且突然他们会链接错误的方法，以为这是你的错误。</P>
<P 
style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(68,68,68); PADDING-BOTTOM: 0px; TEXT-ALIGN: left; PADDING-TOP: 0px; FONT: 14px/25px 'microsoft yahei'; PADDING-LEFT: 0px; MARGIN: 0px 0px 15px; WIDOWS: 1; LETTER-SPACING: normal; PADDING-RIGHT: 0px; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">看下面的代码：</P><PRE style="WORD-WRAP: break-word; BORDER-TOP: rgb(221,221,221) 1px solid; BORDER-RIGHT: rgb(221,221,221) 1px solid; BACKGROUND: rgb(251,251,251); WORD-SPACING: 0px; BORDER-BOTTOM: rgb(221,221,221) 1px solid; TEXT-TRANSFORM: none; WORD-BREAK: break-all; COLOR: rgb(68,68,68); PADDING-BOTTOM: 10px; TEXT-ALIGN: left; PADDING-TOP: 10px; FONT: 12px/20px 'courier new'; PADDING-LEFT: 15px; MARGIN: 15px auto; BORDER-LEFT: rgb(221,221,221) 4px solid; WIDOWS: 1; LETTER-SPACING: normal; PADDING-RIGHT: 15px; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px; font-stretch: normal">// Bad
&lt;T&gt; void bad(T value) {
    bad(Collections.singletonList(value));
}
&lt;T&gt; void bad(List&lt;T&gt; values) {
    ...
}
// Good
final &lt;T&gt; void good(final T value) {
    if (value instanceof List)
        good((List&lt;?&gt;) value);
    else
        good(Collections.singletonList(value));
}
final &lt;T&gt; void good(final List&lt;T&gt; values) {
    ...
}</PRE>
<P 
style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(68,68,68); PADDING-BOTTOM: 0px; TEXT-ALIGN: left; PADDING-TOP: 0px; FONT: 14px/25px 'microsoft yahei'; PADDING-LEFT: 0px; MARGIN: 0px 0px 15px; WIDOWS: 1; LETTER-SPACING: normal; PADDING-RIGHT: 0px; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">因为，你知道……你的用户，他们就像</P><PRE style="WORD-WRAP: break-word; BORDER-TOP: rgb(221,221,221) 1px solid; BORDER-RIGHT: rgb(221,221,221) 1px solid; BACKGROUND: rgb(251,251,251); WORD-SPACING: 0px; BORDER-BOTTOM: rgb(221,221,221) 1px solid; TEXT-TRANSFORM: none; WORD-BREAK: break-all; COLOR: rgb(68,68,68); PADDING-BOTTOM: 10px; TEXT-ALIGN: left; PADDING-TOP: 10px; FONT: 12px/20px 'courier new'; PADDING-LEFT: 15px; MARGIN: 15px auto; BORDER-LEFT: rgb(221,221,221) 4px solid; WIDOWS: 1; LETTER-SPACING: normal; PADDING-RIGHT: 15px; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px; font-stretch: normal">// This library sucks
@SuppressWarnings("all")
Object t = (Object) (List) Arrays.asList("abc");
bad(t);</PRE>
<P 
style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(68,68,68); PADDING-BOTTOM: 0px; TEXT-ALIGN: left; PADDING-TOP: 0px; FONT: 14px/25px 'microsoft yahei'; PADDING-LEFT: 0px; MARGIN: 0px 0px 15px; WIDOWS: 1; LETTER-SPACING: normal; PADDING-RIGHT: 0px; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">相信我。这一切我都看到过。</P>
<P 
style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(68,68,68); PADDING-BOTTOM: 0px; TEXT-ALIGN: left; PADDING-TOP: 0px; FONT: 14px/25px 'microsoft yahei'; PADDING-LEFT: 0px; MARGIN: 0px 0px 15px; WIDOWS: 1; LETTER-SPACING: normal; PADDING-RIGHT: 0px; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">这种偏执还是不错的。</P>
<H2 
style="FONT-SIZE: 18px; FONT-FAMILY: 'microsoft yahei'; FONT-VARIANT: normal; WHITE-SPACE: normal; WORD-SPACING: 0px; BORDER-BOTTOM: rgb(238,238,238) 1px solid; TEXT-TRANSFORM: none; COLOR: rgb(34,34,34); PADDING-BOTTOM: 5px; FONT-STYLE: normal; TEXT-ALIGN: left; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 30px 0px 14px; WIDOWS: 1; LETTER-SPACING: normal; LINE-HEIGHT: 25px; PADDING-RIGHT: 0px; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">9.总是在Switch语句的Default中抛出异常</H2>
<P 
style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(68,68,68); PADDING-BOTTOM: 0px; TEXT-ALIGN: left; PADDING-TOP: 0px; FONT: 14px/25px 'microsoft yahei'; PADDING-LEFT: 0px; MARGIN: 0px 0px 15px; WIDOWS: 1; LETTER-SPACING: normal; PADDING-RIGHT: 0px; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">Switch语句……它们其中一个可笑的语句我不知道该对它敬畏还是哭泣，但无论如何，既然我们坚持用switch，那我们不妨将它用得完美，看下面的代码：</P><PRE style="WORD-WRAP: break-word; BORDER-TOP: rgb(221,221,221) 1px solid; BORDER-RIGHT: rgb(221,221,221) 1px solid; BACKGROUND: rgb(251,251,251); WORD-SPACING: 0px; BORDER-BOTTOM: rgb(221,221,221) 1px solid; TEXT-TRANSFORM: none; WORD-BREAK: break-all; COLOR: rgb(68,68,68); PADDING-BOTTOM: 10px; TEXT-ALIGN: left; PADDING-TOP: 10px; FONT: 12px/20px 'courier new'; PADDING-LEFT: 15px; MARGIN: 15px auto; BORDER-LEFT: rgb(221,221,221) 4px solid; WIDOWS: 1; LETTER-SPACING: normal; PADDING-RIGHT: 15px; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px; font-stretch: normal">// Bad
switch (value) {
    case 1: foo(); break;
    case 2: bar(); break;
}
// Good
switch (value) {
    case 1: foo(); break;
    case 2: bar(); break;
    default:
        throw new ThreadDeath("That'll teach them");
}</PRE>
<P 
style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(68,68,68); PADDING-BOTTOM: 0px; TEXT-ALIGN: left; PADDING-TOP: 0px; FONT: 14px/25px 'microsoft yahei'; PADDING-LEFT: 0px; MARGIN: 0px 0px 15px; WIDOWS: 1; LETTER-SPACING: normal; PADDING-RIGHT: 0px; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">当value 
== 3时，将会出现无法找到的提示，而不会让人不知所谓。</P>
<H2 
style="FONT-SIZE: 18px; FONT-FAMILY: 'microsoft yahei'; FONT-VARIANT: normal; WHITE-SPACE: normal; WORD-SPACING: 0px; BORDER-BOTTOM: rgb(238,238,238) 1px solid; TEXT-TRANSFORM: none; COLOR: rgb(34,34,34); PADDING-BOTTOM: 5px; FONT-STYLE: normal; TEXT-ALIGN: left; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 30px 0px 14px; WIDOWS: 1; LETTER-SPACING: normal; LINE-HEIGHT: 25px; PADDING-RIGHT: 0px; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">10.Switch语句带花括号</H2>
<P 
style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(68,68,68); PADDING-BOTTOM: 0px; TEXT-ALIGN: left; PADDING-TOP: 0px; FONT: 14px/25px 'microsoft yahei'; PADDING-LEFT: 0px; MARGIN: 0px 0px 15px; WIDOWS: 1; LETTER-SPACING: normal; PADDING-RIGHT: 0px; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">事实上，switch是最邪恶的语句，像是一些喝醉了或者赌输了的人在写代码一样，看下面的例子：</P><PRE style="WORD-WRAP: break-word; BORDER-TOP: rgb(221,221,221) 1px solid; BORDER-RIGHT: rgb(221,221,221) 1px solid; BACKGROUND: rgb(251,251,251); WORD-SPACING: 0px; BORDER-BOTTOM: rgb(221,221,221) 1px solid; TEXT-TRANSFORM: none; WORD-BREAK: break-all; COLOR: rgb(68,68,68); PADDING-BOTTOM: 10px; TEXT-ALIGN: left; PADDING-TOP: 10px; FONT: 12px/20px 'courier new'; PADDING-LEFT: 15px; MARGIN: 15px auto; BORDER-LEFT: rgb(221,221,221) 4px solid; WIDOWS: 1; LETTER-SPACING: normal; PADDING-RIGHT: 15px; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px; font-stretch: normal">// Bad, doesn't compile
switch (value) {
    case 1: int j = 1; break;
    case 2: int j = 2; break;
}
// Good
switch (value) {
    case 1: {
        final int j = 1;
        break;
    }
    case 2: {
        final int j = 2;
        break;
    }
    // Remember:
    default: 
        throw new ThreadDeath("That'll teach them");
}</PRE>
<P 
style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(68,68,68); PADDING-BOTTOM: 0px; TEXT-ALIGN: left; PADDING-TOP: 0px; FONT: 14px/25px 'microsoft yahei'; PADDING-LEFT: 0px; MARGIN: 0px 0px 15px; WIDOWS: 1; LETTER-SPACING: normal; PADDING-RIGHT: 0px; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">在switch语句中，每一个case语句的范围只有一行语句，事实上，这些case语句甚至不是真正的语句，他们就像goto语句中的跳转标记一样。</P>
<H2 
style="FONT-SIZE: 18px; FONT-FAMILY: 'microsoft yahei'; FONT-VARIANT: normal; WHITE-SPACE: normal; WORD-SPACING: 0px; BORDER-BOTTOM: rgb(238,238,238) 1px solid; TEXT-TRANSFORM: none; COLOR: rgb(34,34,34); PADDING-BOTTOM: 5px; FONT-STYLE: normal; TEXT-ALIGN: left; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 30px 0px 14px; WIDOWS: 1; LETTER-SPACING: normal; LINE-HEIGHT: 25px; PADDING-RIGHT: 0px; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">结论</H2>
<P 
style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(68,68,68); PADDING-BOTTOM: 0px; TEXT-ALIGN: left; PADDING-TOP: 0px; FONT: 14px/25px 'microsoft yahei'; PADDING-LEFT: 0px; MARGIN: 0px 0px 15px; WIDOWS: 1; LETTER-SPACING: normal; PADDING-RIGHT: 0px; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">偏执编程看起来似乎不可思议，有时，因为代码经常被证明是更详细一点，但并不是需求需要。你可能会想，“哦，这是绝不会发生的”，但正如我所说。经过20年左右的时间编程，你不希望只修复这些愚蠢的bug，因为编程语言是如此的陈旧的和有缺陷的。因为你知道…</P></body>
</html>
