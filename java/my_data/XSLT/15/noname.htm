<!-- saved from url=http://www.w3school.com.cn/xsl/xsl_client.asp -->
<script>
window.onerror = new Function("return(false);")
</script><!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">

<HTML xmlns="http://www.w3.org/1999/xhtml"><head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8"><META content="IE=7.0000" 
http-equiv="X-UA-Compatible">
<title>XSLT - 客户端</title><LINK rel=stylesheet type=text/css 
href="c3.css"></HEAD>

<BODY class=xml>

<DIV id=wrapper>

<DIV id=maincontent><!--StartFragment--><H1>XSLT - 客户端</H1>
<DIV id=tpn>
<UL class=prenext>
<LI class=pre><A href="http://www.w3school.com.cn/xsl/xsl_apply_templates.asp">Previous Page</A> </LI>
<LI class=next><A href="http://www.w3school.com.cn/xsl/xsl_server.asp">Next Page</A> </LI></UL></DIV>
<DIV id=intro>
<P><STRONG>如果您的浏览器支持 XSLT，那么在浏览器中它可被用来将文档转换为 XHTML。</STRONG></P></DIV>
<DIV>
<H2>JavaScript 解决方案</H2>
<P>在前面的章节，我们已向您讲解如何使用 XSLT 将某个 XML 文档转换为 XHTML。我们是通过以下途径完成这个工作的：向 XML 文件添加 XSL 
样式表，并通过浏览器完成转换。</P>
<P>即使这种方法的效果很好，在 XML 文件中包含样式表引用也不总是令人满意的（例如，在无法识别XSLT的浏览器这种方法就无法奏效）。</P>
<P>更通用的方法是使用 JavaScript 来完成转换。</P>
<P>通过使用 JavaScript，我们可以：</P>
<UL>
<LI>进行浏览器确认测试 
<LI>根据浏览器和使用者的需求来使用不同的样式表 </LI></UL>
<P><STRONG>这就是 XSLT 的魅力所在！XSLT 
的设计目的之一就是使一种格式到另一种格式的转换成为可能，同时支持不同类型的浏览器以及不同的用户需求。</STRONG></P>
<P>浏览器端的 XSLT 
转换一定会成为未来浏览器所执行的主要任务之一，同时我们也会看到其在特定的浏览器市场的增长（盲文、网络打印机，听觉设备，等等）。</P></DIV>
<DIV>
<H2>XML 文件和 XSL 文件</H2>
<P>请看这个在前面的章节已展示过的 XML 文档：</P><PRE>&lt;?xml version="1.0" encoding="ISO-8859-1"?&gt;
&lt;catalog&gt;
  &lt;cd&gt;
    &lt;title&gt;Empire Burlesque&lt;/title&gt;
    &lt;artist&gt;Bob Dylan&lt;/artist&gt;
    &lt;country&gt;USA&lt;/country&gt;
    &lt;company&gt;Columbia&lt;/company&gt;
    &lt;price&gt;10.90&lt;/price&gt;
    &lt;year&gt;1985&lt;/year&gt;
  &lt;/cd&gt;
.
.
.
&lt;/catalog&gt;</PRE>
<P><A href="http://www.w3school.com.cn/xsl/cdcatalog.xml">查看此 XML 文件</A>。</P>
<P>以及附随的 XSL 样式表：</P><PRE>&lt;?xml version="1.0" encoding="ISO-8859-1"?&gt;
&lt;xsl:stylesheet version="1.0"
xmlns:xsl="http://www.w3.org/1999/XSL/Transform"&gt;

&lt;xsl:template match="/"&gt;
  &lt;html&gt;
  &lt;body&gt;
    &lt;h2&gt;My CD Collection&lt;/h2&gt; 
    &lt;table border="1"&gt;
      &lt;tr bgcolor="#9acd32"&gt;
        &lt;th align="left"&gt;Title&lt;/th&gt; 
        &lt;th align="left"&gt;Artist&lt;/th&gt; 
      &lt;/tr&gt;
      &lt;xsl:for-each select="catalog/cd"&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;xsl:value-of select="title" /&gt;&lt;/td&gt;
        &lt;td&gt;&lt;xsl:value-of select="artist" /&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;/xsl:for-each&gt;
  &lt;/table&gt;
  &lt;/body&gt;
  &lt;/html&gt;
&lt;/xsl:template&gt;

&lt;/xsl:stylesheet&gt;</PRE>
<P><A href="http://www.w3school.com.cn/xsl/cdcatalog.xsl">查看此 XSL 文件</A>。</P>
<P><STRONG>请注意，这个 XML 文件没有包含对 XSL 文件的引用。</STRONG></P>
<P class=important><SPAN>重要事项：</SPAN>上面这句话意味着，XML 文件可使用多个不同的 XSL 
样式表来进行转换。</P></DIV>
<DIV>
<H2>在浏览器中把 XML 转换为 XHTML</H2>
<P>这是用于在客户端把 XML 文件转换为 XHTML 的源代码：</P><PRE>&lt;html&gt;
&lt;body&gt;

&lt;script type="text/javascript"&gt;

// Load XML 
var xml = new ActiveXObject("Microsoft.XMLDOM")
xml.async = false
xml.load("cdcatalog.xml")

// Load XSL
var xsl = new ActiveXObject("Microsoft.XMLDOM")
xsl.async = false
xsl.load("cdcatalog.xsl")

// Transform
document.write(xml.transformNode(xsl))

&lt;/script&gt;

&lt;/body&gt;
&lt;/html&gt;</PRE>
<P class=tip><SPAN>提示：</SPAN>假如您不了解如何编写 JavaScript，请学习我们的《<A title=JavaScript教程 
href="http://www.w3school.com.cn/js/index.asp">JavaScript 教程</A>》。</P>
<P>第一段代码创建了微软的 XML 解析器的一个实例，然后把 XML 文件载入了内存。第二段代码创建了解析器的另一个实例，然后把这个 XSL 
文件载入了内存。最后一行代码使用 XSL 文档转换了 XML 文档，并在浏览器中把结果作为 XHTML 显示出来。任务完成！</P>
<P><A href="http://www.w3school.com.cn/tiy/t.asp?f=xmle_cdcatalog">请看它在 IE 中如何工作</A>。</P></DIV>
<DIV id=bpn>
<UL class=prenext>
<LI class=pre><A href="http://www.w3school.com.cn/xsl/xsl_apply_templates.asp">Previous Page</A> </LI>
<LI class=next><A href="http://www.w3school.com.cn/xsl/xsl_server.asp">Next Page</A> </LI></UL></DIV><!--EndFragment--></DIV>
</DIV>
<P>&nbsp;</P>
<P>&nbsp;</P>
</BODY>
</HTML>