<!-- saved from url=http://www.w3school.com.cn/xsl/xsl_editxml.asp -->
<script>
window.onerror = new Function("return(false);")
</script><!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">

<HTML xmlns="http://www.w3.org/1999/xhtml"><head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8"><META content="IE=7.0000" 
http-equiv="X-UA-Compatible">
<title>XSLT - 编辑 XML</title><LINK rel=stylesheet type=text/css 
href="c3.css"></HEAD>

<BODY class=xml>

<DIV id=wrapper>

<DIV id=maincontent><!--StartFragment--><H1>XSLT - 编辑 XML</H1>
<DIV id=tpn>
<UL class=prenext>
<LI class=pre><A href="http://www.w3school.com.cn/xsl/xsl_server.asp">Previous Page</A> </LI>
<LI class=next><A href="http://www.w3school.com.cn/xsl/xsl_editors.asp">Next Page</A> </LI></UL></DIV>
<DIV id=intro>
<P><STRONG>存储在 XML 文件中的数据可通过因特网浏览器进行编辑。</STRONG></P></DIV>
<DIV>
<H2>打开、编辑并保存 XML</H2>
<P>现在，我们会为您展示如何打开、编辑及保存存储于服务器上的 XML 文件。</P>
<P>我们将使用 XSL 把 XML 文档转换到一个 HTML 表单中。XML 元素的值会被写到 HTML 表单中的 HTML 
输入域。此表单是可编辑的。在被编辑完成后，数据会被提交回服务器，XML 文件会得到更新（这部分由 ASP 完成）。</P></DIV>
<DIV>
<H2>XML 文件和 XSL 文件</H2>
<P>首先，请看将被使用的 XML 文档 ("tool.xml")：</P><PRE>&lt;?xml version="1.0" encoding="ISO-8859-1"?&gt;
&lt;tool&gt;
  &lt;field id="prodName"&gt;
    &lt;value&gt;HAMMER HG2606&lt;/value&gt; 
  &lt;/field&gt;
  &lt;field id="prodNo"&gt;
    &lt;value&gt;32456240&lt;/value&gt; 
  &lt;/field&gt;
  &lt;field id="price"&gt;
    &lt;value&gt;$30.00&lt;/value&gt; 
  &lt;/field&gt;
&lt;/tool&gt;</PRE>
<P><A href="http://www.w3school.com.cn/xsl/tool.xml">查看 XML 文件</A>。</P>
<P>接着，请看下面的样式表("tool.xsl")：</P><PRE>&lt;?xml version="1.0" encoding="ISO-8859-1"?&gt;
&lt;xsl:stylesheet version="1.0"
xmlns:xsl="http://www.w3.org/1999/XSL/Transform"&gt;

&lt;xsl:template match="/"&gt;
&lt;html&gt;
&lt;body&gt;
&lt;form method="post" action="edittool.asp"&gt;
&lt;h2&gt;Tool Information (edit):&lt;/h2&gt;
&lt;table border="0"&gt;
&lt;xsl:for-each select="tool/field"&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;xsl:value-of select="@id"/&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;input type="text"&gt;
&lt;xsl:attribute name="id"&gt;
  &lt;xsl:value-of select="@id" /&gt;
&lt;/xsl:attribute&gt;
&lt;xsl:attribute name="name"&gt;
  &lt;xsl:value-of select="@id" /&gt;
&lt;/xsl:attribute&gt;
&lt;xsl:attribute name="value"&gt;
  &lt;xsl:value-of select="value" /&gt;
&lt;/xsl:attribute&gt;
&lt;/input&gt; 
&lt;/td&gt;
&lt;/tr&gt;
&lt;/xsl:for-each&gt;
&lt;/table&gt;
&lt;br /&gt;
&lt;input type="submit" id="btn_sub" name="btn_sub" value="Submit" /&gt;
&lt;input type="reset" id="btn_res" name="btn_res" value="Reset" /&gt;
&lt;/form&gt;
&lt;/body&gt;
&lt;/html&gt;
&lt;/xsl:template&gt;
&lt;/xsl:stylesheet&gt;</PRE>
<P><A href="http://www.w3school.com.cn/xsl/tool.xsl">查看 XSL 文件</A>。</P>
<P>上面这个 XSL 文件会循环遍历 XML 文件中的元素，并为每个 XML "field" 元素创建一个输入域。field 元素的 id 
属性的值被添加到每个 HTML 输入域的 id 和 name 属性。"value" 元素的值被添加到每个 HTML 输入域的 "value" 
属性。结果是，可以得到一个包含 XML 文件中值的可编辑的 HTML 表单。</P>
<P>然后，我们还有第二个样式表："tool_updated.xsl"。这个 XSL 文件会被用来显示已更新的 XML 数据。这个样式表不会输出可编辑 HTML 
表单，而是一个静态的 HTML 表格：</P><PRE>&lt;?xml version="1.0" encoding="ISO-8859-1"?&gt;
&lt;xsl:stylesheet version="1.0"
xmlns:xsl="http://www.w3.org/1999/XSL/Transform"&gt;

&lt;xsl:template match="/"&gt;
&lt;html&gt;
&lt;body&gt;
&lt;h2&gt;Updated Tool Information:&lt;/h2&gt;
&lt;table border="1"&gt;
&lt;xsl:for-each select="tool/field"&gt;
&lt;tr&gt;
&lt;td&gt;&lt;xsl:value-of select="@id" /&gt;&lt;/td&gt;
&lt;td&gt;&lt;xsl:value-of select="value" /&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/xsl:for-each&gt;
&lt;/table&gt;
&lt;/body&gt;
&lt;/html&gt;
&lt;/xsl:template&gt;

&lt;/xsl:stylesheet&gt;</PRE>
<P><A href="http://www.w3school.com.cn/xsl/tool_updated.xsl">查看 XSL 文件</A>。</P></DIV>
<DIV>
<H2>ASP 文件</H2>
<P>在上面 "tool.xsl" 文件中， HTML 表单的 action 属性的值是 "edittool.asp" 。</P>
<P>"edittool.asp" 页面包含两个函数：loadFile() 载入并转换 XML 文件，updateFile() 函数更新 XML 文件：</P><PRE>&lt;%
function loadFile(xmlfile,xslfile)
Dim xmlDoc,xslDoc

<SPAN>'加载 XML 文件</SPAN>
set xmlDoc = Server.CreateObject("Microsoft.XMLDOM")
xmlDoc.async = false
xmlDoc.load(xmlfile)

<SPAN>'加载 XSL 文件</SPAN>
set xslDoc = Server.CreateObject("Microsoft.XMLDOM")
xslDoc.async = false
xslDoc.load(xslfile)

<SPAN>'转换文件</SPAN>
Response.Write(xmlDoc.transformNode(xslDoc))
end function

function updateFile(xmlfile)
Dim xmlDoc,rootEl,f
Dim i

<SPAN>'加载 XML 文件</SPAN>
set xmlDoc = Server.CreateObject("Microsoft.XMLDOM")
xmlDoc.async = false
xmlDoc.load(xmlfile)

<SPAN>'设置 rootEl 变量为根元素</SPAN>
Set rootEl = xmlDoc.documentElement

<SPAN>'循环遍历 form 集</SPAN>
for i = 1 To Request.Form.Count
   <SPAN>'除去表单中的按钮元素</SPAN>
   if instr(1,Request.Form.Key(i),"btn_")=0 then
   <SPAN>'selectSingleNode 方法可查询匹配某个查询的 XML 文件中的某个单一节点。
   '此查询会请求 value 元素，此 value 元素是 field 元素的子元素，
   '而此 field 元素拥有可匹配表单集中当前 key 值的 id 属性。
   '如果存在匹配，则设置 text 属性为表单集中当前域的值。</SPAN>
   set f = rootEl.selectSingleNode("field[@id='" &amp; _
   Request.Form.Key(i) &amp; "']/value")
   f.Text = Request.Form(i)
   end if
next

<SPAN>'保存已修改的 XML 文件</SPAN>
xmlDoc.save xmlfile

<SPAN>'释放所有的对象引用</SPAN>
set xmlDoc=nothing
set rootEl=nothing
set f=nothing

<SPAN>'通过一个样式表加载已修改的 XML 文件，这样客户端就可以看到所编辑的信息</SPAN>
loadFile xmlfile,server.MapPath("tool_updated.xsl")
end function

<SPAN>'如果表单已被提交，则更新XML文件并显示结果，如果没有被提交，则转换此 XML 文件以供编辑</SPAN>
if Request.Form("btn_sub")="" then
loadFile server.MapPath("tool.xml"),server.MapPath("tool.xsl")
else
updateFile server.MapPath("tool.xml")
end if
%&gt;</PRE>
<P class=tip><SPAN>提示：</SPAN>假如您不了解如何编写 ASP，请学习我们的《<A href="http://www.w3school.com.cn/asp/index.asp">ASP 
教程</A>》。</P>
<P class=note><SPAN>注释：</SPAN>我们正在转换并更新位于服务器上的 XML 
文件。这是一个跨平台的解决方案。客户端仅能获得从服务器返回的 HTML - 而 HTML 可运行于任何浏览器。</P></DIV>
<DIV id=bpn>
<UL class=prenext>
<LI class=pre><A href="http://www.w3school.com.cn/xsl/xsl_server.asp">Previous Page</A> </LI>
<LI class=next><A href="http://www.w3school.com.cn/xsl/xsl_editors.asp">Next Page</A> </LI></UL></DIV><!--EndFragment--></DIV>
</DIV>
<P>&nbsp;</P>
<P>&nbsp;</P>
</BODY>
</HTML>