<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
<title>Tomcat如何实现WebSocket</title>
<meta name="GENERATOR" content="WinCHM">
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<style>
html,body { 
	/* Default Font */
	font-family: Arial, Helvetica, sans-serif;
	font-size: 11pt;
}
</style>

</head>

<body>
<P 
style='BOX-SIZING: border-box; FONT-SIZE: 14px; FONT-FAMILY: "microsoft yahei"; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FONT-WEIGHT: normal; COLOR: rgb(85,85,85); PADDING-BOTTOM: 0px; FONT-STYLE: normal; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px 0px 1.1em; ORPHANS: 2; WIDOWS: 2; LETTER-SPACING: normal; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px; font-variant-ligatures: normal; font-variant-caps: normal'>WebSocket协议属于HTML5标准，越来越多浏览器已经原生支持WebSocket，它能让客户端和服务端实现双向通信。在客户端和服务器端建立一条WebSocket连接后，服务器端消息可直接发送到客户端，从而打破传统的请求响应模式，避免了无意义的请求。比如传统的方式可能会使用AJAX不断请求服务器端，而WebSocket则可以直接发送数据到客户端且客户端不必请求。同时，由于有了浏览器的原生支持，编写客户端应用程序也变得更加便捷且不必依赖第三方插件。另外，WebSocket协议摒弃了HTTP协议繁琐的请求头，而是以数据帧的方式进行传输，效率更高。</P>
<P 
style='BOX-SIZING: border-box; FONT-SIZE: 14px; FONT-FAMILY: "microsoft yahei"; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FONT-WEIGHT: normal; COLOR: rgb(85,85,85); PADDING-BOTTOM: 0px; FONT-STYLE: normal; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px 0px 1.1em; ORPHANS: 2; WIDOWS: 2; LETTER-SPACING: normal; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px; font-variant-ligatures: normal; font-variant-caps: normal'>图为WebSocket协议通信的过程，首先客户端会发送一个握手包告诉服务器端我想升级成WebSocket，不知道你服务器端是否同意，这时如果服务器端支持WebSocket协议则会返回一个握手包告诉客户端没问题，升级已确认。然后就成功建立起了一条WebSocket连接，该连接支持双向通信，并且使用WebSocket协议的数据帧格式发送消息。</P>
<P 
style='BOX-SIZING: border-box; FONT-SIZE: 14px; FONT-FAMILY: "microsoft yahei"; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FONT-WEIGHT: normal; COLOR: rgb(85,85,85); PADDING-BOTTOM: 0px; FONT-STYLE: normal; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px 0px 1.1em; ORPHANS: 2; WIDOWS: 2; LETTER-SPACING: normal; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px; font-variant-ligatures: normal; font-variant-caps: normal'><IMG 
title="" 
style="BOX-SIZING: border-box; MAX-WIDTH: 602px; BORDER-TOP: medium none; HEIGHT: auto; BORDER-RIGHT: medium none; BORDER-BOTTOM: medium none; BORDER-LEFT: medium none; MAX-HEIGHT: 100%" 
alt=这里写图片描述 src="http://img.blog.csdn.net/20161125100113234"></P>
<P 
style='BOX-SIZING: border-box; FONT-SIZE: 14px; FONT-FAMILY: "microsoft yahei"; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FONT-WEIGHT: normal; COLOR: rgb(85,85,85); PADDING-BOTTOM: 0px; FONT-STYLE: normal; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px 0px 1.1em; ORPHANS: 2; WIDOWS: 2; LETTER-SPACING: normal; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px; font-variant-ligatures: normal; font-variant-caps: normal'>握手过程需要说明下，为了让WebSocket协议能和现有HTTP协议Web架构互相兼容，所以WebSocket协议的握手要基于HTTP协议，比如客户端会发送类似如下的HTTP报文到服务器端请求升级为WebSocket协议，其中包含的Upgrade: 
websocket就是告诉服务器端我想升级协议：</P><PRE class=prettyprint style='BOX-SIZING: border-box; WORD-WRAP: break-word; FONT-SIZE: 14px; BORDER-TOP: 1px solid; FONT-FAMILY: "Source Code Pro", monospace; BORDER-RIGHT: 1px solid; WHITE-SPACE: nowrap; WORD-SPACING: 0px; OVERFLOW-X: auto; OVERFLOW-Y: hidden; BORDER-BOTTOM: 1px solid; POSITION: relative; TEXT-TRANSFORM: none; WORD-BREAK: break-all; FONT-WEIGHT: normal; COLOR: rgb(51,51,51); PADDING-BOTTOM: 5px; FONT-STYLE: normal; PADDING-TOP: 5px; PADDING-LEFT: 60px; MARGIN: 0px 0px 1.1em; BORDER-LEFT: 1px solid; ORPHANS: 2; WIDOWS: 2; DISPLAY: block; LETTER-SPACING: normal; LINE-HEIGHT: 1.45; PADDING-RIGHT: 5px; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px; border-radius: 0px; font-variant-ligatures: normal; font-variant-caps: normal' name="code"><CODE class="hljs lasso has-numbering" style='BOX-SIZING: border-box; WORD-WRAP: normal; FONT-FAMILY: "Source Code Pro", monospace; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: pre; COLOR: ; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; DISPLAY: block; PADDING-RIGHT: 0px; border-radius: 0px'>    GET ws:<SPAN class=hljs-comment style="BOX-SIZING: border-box; COLOR: rgb(136,0,0)">//localhost:8080/hello HTTP/1.1</SPAN>
    Origin: http:<SPAN class=hljs-comment style="BOX-SIZING: border-box; COLOR: rgb(136,0,0)">//localhost:8080</SPAN>
    Connection: Upgrade
    Host: localhost:<SPAN class=hljs-number style="BOX-SIZING: border-box; COLOR: rgb(0,102,102)">8080</SPAN>
    Sec<SPAN class=hljs-attribute style="BOX-SIZING: border-box">-WebSocket</SPAN><SPAN class=hljs-attribute style="BOX-SIZING: border-box">-Key</SPAN>: uRovscZjNol/umbTt5uKmw<SPAN class=hljs-subst style="BOX-SIZING: border-box; COLOR: rgb(0,0,0)">==</SPAN>
    Upgrade: websocket
    Sec<SPAN class=hljs-attribute style="BOX-SIZING: border-box">-WebSocket</SPAN><SPAN class=hljs-attribute style="BOX-SIZING: border-box">-Version</SPAN>: <SPAN class=hljs-number style="BOX-SIZING: border-box; COLOR: rgb(0,102,102)">13</SPAN></CODE><UL class=pre-numbering style="LIST-STYLE-TYPE: none; BOX-SIZING: border-box; BORDER-RIGHT: rgb(221,221,221) 1px solid; WIDTH: 50px; POSITION: absolute; PADDING-BOTTOM: 40px; TEXT-ALIGN: right; PADDING-TOP: 6px; PADDING-LEFT: 0px; LEFT: 0px; MARGIN: 0px; TOP: 0px; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(238,238,238)"><LI style="BOX-SIZING: border-box; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 5px; PADDING-RIGHT: 5px">1<LI style="BOX-SIZING: border-box; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 5px; PADDING-RIGHT: 5px">2<LI style="BOX-SIZING: border-box; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 5px; PADDING-RIGHT: 5px">3<LI style="BOX-SIZING: border-box; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 5px; PADDING-RIGHT: 5px">4<LI style="BOX-SIZING: border-box; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 5px; PADDING-RIGHT: 5px">5<LI style="BOX-SIZING: border-box; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 5px; PADDING-RIGHT: 5px">6<LI style="BOX-SIZING: border-box; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 5px; PADDING-RIGHT: 5px">7</LI></UL><UL class=pre-numbering style="LIST-STYLE-TYPE: none; BOX-SIZING: border-box; BORDER-RIGHT: rgb(221,221,221) 1px solid; WIDTH: 50px; POSITION: absolute; PADDING-BOTTOM: 40px; TEXT-ALIGN: right; PADDING-TOP: 6px; PADDING-LEFT: 0px; LEFT: 0px; MARGIN: 0px; TOP: 0px; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(238,238,238)"><LI style="BOX-SIZING: border-box; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 5px; PADDING-RIGHT: 5px">1<LI style="BOX-SIZING: border-box; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 5px; PADDING-RIGHT: 5px">2<LI style="BOX-SIZING: border-box; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 5px; PADDING-RIGHT: 5px">3<LI style="BOX-SIZING: border-box; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 5px; PADDING-RIGHT: 5px">4<LI style="BOX-SIZING: border-box; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 5px; PADDING-RIGHT: 5px">5<LI style="BOX-SIZING: border-box; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 5px; PADDING-RIGHT: 5px">6<LI style="BOX-SIZING: border-box; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 5px; PADDING-RIGHT: 5px">7</LI></UL></PRE>
<P 
style='BOX-SIZING: border-box; FONT-SIZE: 14px; FONT-FAMILY: "microsoft yahei"; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FONT-WEIGHT: normal; COLOR: rgb(85,85,85); PADDING-BOTTOM: 0px; FONT-STYLE: normal; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px 0px 1.1em; ORPHANS: 2; WIDOWS: 2; LETTER-SPACING: normal; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px; font-variant-ligatures: normal; font-variant-caps: normal'>此时如果服务器端支持WebSocket协议，则它会发送一个同意客户端升级协议的报文，具体报文类似如下，其中Upgrade: 
websocket就是告诉客户端我同意你升级协议：</P><PRE class=prettyprint style='BOX-SIZING: border-box; WORD-WRAP: break-word; FONT-SIZE: 14px; BORDER-TOP: 1px solid; FONT-FAMILY: "Source Code Pro", monospace; BORDER-RIGHT: 1px solid; WHITE-SPACE: nowrap; WORD-SPACING: 0px; OVERFLOW-X: auto; OVERFLOW-Y: hidden; BORDER-BOTTOM: 1px solid; POSITION: relative; TEXT-TRANSFORM: none; WORD-BREAK: break-all; FONT-WEIGHT: normal; COLOR: rgb(51,51,51); PADDING-BOTTOM: 5px; FONT-STYLE: normal; PADDING-TOP: 5px; PADDING-LEFT: 60px; MARGIN: 0px 0px 1.1em; BORDER-LEFT: 1px solid; ORPHANS: 2; WIDOWS: 2; DISPLAY: block; LETTER-SPACING: normal; LINE-HEIGHT: 1.45; PADDING-RIGHT: 5px; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px; border-radius: 0px; font-variant-ligatures: normal; font-variant-caps: normal' name="code"><CODE class="hljs lasso has-numbering" style='BOX-SIZING: border-box; WORD-WRAP: normal; FONT-FAMILY: "Source Code Pro", monospace; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: pre; COLOR: ; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; DISPLAY: block; PADDING-RIGHT: 0px; border-radius: 0px'>    HTTP/<SPAN class=hljs-number style="BOX-SIZING: border-box; COLOR: rgb(0,102,102)">1.1</SPAN> <SPAN class=hljs-number style="BOX-SIZING: border-box; COLOR: rgb(0,102,102)">101</SPAN> WebSocket Protocol Handshake
    <SPAN class=hljs-built_in style="BOX-SIZING: border-box; COLOR: rgb(102,0,102)">Date</SPAN>: Fri, <SPAN class=hljs-number style="BOX-SIZING: border-box; COLOR: rgb(0,102,102)">10</SPAN> Feb <SPAN class=hljs-number style="BOX-SIZING: border-box; COLOR: rgb(0,102,102)">2016</SPAN> <SPAN class=hljs-number style="BOX-SIZING: border-box; COLOR: rgb(0,102,102)">17</SPAN>:<SPAN class=hljs-number style="BOX-SIZING: border-box; COLOR: rgb(0,102,102)">38</SPAN>:<SPAN class=hljs-number style="BOX-SIZING: border-box; COLOR: rgb(0,102,102)">18</SPAN> GMT
    Connection: Upgrade
    Server: Kaazing Gateway
    Upgrade: WebSocket
    Sec<SPAN class=hljs-attribute style="BOX-SIZING: border-box">-WebSocket</SPAN><SPAN class=hljs-attribute style="BOX-SIZING: border-box">-Accept</SPAN>: rLHCkw/SKsO9GAH/ZSFhBATDKrU<SPAN class=hljs-subst style="BOX-SIZING: border-box; COLOR: rgb(0,0,0)">=</SPAN></CODE><UL class=pre-numbering style="LIST-STYLE-TYPE: none; BOX-SIZING: border-box; BORDER-RIGHT: rgb(221,221,221) 1px solid; WIDTH: 50px; POSITION: absolute; PADDING-BOTTOM: 40px; TEXT-ALIGN: right; PADDING-TOP: 6px; PADDING-LEFT: 0px; LEFT: 0px; MARGIN: 0px; TOP: 0px; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(238,238,238)"><LI style="BOX-SIZING: border-box; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 5px; PADDING-RIGHT: 5px">1<LI style="BOX-SIZING: border-box; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 5px; PADDING-RIGHT: 5px">2<LI style="BOX-SIZING: border-box; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 5px; PADDING-RIGHT: 5px">3<LI style="BOX-SIZING: border-box; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 5px; PADDING-RIGHT: 5px">4<LI style="BOX-SIZING: border-box; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 5px; PADDING-RIGHT: 5px">5<LI style="BOX-SIZING: border-box; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 5px; PADDING-RIGHT: 5px">6</LI></UL><UL class=pre-numbering style="LIST-STYLE-TYPE: none; BOX-SIZING: border-box; BORDER-RIGHT: rgb(221,221,221) 1px solid; WIDTH: 50px; POSITION: absolute; PADDING-BOTTOM: 40px; TEXT-ALIGN: right; PADDING-TOP: 6px; PADDING-LEFT: 0px; LEFT: 0px; MARGIN: 0px; TOP: 0px; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(238,238,238)"><LI style="BOX-SIZING: border-box; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 5px; PADDING-RIGHT: 5px">1<LI style="BOX-SIZING: border-box; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 5px; PADDING-RIGHT: 5px">2<LI style="BOX-SIZING: border-box; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 5px; PADDING-RIGHT: 5px">3<LI style="BOX-SIZING: border-box; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 5px; PADDING-RIGHT: 5px">4<LI style="BOX-SIZING: border-box; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 5px; PADDING-RIGHT: 5px">5<LI style="BOX-SIZING: border-box; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 5px; PADDING-RIGHT: 5px">6</LI></UL></PRE>
<P 
style='BOX-SIZING: border-box; FONT-SIZE: 14px; FONT-FAMILY: "microsoft yahei"; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FONT-WEIGHT: normal; COLOR: rgb(85,85,85); PADDING-BOTTOM: 0px; FONT-STYLE: normal; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px 0px 1.1em; ORPHANS: 2; WIDOWS: 2; LETTER-SPACING: normal; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px; font-variant-ligatures: normal; font-variant-caps: normal'>完成如上握手后，HTTP协议连接就被打破，接下去则是开始使用WebSocket协议进行双方通信，这条连接还是原来的那条TCP/IP连接，端口也还是原来的80或443。</P>
<P 
style='BOX-SIZING: border-box; FONT-SIZE: 14px; FONT-FAMILY: "microsoft yahei"; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FONT-WEIGHT: normal; COLOR: rgb(85,85,85); PADDING-BOTTOM: 0px; FONT-STYLE: normal; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px 0px 1.1em; ORPHANS: 2; WIDOWS: 2; LETTER-SPACING: normal; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px; font-variant-ligatures: normal; font-variant-caps: normal'>下面举一个Tomcat中编写WebSocket的简单例子：</P><PRE class=prettyprint style='BOX-SIZING: border-box; WORD-WRAP: break-word; FONT-SIZE: 14px; BORDER-TOP: 1px solid; FONT-FAMILY: "Source Code Pro", monospace; BORDER-RIGHT: 1px solid; WHITE-SPACE: nowrap; WORD-SPACING: 0px; OVERFLOW-X: auto; OVERFLOW-Y: hidden; BORDER-BOTTOM: 1px solid; POSITION: relative; TEXT-TRANSFORM: none; WORD-BREAK: break-all; FONT-WEIGHT: normal; COLOR: rgb(51,51,51); PADDING-BOTTOM: 5px; FONT-STYLE: normal; PADDING-TOP: 5px; PADDING-LEFT: 60px; MARGIN: 0px 0px 1.1em; BORDER-LEFT: 1px solid; ORPHANS: 2; WIDOWS: 2; DISPLAY: block; LETTER-SPACING: normal; LINE-HEIGHT: 1.45; PADDING-RIGHT: 5px; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px; border-radius: 0px; font-variant-ligatures: normal; font-variant-caps: normal' name="code"><CODE class="hljs java has-numbering" style='BOX-SIZING: border-box; WORD-WRAP: normal; FONT-FAMILY: "Source Code Pro", monospace; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: pre; COLOR: ; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; DISPLAY: block; PADDING-RIGHT: 0px; border-radius: 0px'><SPAN class=hljs-keyword style="BOX-SIZING: border-box; COLOR: rgb(0,0,136)">public</SPAN> <SPAN class=hljs-class style="BOX-SIZING: border-box"><SPAN class=hljs-keyword style="BOX-SIZING: border-box; COLOR: rgb(0,0,136)">class</SPAN> <SPAN class=hljs-title style="BOX-SIZING: border-box; COLOR: rgb(102,0,102)">HelloWebSocketServlet</SPAN> <SPAN class=hljs-keyword style="BOX-SIZING: border-box; COLOR: rgb(0,0,136)">extends</SPAN> <SPAN class=hljs-title style="BOX-SIZING: border-box; COLOR: rgb(102,0,102)">WebSocketServlet</SPAN> {</SPAN>
    <SPAN class=hljs-keyword style="BOX-SIZING: border-box; COLOR: rgb(0,0,136)">private</SPAN> <SPAN class=hljs-keyword style="BOX-SIZING: border-box; COLOR: rgb(0,0,136)">static</SPAN> List&lt;MessageInbound&gt; socketList = <SPAN class=hljs-keyword style="BOX-SIZING: border-box; COLOR: rgb(0,0,136)">new</SPAN> ArrayList&lt;MessageInbound&gt;();

    <SPAN class=hljs-keyword style="BOX-SIZING: border-box; COLOR: rgb(0,0,136)">protected</SPAN> StreamInbound <SPAN class=hljs-title style="BOX-SIZING: border-box">createWebSocketInbound</SPAN>(String subProtocol,HttpServletRequest request){
        <SPAN class=hljs-keyword style="BOX-SIZING: border-box; COLOR: rgb(0,0,136)">return</SPAN> <SPAN class=hljs-keyword style="BOX-SIZING: border-box; COLOR: rgb(0,0,136)">new</SPAN> WebSocketMessageInbound();
    }

    <SPAN class=hljs-keyword style="BOX-SIZING: border-box; COLOR: rgb(0,0,136)">public</SPAN> <SPAN class=hljs-class style="BOX-SIZING: border-box"><SPAN class=hljs-keyword style="BOX-SIZING: border-box; COLOR: rgb(0,0,136)">class</SPAN> <SPAN class=hljs-title style="BOX-SIZING: border-box; COLOR: rgb(102,0,102)">WebSocketMessageInbound</SPAN> <SPAN class=hljs-keyword style="BOX-SIZING: border-box; COLOR: rgb(0,0,136)">extends</SPAN> <SPAN class=hljs-title style="BOX-SIZING: border-box; COLOR: rgb(102,0,102)">MessageInbound</SPAN>{</SPAN>
        <SPAN class=hljs-keyword style="BOX-SIZING: border-box; COLOR: rgb(0,0,136)">protected</SPAN> <SPAN class=hljs-keyword style="BOX-SIZING: border-box; COLOR: rgb(0,0,136)">void</SPAN> <SPAN class=hljs-title style="BOX-SIZING: border-box">onClose</SPAN>(<SPAN class=hljs-keyword style="BOX-SIZING: border-box; COLOR: rgb(0,0,136)">int</SPAN> status){
            <SPAN class=hljs-keyword style="BOX-SIZING: border-box; COLOR: rgb(0,0,136)">super</SPAN>.onClose(status);
            socketList.remove(<SPAN class=hljs-keyword style="BOX-SIZING: border-box; COLOR: rgb(0,0,136)">this</SPAN>);            
        }
        <SPAN class=hljs-keyword style="BOX-SIZING: border-box; COLOR: rgb(0,0,136)">protected</SPAN> <SPAN class=hljs-keyword style="BOX-SIZING: border-box; COLOR: rgb(0,0,136)">void</SPAN> <SPAN class=hljs-title style="BOX-SIZING: border-box">onOpen</SPAN>(WsOutbound outbound){
            <SPAN class=hljs-keyword style="BOX-SIZING: border-box; COLOR: rgb(0,0,136)">super</SPAN>.onOpen(outbound);
            socketList.add(<SPAN class=hljs-keyword style="BOX-SIZING: border-box; COLOR: rgb(0,0,136)">this</SPAN>);
        }
        <SPAN class=hljs-annotation style="BOX-SIZING: border-box; COLOR: rgb(155,133,157)">@Override</SPAN>
        <SPAN class=hljs-keyword style="BOX-SIZING: border-box; COLOR: rgb(0,0,136)">protected</SPAN> <SPAN class=hljs-keyword style="BOX-SIZING: border-box; COLOR: rgb(0,0,136)">void</SPAN> <SPAN class=hljs-title style="BOX-SIZING: border-box">onBinaryMessage</SPAN>(ByteBuffer message) <SPAN class=hljs-keyword style="BOX-SIZING: border-box; COLOR: rgb(0,0,136)">throws</SPAN> IOException {

        }
        <SPAN class=hljs-annotation style="BOX-SIZING: border-box; COLOR: rgb(155,133,157)">@Override</SPAN>
        <SPAN class=hljs-keyword style="BOX-SIZING: border-box; COLOR: rgb(0,0,136)">protected</SPAN> <SPAN class=hljs-keyword style="BOX-SIZING: border-box; COLOR: rgb(0,0,136)">void</SPAN> <SPAN class=hljs-title style="BOX-SIZING: border-box">onTextMessage</SPAN>(CharBuffer message) <SPAN class=hljs-keyword style="BOX-SIZING: border-box; COLOR: rgb(0,0,136)">throws</SPAN> IOException {
            <SPAN class=hljs-keyword style="BOX-SIZING: border-box; COLOR: rgb(0,0,136)">for</SPAN>(MessageInbound messageInbound : socketList){
                CharBuffer buffer = CharBuffer.wrap(message);
                WsOutbound outbound = messageInbound.getWsOutbound();
                outbound.writeTextMessage(buffer);
                outbound.flush();               
            }
        }
    }
}</CODE><UL class=pre-numbering style="LIST-STYLE-TYPE: none; BOX-SIZING: border-box; BORDER-RIGHT: rgb(221,221,221) 1px solid; WIDTH: 50px; POSITION: absolute; PADDING-BOTTOM: 40px; TEXT-ALIGN: right; PADDING-TOP: 6px; PADDING-LEFT: 0px; LEFT: 0px; MARGIN: 0px; TOP: 0px; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(238,238,238)"><LI style="BOX-SIZING: border-box; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 5px; PADDING-RIGHT: 5px">1<LI style="BOX-SIZING: border-box; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 5px; PADDING-RIGHT: 5px">2<LI style="BOX-SIZING: border-box; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 5px; PADDING-RIGHT: 5px">3<LI style="BOX-SIZING: border-box; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 5px; PADDING-RIGHT: 5px">4<LI style="BOX-SIZING: border-box; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 5px; PADDING-RIGHT: 5px">5<LI style="BOX-SIZING: border-box; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 5px; PADDING-RIGHT: 5px">6<LI style="BOX-SIZING: border-box; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 5px; PADDING-RIGHT: 5px">7<LI style="BOX-SIZING: border-box; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 5px; PADDING-RIGHT: 5px">8<LI style="BOX-SIZING: border-box; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 5px; PADDING-RIGHT: 5px">9<LI style="BOX-SIZING: border-box; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 5px; PADDING-RIGHT: 5px">10<LI style="BOX-SIZING: border-box; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 5px; PADDING-RIGHT: 5px">11<LI style="BOX-SIZING: border-box; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 5px; PADDING-RIGHT: 5px">12<LI style="BOX-SIZING: border-box; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 5px; PADDING-RIGHT: 5px">13<LI style="BOX-SIZING: border-box; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 5px; PADDING-RIGHT: 5px">14<LI style="BOX-SIZING: border-box; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 5px; PADDING-RIGHT: 5px">15<LI style="BOX-SIZING: border-box; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 5px; PADDING-RIGHT: 5px">16<LI style="BOX-SIZING: border-box; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 5px; PADDING-RIGHT: 5px">17<LI style="BOX-SIZING: border-box; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 5px; PADDING-RIGHT: 5px">18<LI style="BOX-SIZING: border-box; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 5px; PADDING-RIGHT: 5px">19<LI style="BOX-SIZING: border-box; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 5px; PADDING-RIGHT: 5px">20<LI style="BOX-SIZING: border-box; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 5px; PADDING-RIGHT: 5px">21<LI style="BOX-SIZING: border-box; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 5px; PADDING-RIGHT: 5px">22<LI style="BOX-SIZING: border-box; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 5px; PADDING-RIGHT: 5px">23<LI style="BOX-SIZING: border-box; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 5px; PADDING-RIGHT: 5px">24<LI style="BOX-SIZING: border-box; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 5px; PADDING-RIGHT: 5px">25<LI style="BOX-SIZING: border-box; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 5px; PADDING-RIGHT: 5px">26<LI style="BOX-SIZING: border-box; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 5px; PADDING-RIGHT: 5px">27<LI style="BOX-SIZING: border-box; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 5px; PADDING-RIGHT: 5px">28<LI style="BOX-SIZING: border-box; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 5px; PADDING-RIGHT: 5px">29<LI style="BOX-SIZING: border-box; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 5px; PADDING-RIGHT: 5px">30<LI style="BOX-SIZING: border-box; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 5px; PADDING-RIGHT: 5px">31</LI></UL><UL class=pre-numbering style="LIST-STYLE-TYPE: none; BOX-SIZING: border-box; BORDER-RIGHT: rgb(221,221,221) 1px solid; WIDTH: 50px; POSITION: absolute; PADDING-BOTTOM: 40px; TEXT-ALIGN: right; PADDING-TOP: 6px; PADDING-LEFT: 0px; LEFT: 0px; MARGIN: 0px; TOP: 0px; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(238,238,238)"><LI style="BOX-SIZING: border-box; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 5px; PADDING-RIGHT: 5px">1<LI style="BOX-SIZING: border-box; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 5px; PADDING-RIGHT: 5px">2<LI style="BOX-SIZING: border-box; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 5px; PADDING-RIGHT: 5px">3<LI style="BOX-SIZING: border-box; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 5px; PADDING-RIGHT: 5px">4<LI style="BOX-SIZING: border-box; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 5px; PADDING-RIGHT: 5px">5<LI style="BOX-SIZING: border-box; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 5px; PADDING-RIGHT: 5px">6<LI style="BOX-SIZING: border-box; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 5px; PADDING-RIGHT: 5px">7<LI style="BOX-SIZING: border-box; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 5px; PADDING-RIGHT: 5px">8<LI style="BOX-SIZING: border-box; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 5px; PADDING-RIGHT: 5px">9<LI style="BOX-SIZING: border-box; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 5px; PADDING-RIGHT: 5px">10<LI style="BOX-SIZING: border-box; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 5px; PADDING-RIGHT: 5px">11<LI style="BOX-SIZING: border-box; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 5px; PADDING-RIGHT: 5px">12<LI style="BOX-SIZING: border-box; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 5px; PADDING-RIGHT: 5px">13<LI style="BOX-SIZING: border-box; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 5px; PADDING-RIGHT: 5px">14<LI style="BOX-SIZING: border-box; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 5px; PADDING-RIGHT: 5px">15<LI style="BOX-SIZING: border-box; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 5px; PADDING-RIGHT: 5px">16<LI style="BOX-SIZING: border-box; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 5px; PADDING-RIGHT: 5px">17<LI style="BOX-SIZING: border-box; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 5px; PADDING-RIGHT: 5px">18<LI style="BOX-SIZING: border-box; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 5px; PADDING-RIGHT: 5px">19<LI style="BOX-SIZING: border-box; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 5px; PADDING-RIGHT: 5px">20<LI style="BOX-SIZING: border-box; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 5px; PADDING-RIGHT: 5px">21<LI style="BOX-SIZING: border-box; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 5px; PADDING-RIGHT: 5px">22<LI style="BOX-SIZING: border-box; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 5px; PADDING-RIGHT: 5px">23<LI style="BOX-SIZING: border-box; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 5px; PADDING-RIGHT: 5px">24<LI style="BOX-SIZING: border-box; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 5px; PADDING-RIGHT: 5px">25<LI style="BOX-SIZING: border-box; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 5px; PADDING-RIGHT: 5px">26<LI style="BOX-SIZING: border-box; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 5px; PADDING-RIGHT: 5px">27<LI style="BOX-SIZING: border-box; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 5px; PADDING-RIGHT: 5px">28<LI style="BOX-SIZING: border-box; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 5px; PADDING-RIGHT: 5px">29<LI style="BOX-SIZING: border-box; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 5px; PADDING-RIGHT: 5px">30<LI style="BOX-SIZING: border-box; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 5px; PADDING-RIGHT: 5px">31</LI></UL></PRE>
<P 
style='BOX-SIZING: border-box; FONT-SIZE: 14px; FONT-FAMILY: "microsoft yahei"; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FONT-WEIGHT: normal; COLOR: rgb(85,85,85); PADDING-BOTTOM: 0px; FONT-STYLE: normal; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px 0px 1.1em; ORPHANS: 2; WIDOWS: 2; LETTER-SPACING: normal; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px; font-variant-ligatures: normal; font-variant-caps: normal'>这个Servlet必须要继承WebSocketServlet，接着创建一个继承MessageInbound的WebSocketMessageInbound类，在该类中填充onClose、onOpen、onBinaryMessage和onTextMessage等方法即可完成各个事件的逻辑，其中onOpen会在一个WebSocket连接建立时被调用，onClose会在一个WebSocket关闭时被调用，onBinaryMessage则是Binary方式下接收到客户端数据时被调用，onTextMessage则是Text方式下接收到客户端数据时被调用。上面一段代码实现了一个广播的效果。</P>
<P 
style='BOX-SIZING: border-box; FONT-SIZE: 14px; FONT-FAMILY: "microsoft yahei"; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FONT-WEIGHT: normal; COLOR: rgb(85,85,85); PADDING-BOTTOM: 0px; FONT-STYLE: normal; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px 0px 1.1em; ORPHANS: 2; WIDOWS: 2; LETTER-SPACING: normal; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px; font-variant-ligatures: normal; font-variant-caps: normal'>按照上面的处理逻辑，Tomcat对WebSocket的集成就不会太难了，就是在处理请求时如果遇到WebSocket协议请求则做特殊处理，保持住连接并在适当的时机调用WebSocketServlet的MessageInbound的onClose、onOpen、onBinaryMessage和onTextMessage等方法。由于WebSocket一般建议在NIO模式下使用，所以看看NIO模式集成WebSocket协议。</P>
<P 
style='BOX-SIZING: border-box; FONT-SIZE: 14px; FONT-FAMILY: "microsoft yahei"; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FONT-WEIGHT: normal; COLOR: rgb(85,85,85); PADDING-BOTTOM: 0px; FONT-STYLE: normal; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px 0px 1.1em; ORPHANS: 2; WIDOWS: 2; LETTER-SPACING: normal; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px; font-variant-ligatures: normal; font-variant-caps: normal'>如图，对于WebSocket的客户端连接被接收器接收后注册到NioChannel队列中，Poller组件不断轮休是否有NioChannel需要处理，如果有则经过处理管道后进到继承了WebSocketServlet的Servlet上，WebSocketServlet的doGet方法会处理WebSocket握手，告诉返回客户端同意升级协议。往后Poller继续不断轮休相关NioChannel，一旦发现是使用WebSocket协议的管道则会调用MessageInbound的相关方法，完成不同事件的处理，从而实现对WebSocket协议的支持。</P></body>
</html>
