<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
<title>如何中断正则的执行</title>
<meta name="GENERATOR" content="WinCHM">
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<style>
html,body { 
	/* Default Font */
	font-family: Arial, Helvetica, sans-serif;
	font-size: 11pt;
}
</style>

</head>

<body><SPAN 
style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FLOAT: none; COLOR: rgb(0,0,0); TEXT-ALIGN: left; FONT: 14px/25px Helvetica, Tahoma, Arial, sans-serif; DISPLAY: inline !important; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">如果你在工作经常使用正则表达式的话，你可能对灾难性回溯（catastrophic 
backtracking）这个概念并不陌生，这意味着你强迫正则引擎去进行指数级的排列运算。比如说，</SPAN><A 
style="TEXT-DECORATION: underline; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(16,138,198); TEXT-ALIGN: left; FONT: 14px/25px Helvetica, Tahoma, Arial, sans-serif; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px" 
href="http://ocpsoft.org/tutorials/regular-expressions/java-visual-regex-tester/#!;t=0000000000000000000000000000&amp;r=(0*)*A&amp;x=" 
target=_blank>点击这里</A><SPAN 
style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FLOAT: none; COLOR: rgb(0,0,0); TEXT-ALIGN: left; FONT: 14px/25px Helvetica, Tahoma, Arial, sans-serif; DISPLAY: inline !important; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">运行下这个用例来看看它得花多长时间（大概是5到10秒）：<SPAN 
class=Apple-converted-space>&nbsp;</SPAN></SPAN><BR 
style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-ALIGN: left; FONT: 14px/25px Helvetica, Tahoma, Arial, sans-serif; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px"><BR 
style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-ALIGN: left; FONT: 14px/25px Helvetica, Tahoma, Arial, sans-serif; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">
<DIV class=dp-highlighter 
style="OVERFLOW: auto; WORD-WRAP: break-word; WIDTH: 679px; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; WORD-BREAK: break-all; COLOR: rgb(0,0,0); PADDING-BOTTOM: 1px; TEXT-ALIGN: left; PADDING-TOP: 1px; FONT: 12px/25px Monaco, 'DejaVu Sans Mono', 'Bitstream Vera Sans Mono', Consolas, 'Courier New', monospace; PADDING-LEFT: 1px; MARGIN-LEFT: 9px; LETTER-SPACING: normal; PADDING-RIGHT: 1px; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">
<DIV class=bar>
<DIV class=tools 
style="FONT-WEIGHT: bold; COLOR: black; PADDING-BOTTOM: 3px; TEXT-ALIGN: left; PADDING-TOP: 3px; PADDING-LEFT: 3px; MARGIN: 0px; PADDING-RIGHT: 3px">Java代码<SPAN 
class=Apple-converted-space>&nbsp;</SPAN><EMBED 
type=application/x-shockwave-flash 
pluginspage=http://www.macromedia.com/go/getflashplayer height=15 width=14 
src=http://deepinmind.iteye.com/javascripts/syntaxhighlighter/clipboard_new.swf 
allowscriptaccess="always" quality="high" 
flashvars="clipboard=%0Apublic%20class%20LongRunningRegexExample%0A%7B%0A%20%20%20public%20static%20void%20main(String%5B%5D%20args)%20throws%20InterruptedException%0A%20%20%20%7B%0A%20%20%20%20%20%20final%20Pattern%20pattern%20%3D%20Pattern.compile(%22(0*)*A%22)%3B%0A%20%20%20%20%20%20final%20String%20input%20%3D%20%2200000000000000000000000000%22%3B%0A%0A%20%20%20%20%20%20long%20startTime%20%3D%20System.currentTimeMillis()%3B%0A%20%20%20%20%20%20Matcher%20matcher%20%3D%20pattern.matcher(input)%3B%0A%20%20%20%20%20%20matcher.find()%3B%20%2F%2F%20runs%20for%20a%20long%20time!%0A%20%20%20%20%20%20System.out.println(%22Regex%20took%3A%22%20%2B%20(System.currentTimeMillis()%20-%20startTime)%20%2B%20%22ms%22)%3B%0A%20%20%20%7D%0A%7D%0A" 
wmode="transparent">&nbsp;<A 
onclick="code_favorites_do_favorite(this);return false;" title=收藏这段代码 
style="TEXT-DECORATION: underline; COLOR: rgb(16,138,198)" 
href="javascript:void()"><IMG class=star 
style="BORDER-TOP: 0px; BORDER-RIGHT: 0px; BORDER-BOTTOM: 0px; BORDER-LEFT: 0px" 
alt=收藏代码 src="http://deepinmind.iteye.com/images/icon_star.png"></A></DIV></DIV>
<OL class=dp-j 
style="LIST-STYLE-TYPE: decimal; FONT-SIZE: 1em; BORDER-TOP: rgb(209,215,220) 1px solid; BORDER-RIGHT: rgb(209,215,220) 1px solid; BORDER-BOTTOM: rgb(209,215,220) 1px solid; COLOR: rgb(43,145,175); PADDING-BOTTOM: 2px; PADDING-TOP: 2px; PADDING-LEFT: 0px; MARGIN: 0px 0px 1px; BORDER-LEFT: rgb(209,215,220) 1px solid; LINE-HEIGHT: 1.4em; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(255,255,255)">
  <LI 
  style="FONT-SIZE: 1em; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 10px; MARGIN: 0px 0px 0px 38px; BORDER-LEFT: rgb(209,215,220) 1px solid; LINE-HEIGHT: 18px; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(250,250,250)"><SPAN 
  style="COLOR: black"><SPAN class=keyword 
  style="FONT-WEIGHT: bold; COLOR: rgb(127,0,85)">public</SPAN><SPAN 
  style="COLOR: black">&nbsp;</SPAN><SPAN class=keyword 
  style="FONT-WEIGHT: bold; COLOR: rgb(127,0,85)">class</SPAN><SPAN 
  style="COLOR: black">&nbsp;LongRunningRegexExample&nbsp;&nbsp;</SPAN></SPAN></LI>
  <LI 
  style="FONT-SIZE: 1em; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 10px; MARGIN: 0px 0px 0px 38px; BORDER-LEFT: rgb(209,215,220) 1px solid; LINE-HEIGHT: 18px; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(250,250,250)"><SPAN 
  style="COLOR: black">{&nbsp;&nbsp;</SPAN></LI>
  <LI 
  style="FONT-SIZE: 1em; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 10px; MARGIN: 0px 0px 0px 38px; BORDER-LEFT: rgb(209,215,220) 1px solid; LINE-HEIGHT: 18px; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(250,250,250)"><SPAN 
  style="COLOR: black">&nbsp;&nbsp;&nbsp;<SPAN class=keyword 
  style="FONT-WEIGHT: bold; COLOR: rgb(127,0,85)">public</SPAN><SPAN 
  style="COLOR: black">&nbsp;</SPAN><SPAN class=keyword 
  style="FONT-WEIGHT: bold; COLOR: rgb(127,0,85)">static</SPAN><SPAN 
  style="COLOR: black">&nbsp;</SPAN><SPAN class=keyword 
  style="FONT-WEIGHT: bold; COLOR: rgb(127,0,85)">void</SPAN><SPAN 
  style="COLOR: black">&nbsp;main(String[]&nbsp;args)&nbsp;</SPAN><SPAN 
  class=keyword 
  style="FONT-WEIGHT: bold; COLOR: rgb(127,0,85)">throws</SPAN><SPAN 
  style="COLOR: black">&nbsp;InterruptedException&nbsp;&nbsp;</SPAN></SPAN></LI>
  <LI 
  style="FONT-SIZE: 1em; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 10px; MARGIN: 0px 0px 0px 38px; BORDER-LEFT: rgb(209,215,220) 1px solid; LINE-HEIGHT: 18px; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(250,250,250)"><SPAN 
  style="COLOR: black">&nbsp;&nbsp;&nbsp;{&nbsp;&nbsp;</SPAN></LI>
  <LI 
  style="FONT-SIZE: 1em; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 10px; MARGIN: 0px 0px 0px 38px; BORDER-LEFT: rgb(209,215,220) 1px solid; LINE-HEIGHT: 18px; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(250,250,250)"><SPAN 
  style="COLOR: black">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<SPAN class=keyword 
  style="FONT-WEIGHT: bold; COLOR: rgb(127,0,85)">final</SPAN><SPAN 
  style="COLOR: black">&nbsp;Pattern&nbsp;pattern&nbsp;=&nbsp;Pattern.compile(</SPAN><SPAN 
  class=string style="COLOR: blue">"(0*)*A"</SPAN><SPAN 
  style="COLOR: black">);&nbsp;&nbsp;</SPAN></SPAN></LI>
  <LI 
  style="FONT-SIZE: 1em; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 10px; MARGIN: 0px 0px 0px 38px; BORDER-LEFT: rgb(209,215,220) 1px solid; LINE-HEIGHT: 18px; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(250,250,250)"><SPAN 
  style="COLOR: black">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<SPAN class=keyword 
  style="FONT-WEIGHT: bold; COLOR: rgb(127,0,85)">final</SPAN><SPAN 
  style="COLOR: black">&nbsp;String&nbsp;input&nbsp;=&nbsp;</SPAN><SPAN 
  class=string style="COLOR: blue">"00000000000000000000000000"</SPAN><SPAN 
  style="COLOR: black">;&nbsp;&nbsp;</SPAN></SPAN></LI>
  <LI 
  style="FONT-SIZE: 1em; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 10px; MARGIN: 0px 0px 0px 38px; BORDER-LEFT: rgb(209,215,220) 1px solid; LINE-HEIGHT: 18px; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(250,250,250)"><SPAN 
  style="COLOR: black">&nbsp;&nbsp;</SPAN></LI>
  <LI 
  style="FONT-SIZE: 1em; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 10px; MARGIN: 0px 0px 0px 38px; BORDER-LEFT: rgb(209,215,220) 1px solid; LINE-HEIGHT: 18px; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(250,250,250)"><SPAN 
  style="COLOR: black">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<SPAN class=keyword 
  style="FONT-WEIGHT: bold; COLOR: rgb(127,0,85)">long</SPAN><SPAN 
  style="COLOR: black">&nbsp;startTime&nbsp;=&nbsp;System.currentTimeMillis();&nbsp;&nbsp;</SPAN></SPAN></LI>
  <LI 
  style="FONT-SIZE: 1em; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 10px; MARGIN: 0px 0px 0px 38px; BORDER-LEFT: rgb(209,215,220) 1px solid; LINE-HEIGHT: 18px; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(250,250,250)"><SPAN 
  style="COLOR: black">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Matcher&nbsp;matcher&nbsp;=&nbsp;pattern.matcher(input);&nbsp;&nbsp;</SPAN></LI>
  <LI 
  style="FONT-SIZE: 1em; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 10px; MARGIN: 0px 0px 0px 38px; BORDER-LEFT: rgb(209,215,220) 1px solid; LINE-HEIGHT: 18px; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(250,250,250)"><SPAN 
  style="COLOR: black">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;matcher.find();&nbsp;<SPAN 
  class=comment 
  style="BORDER-TOP: 0px; BORDER-RIGHT: 0px; WIDTH: auto; BORDER-BOTTOM: 0px; COLOR: rgb(0,130,0); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; BORDER-LEFT: 0px; PADDING-RIGHT: 0px">//&nbsp;runs&nbsp;for&nbsp;a&nbsp;long&nbsp;time!</SPAN><SPAN 
  style="COLOR: black">&nbsp;&nbsp;</SPAN></SPAN></LI>
  <LI 
  style="FONT-SIZE: 1em; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 10px; MARGIN: 0px 0px 0px 38px; BORDER-LEFT: rgb(209,215,220) 1px solid; LINE-HEIGHT: 18px; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(250,250,250)"><SPAN 
  style="COLOR: black">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(<SPAN 
  class=string style="COLOR: blue">"Regex&nbsp;took:"</SPAN><SPAN 
  style="COLOR: black">&nbsp;+&nbsp;(System.currentTimeMillis()&nbsp;-&nbsp;startTime)&nbsp;+&nbsp;</SPAN><SPAN 
  class=string style="COLOR: blue">"ms"</SPAN><SPAN 
  style="COLOR: black">);&nbsp;&nbsp;</SPAN></SPAN></LI>
  <LI 
  style="FONT-SIZE: 1em; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 10px; MARGIN: 0px 0px 0px 38px; BORDER-LEFT: rgb(209,215,220) 1px solid; LINE-HEIGHT: 18px; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(250,250,250)"><SPAN 
  style="COLOR: black">&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;</SPAN></LI>
  <LI 
  style="FONT-SIZE: 1em; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 10px; MARGIN: 0px 0px 0px 38px; BORDER-LEFT: rgb(209,215,220) 1px solid; LINE-HEIGHT: 18px; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(250,250,250)"><SPAN 
  style="COLOR: black">}&nbsp;&nbsp;</SPAN></LI></OL></DIV><BR 
style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-ALIGN: left; FONT: 14px/25px Helvetica, Tahoma, Arial, sans-serif; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px"><BR 
style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-ALIGN: left; FONT: 14px/25px Helvetica, Tahoma, Arial, sans-serif; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px"><BR 
style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-ALIGN: left; FONT: 14px/25px Helvetica, Tahoma, Arial, sans-serif; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px"><SPAN 
style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FLOAT: none; COLOR: rgb(0,0,0); TEXT-ALIGN: left; FONT: 14px/25px Helvetica, Tahoma, Arial, sans-serif; DISPLAY: inline !important; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">然而只需一个很小的改动就能让它瞬间返回。为什么？引用 
Dzone的Andreas Haufler在他的_</SPAN><A 
style="TEXT-DECORATION: underline; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(16,138,198); TEXT-ALIGN: left; FONT: 14px/25px Helvetica, Tahoma, Arial, sans-serif; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px" 
href="http://java.dzone.com/articles/how-kill-java-regular" 
target=_blank>如何用一个正则表达式杀掉Java程序</A><SPAN 
style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FLOAT: none; COLOR: rgb(0,0,0); TEXT-ALIGN: left; FONT: 14px/25px Helvetica, Tahoma, Arial, sans-serif; DISPLAY: inline !important; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">_一文中的一句话，这个简洁的示例程序也是来自这篇文章的：<SPAN 
class=Apple-converted-space>&nbsp;</SPAN></SPAN><BR 
style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-ALIGN: left; FONT: 14px/25px Helvetica, Tahoma, Arial, sans-serif; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px"><BR 
style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-ALIGN: left; FONT: 14px/25px Helvetica, Tahoma, Arial, sans-serif; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px"><EM 
style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-ALIGN: left; FONT: italic 14px/25px Helvetica, Tahoma, Arial, sans-serif; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px"><BR>乍一看它像是一个无限循环，这其实是一个灾难性回溯。它的意思是匹配器没有在输入的结束处找到一个'A'。因此外部的检测器会后退一步，而内部的则前进一步，但还是没有发现。<SPAN 
class=Apple-converted-space>&nbsp;</SPAN><BR><BR>因此匹配器会一步步地回退，尝试尽所有的组合来查找是否存在一个匹配。它最终还是会返回的（没有匹配上），但时间复杂度是指数级的（增加一个字符运行时间会翻倍）。<SPAN 
class=Apple-converted-space>&nbsp;</SPAN><BR></EM><SPAN 
style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FLOAT: none; COLOR: rgb(0,0,0); TEXT-ALIGN: left; FONT: 14px/25px Helvetica, Tahoma, Arial, sans-serif; DISPLAY: inline !important; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px"></SPAN><BR 
style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-ALIGN: left; FONT: 14px/25px Helvetica, Tahoma, Arial, sans-serif; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px"><BR 
style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-ALIGN: left; FONT: 14px/25px Helvetica, Tahoma, Arial, sans-serif; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px"><SPAN 
style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FLOAT: none; COLOR: rgb(0,0,0); TEXT-ALIGN: left; FONT: 14px/25px Helvetica, Tahoma, Arial, sans-serif; DISPLAY: inline !important; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">那么我们该如何做才能避免这样的影响，有没有可能会遇到这么一个场景，要让Java进程运行好几天，甚至好几年的？<SPAN 
class=Apple-converted-space>&nbsp;</SPAN></SPAN><BR 
style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-ALIGN: left; FONT: 14px/25px Helvetica, Tahoma, Arial, sans-serif; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px"><BR 
style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-ALIGN: left; FONT: 14px/25px Helvetica, Tahoma, Arial, sans-serif; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px"><SPAN 
style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FLOAT: none; COLOR: rgb(0,0,0); TEXT-ALIGN: left; FONT: 14px/25px Helvetica, Tahoma, Arial, sans-serif; DISPLAY: inline !important; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">如果你不嫌麻烦的话，你可以在自己的正则模式中注意去避免这样的情况。但是如果你部署了一个应用，它接受一个输入作为正则表达式的话――比如说一个在线的Java正则校验器，那么你需要防止这种情况，否则就可能会遭受拒绝服务攻击。<SPAN 
class=Apple-converted-space>&nbsp;</SPAN></SPAN><BR 
style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-ALIGN: left; FONT: 14px/25px Helvetica, Tahoma, Arial, sans-serif; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px"><BR 
style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-ALIGN: left; FONT: 14px/25px Helvetica, Tahoma, Arial, sans-serif; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px"><SPAN 
style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FLOAT: none; COLOR: rgb(0,0,0); TEXT-ALIGN: left; FONT: 14px/25px Helvetica, Tahoma, Arial, sans-serif; DISPLAY: inline !important; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">答案非常简单，不过你需要引入一个线程，下面是我在stackoverflow上找到的一个特殊的字符序列的实现。<SPAN 
class=Apple-converted-space>&nbsp;</SPAN></SPAN><BR 
style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-ALIGN: left; FONT: 14px/25px Helvetica, Tahoma, Arial, sans-serif; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px"><BR 
style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-ALIGN: left; FONT: 14px/25px Helvetica, Tahoma, Arial, sans-serif; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">
<DIV class=dp-highlighter 
style="OVERFLOW: auto; WORD-WRAP: break-word; WIDTH: 679px; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; WORD-BREAK: break-all; COLOR: rgb(0,0,0); PADDING-BOTTOM: 1px; TEXT-ALIGN: left; PADDING-TOP: 1px; FONT: 12px/25px Monaco, 'DejaVu Sans Mono', 'Bitstream Vera Sans Mono', Consolas, 'Courier New', monospace; PADDING-LEFT: 1px; MARGIN-LEFT: 9px; LETTER-SPACING: normal; PADDING-RIGHT: 1px; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">
<DIV class=bar>
<DIV class=tools 
style="FONT-WEIGHT: bold; COLOR: black; PADDING-BOTTOM: 3px; TEXT-ALIGN: left; PADDING-TOP: 3px; PADDING-LEFT: 3px; MARGIN: 0px; PADDING-RIGHT: 3px">Java代码<SPAN 
class=Apple-converted-space>&nbsp;</SPAN><EMBED 
type=application/x-shockwave-flash 
pluginspage=http://www.macromedia.com/go/getflashplayer height=15 width=14 
src=http://deepinmind.iteye.com/javascripts/syntaxhighlighter/clipboard_new.swf 
allowscriptaccess="always" quality="high" 
flashvars="clipboard=%0Apublic%20class%20InterruptibleRegexExample%0A%7B%0A%20%20%20public%20static%20void%20main(String%5B%5D%20args)%20throws%20InterruptedException%0A%20%20%20%7B%0A%20%20%20%20%20%20final%20Pattern%20pattern%20%3D%20Pattern.compile(%22(0*)*A%22)%3B%0A%20%20%20%20%20%20final%20String%20input%20%3D%20%2200000000000000000000000000%22%3B%0A%0A%20%20%20%20%20%20Runnable%20runnable%20%3D%20new%20Runnable()%20%7B%0A%20%20%20%20%20%20%20%20%20%40Override%0A%20%20%20%20%20%20%20%20%20public%20void%20run()%0A%20%20%20%20%20%20%20%20%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20long%20startTime%20%3D%20System.currentTimeMillis()%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20Matcher%20interruptableMatcher%20%3D%20pattern.matcher(new%20InterruptibleCharSequence(input))%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20interruptableMatcher.find()%3B%20%2F%2F%20runs%20for%20a%20long%20time!%0A%20%20%20%20%20%20%20%20%20%20%20%20System.out.println(%22Regex%20took%3A%22%20%2B%20(System.currentTimeMillis()%20-%20startTime)%20%2B%20%22ms%22)%3B%0A%20%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%7D%3B%0A%0A%20%20%20%20%20%20Thread%20thread%20%3D%20new%20Thread(runnable)%3B%0A%20%20%20%20%20%20thread.start()%3B%0A%0A%20%20%20%20%20%20Thread.sleep(500)%3B%0A%20%20%20%20%20%20thread.interrupt()%3B%0A%20%20%20%7D%0A%7D%0A" 
wmode="transparent">&nbsp;<A 
onclick="code_favorites_do_favorite(this);return false;" title=收藏这段代码 
style="TEXT-DECORATION: underline; COLOR: rgb(16,138,198)" 
href="javascript:void()"><IMG class=star 
style="BORDER-TOP: 0px; BORDER-RIGHT: 0px; BORDER-BOTTOM: 0px; BORDER-LEFT: 0px" 
alt=收藏代码 src="http://deepinmind.iteye.com/images/icon_star.png"></A></DIV></DIV>
<OL class=dp-j 
style="LIST-STYLE-TYPE: decimal; FONT-SIZE: 1em; BORDER-TOP: rgb(209,215,220) 1px solid; BORDER-RIGHT: rgb(209,215,220) 1px solid; BORDER-BOTTOM: rgb(209,215,220) 1px solid; COLOR: rgb(43,145,175); PADDING-BOTTOM: 2px; PADDING-TOP: 2px; PADDING-LEFT: 0px; MARGIN: 0px 0px 1px; BORDER-LEFT: rgb(209,215,220) 1px solid; LINE-HEIGHT: 1.4em; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(255,255,255)">
  <LI 
  style="FONT-SIZE: 1em; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 10px; MARGIN: 0px 0px 0px 38px; BORDER-LEFT: rgb(209,215,220) 1px solid; LINE-HEIGHT: 18px; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(250,250,250)"><SPAN 
  style="COLOR: black"><SPAN class=keyword 
  style="FONT-WEIGHT: bold; COLOR: rgb(127,0,85)">public</SPAN><SPAN 
  style="COLOR: black">&nbsp;</SPAN><SPAN class=keyword 
  style="FONT-WEIGHT: bold; COLOR: rgb(127,0,85)">class</SPAN><SPAN 
  style="COLOR: black">&nbsp;InterruptibleRegexExample&nbsp;&nbsp;</SPAN></SPAN></LI>
  <LI 
  style="FONT-SIZE: 1em; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 10px; MARGIN: 0px 0px 0px 38px; BORDER-LEFT: rgb(209,215,220) 1px solid; LINE-HEIGHT: 18px; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(250,250,250)"><SPAN 
  style="COLOR: black">{&nbsp;&nbsp;</SPAN></LI>
  <LI 
  style="FONT-SIZE: 1em; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 10px; MARGIN: 0px 0px 0px 38px; BORDER-LEFT: rgb(209,215,220) 1px solid; LINE-HEIGHT: 18px; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(250,250,250)"><SPAN 
  style="COLOR: black">&nbsp;&nbsp;&nbsp;<SPAN class=keyword 
  style="FONT-WEIGHT: bold; COLOR: rgb(127,0,85)">public</SPAN><SPAN 
  style="COLOR: black">&nbsp;</SPAN><SPAN class=keyword 
  style="FONT-WEIGHT: bold; COLOR: rgb(127,0,85)">static</SPAN><SPAN 
  style="COLOR: black">&nbsp;</SPAN><SPAN class=keyword 
  style="FONT-WEIGHT: bold; COLOR: rgb(127,0,85)">void</SPAN><SPAN 
  style="COLOR: black">&nbsp;main(String[]&nbsp;args)&nbsp;</SPAN><SPAN 
  class=keyword 
  style="FONT-WEIGHT: bold; COLOR: rgb(127,0,85)">throws</SPAN><SPAN 
  style="COLOR: black">&nbsp;InterruptedException&nbsp;&nbsp;</SPAN></SPAN></LI>
  <LI 
  style="FONT-SIZE: 1em; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 10px; MARGIN: 0px 0px 0px 38px; BORDER-LEFT: rgb(209,215,220) 1px solid; LINE-HEIGHT: 18px; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(250,250,250)"><SPAN 
  style="COLOR: black">&nbsp;&nbsp;&nbsp;{&nbsp;&nbsp;</SPAN></LI>
  <LI 
  style="FONT-SIZE: 1em; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 10px; MARGIN: 0px 0px 0px 38px; BORDER-LEFT: rgb(209,215,220) 1px solid; LINE-HEIGHT: 18px; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(250,250,250)"><SPAN 
  style="COLOR: black">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<SPAN class=keyword 
  style="FONT-WEIGHT: bold; COLOR: rgb(127,0,85)">final</SPAN><SPAN 
  style="COLOR: black">&nbsp;Pattern&nbsp;pattern&nbsp;=&nbsp;Pattern.compile(</SPAN><SPAN 
  class=string style="COLOR: blue">"(0*)*A"</SPAN><SPAN 
  style="COLOR: black">);&nbsp;&nbsp;</SPAN></SPAN></LI>
  <LI 
  style="FONT-SIZE: 1em; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 10px; MARGIN: 0px 0px 0px 38px; BORDER-LEFT: rgb(209,215,220) 1px solid; LINE-HEIGHT: 18px; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(250,250,250)"><SPAN 
  style="COLOR: black">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<SPAN class=keyword 
  style="FONT-WEIGHT: bold; COLOR: rgb(127,0,85)">final</SPAN><SPAN 
  style="COLOR: black">&nbsp;String&nbsp;input&nbsp;=&nbsp;</SPAN><SPAN 
  class=string style="COLOR: blue">"00000000000000000000000000"</SPAN><SPAN 
  style="COLOR: black">;&nbsp;&nbsp;</SPAN></SPAN></LI>
  <LI 
  style="FONT-SIZE: 1em; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 10px; MARGIN: 0px 0px 0px 38px; BORDER-LEFT: rgb(209,215,220) 1px solid; LINE-HEIGHT: 18px; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(250,250,250)"><SPAN 
  style="COLOR: black">&nbsp;&nbsp;</SPAN></LI>
  <LI 
  style="FONT-SIZE: 1em; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 10px; MARGIN: 0px 0px 0px 38px; BORDER-LEFT: rgb(209,215,220) 1px solid; LINE-HEIGHT: 18px; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(250,250,250)"><SPAN 
  style="COLOR: black">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Runnable&nbsp;runnable&nbsp;=&nbsp;<SPAN 
  class=keyword style="FONT-WEIGHT: bold; COLOR: rgb(127,0,85)">new</SPAN><SPAN 
  style="COLOR: black">&nbsp;Runnable()&nbsp;{&nbsp;&nbsp;</SPAN></SPAN></LI>
  <LI 
  style="FONT-SIZE: 1em; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 10px; MARGIN: 0px 0px 0px 38px; BORDER-LEFT: rgb(209,215,220) 1px solid; LINE-HEIGHT: 18px; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(250,250,250)"><SPAN 
  style="COLOR: black">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<SPAN 
  class=annotation style="COLOR: rgb(100,100,100)">@Override</SPAN><SPAN 
  style="COLOR: black">&nbsp;&nbsp;</SPAN></SPAN></LI>
  <LI 
  style="FONT-SIZE: 1em; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 10px; MARGIN: 0px 0px 0px 38px; BORDER-LEFT: rgb(209,215,220) 1px solid; LINE-HEIGHT: 18px; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(250,250,250)"><SPAN 
  style="COLOR: black">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<SPAN 
  class=keyword 
  style="FONT-WEIGHT: bold; COLOR: rgb(127,0,85)">public</SPAN><SPAN 
  style="COLOR: black">&nbsp;</SPAN><SPAN class=keyword 
  style="FONT-WEIGHT: bold; COLOR: rgb(127,0,85)">void</SPAN><SPAN 
  style="COLOR: black">&nbsp;run()&nbsp;&nbsp;</SPAN></SPAN></LI>
  <LI 
  style="FONT-SIZE: 1em; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 10px; MARGIN: 0px 0px 0px 38px; BORDER-LEFT: rgb(209,215,220) 1px solid; LINE-HEIGHT: 18px; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(250,250,250)"><SPAN 
  style="COLOR: black">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{&nbsp;&nbsp;</SPAN></LI>
  <LI 
  style="FONT-SIZE: 1em; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 10px; MARGIN: 0px 0px 0px 38px; BORDER-LEFT: rgb(209,215,220) 1px solid; LINE-HEIGHT: 18px; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(250,250,250)"><SPAN 
  style="COLOR: black">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<SPAN 
  class=keyword style="FONT-WEIGHT: bold; COLOR: rgb(127,0,85)">long</SPAN><SPAN 
  style="COLOR: black">&nbsp;startTime&nbsp;=&nbsp;System.currentTimeMillis();&nbsp;&nbsp;</SPAN></SPAN></LI>
  <LI 
  style="FONT-SIZE: 1em; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 10px; MARGIN: 0px 0px 0px 38px; BORDER-LEFT: rgb(209,215,220) 1px solid; LINE-HEIGHT: 18px; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(250,250,250)"><SPAN 
  style="COLOR: black">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Matcher&nbsp;interruptableMatcher&nbsp;=&nbsp;pattern.matcher(<SPAN 
  class=keyword style="FONT-WEIGHT: bold; COLOR: rgb(127,0,85)">new</SPAN><SPAN 
  style="COLOR: black">&nbsp;InterruptibleCharSequence(input));&nbsp;&nbsp;</SPAN></SPAN></LI>
  <LI 
  style="FONT-SIZE: 1em; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 10px; MARGIN: 0px 0px 0px 38px; BORDER-LEFT: rgb(209,215,220) 1px solid; LINE-HEIGHT: 18px; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(250,250,250)"><SPAN 
  style="COLOR: black">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;interruptableMatcher.find();&nbsp;<SPAN 
  class=comment 
  style="BORDER-TOP: 0px; BORDER-RIGHT: 0px; WIDTH: auto; BORDER-BOTTOM: 0px; COLOR: rgb(0,130,0); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; BORDER-LEFT: 0px; PADDING-RIGHT: 0px">//&nbsp;runs&nbsp;for&nbsp;a&nbsp;long&nbsp;time!</SPAN><SPAN 
  style="COLOR: black">&nbsp;&nbsp;</SPAN></SPAN></LI>
  <LI 
  style="FONT-SIZE: 1em; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 10px; MARGIN: 0px 0px 0px 38px; BORDER-LEFT: rgb(209,215,220) 1px solid; LINE-HEIGHT: 18px; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(250,250,250)"><SPAN 
  style="COLOR: black">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(<SPAN 
  class=string style="COLOR: blue">"Regex&nbsp;took:"</SPAN><SPAN 
  style="COLOR: black">&nbsp;+&nbsp;(System.currentTimeMillis()&nbsp;-&nbsp;startTime)&nbsp;+&nbsp;</SPAN><SPAN 
  class=string style="COLOR: blue">"ms"</SPAN><SPAN 
  style="COLOR: black">);&nbsp;&nbsp;</SPAN></SPAN></LI>
  <LI 
  style="FONT-SIZE: 1em; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 10px; MARGIN: 0px 0px 0px 38px; BORDER-LEFT: rgb(209,215,220) 1px solid; LINE-HEIGHT: 18px; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(250,250,250)"><SPAN 
  style="COLOR: black">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;</SPAN></LI>
  <LI 
  style="FONT-SIZE: 1em; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 10px; MARGIN: 0px 0px 0px 38px; BORDER-LEFT: rgb(209,215,220) 1px solid; LINE-HEIGHT: 18px; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(250,250,250)"><SPAN 
  style="COLOR: black">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};&nbsp;&nbsp;</SPAN></LI>
  <LI 
  style="FONT-SIZE: 1em; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 10px; MARGIN: 0px 0px 0px 38px; BORDER-LEFT: rgb(209,215,220) 1px solid; LINE-HEIGHT: 18px; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(250,250,250)"><SPAN 
  style="COLOR: black">&nbsp;&nbsp;</SPAN></LI>
  <LI 
  style="FONT-SIZE: 1em; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 10px; MARGIN: 0px 0px 0px 38px; BORDER-LEFT: rgb(209,215,220) 1px solid; LINE-HEIGHT: 18px; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(250,250,250)"><SPAN 
  style="COLOR: black">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Thread&nbsp;thread&nbsp;=&nbsp;<SPAN 
  class=keyword style="FONT-WEIGHT: bold; COLOR: rgb(127,0,85)">new</SPAN><SPAN 
  style="COLOR: black">&nbsp;Thread(runnable);&nbsp;&nbsp;</SPAN></SPAN></LI>
  <LI 
  style="FONT-SIZE: 1em; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 10px; MARGIN: 0px 0px 0px 38px; BORDER-LEFT: rgb(209,215,220) 1px solid; LINE-HEIGHT: 18px; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(250,250,250)"><SPAN 
  style="COLOR: black">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;thread.start();&nbsp;&nbsp;</SPAN></LI>
  <LI 
  style="FONT-SIZE: 1em; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 10px; MARGIN: 0px 0px 0px 38px; BORDER-LEFT: rgb(209,215,220) 1px solid; LINE-HEIGHT: 18px; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(250,250,250)"><SPAN 
  style="COLOR: black">&nbsp;&nbsp;</SPAN></LI>
  <LI 
  style="FONT-SIZE: 1em; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 10px; MARGIN: 0px 0px 0px 38px; BORDER-LEFT: rgb(209,215,220) 1px solid; LINE-HEIGHT: 18px; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(250,250,250)"><SPAN 
  style="COLOR: black">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Thread.sleep(<SPAN 
  class=number style="COLOR: rgb(192,0,0)">500</SPAN><SPAN 
  style="COLOR: black">);&nbsp;&nbsp;</SPAN></SPAN></LI>
  <LI 
  style="FONT-SIZE: 1em; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 10px; MARGIN: 0px 0px 0px 38px; BORDER-LEFT: rgb(209,215,220) 1px solid; LINE-HEIGHT: 18px; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(250,250,250)"><SPAN 
  style="COLOR: black">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;thread.interrupt();&nbsp;&nbsp;</SPAN></LI>
  <LI 
  style="FONT-SIZE: 1em; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 10px; MARGIN: 0px 0px 0px 38px; BORDER-LEFT: rgb(209,215,220) 1px solid; LINE-HEIGHT: 18px; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(250,250,250)"><SPAN 
  style="COLOR: black">&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;</SPAN></LI>
  <LI 
  style="FONT-SIZE: 1em; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 10px; MARGIN: 0px 0px 0px 38px; BORDER-LEFT: rgb(209,215,220) 1px solid; LINE-HEIGHT: 18px; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(250,250,250)"><SPAN 
  style="COLOR: black">}&nbsp;&nbsp;</SPAN></LI></OL></DIV><BR 
style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-ALIGN: left; FONT: 14px/25px Helvetica, Tahoma, Arial, sans-serif; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px"><BR 
style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-ALIGN: left; FONT: 14px/25px Helvetica, Tahoma, Arial, sans-serif; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px"><SPAN 
style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FLOAT: none; COLOR: rgb(0,0,0); TEXT-ALIGN: left; FONT: 14px/25px Helvetica, Tahoma, Arial, sans-serif; DISPLAY: inline !important; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">这样这个正则就非常棒了，它是可中断的。<SPAN 
class=Apple-converted-space>&nbsp;</SPAN></SPAN><BR 
style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-ALIGN: left; FONT: 14px/25px Helvetica, Tahoma, Arial, sans-serif; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px"><BR 
style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-ALIGN: left; FONT: 14px/25px Helvetica, Tahoma, Arial, sans-serif; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">
<DIV class=dp-highlighter 
style="OVERFLOW: auto; WORD-WRAP: break-word; WIDTH: 679px; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; WORD-BREAK: break-all; COLOR: rgb(0,0,0); PADDING-BOTTOM: 1px; TEXT-ALIGN: left; PADDING-TOP: 1px; FONT: 12px/25px Monaco, 'DejaVu Sans Mono', 'Bitstream Vera Sans Mono', Consolas, 'Courier New', monospace; PADDING-LEFT: 1px; MARGIN-LEFT: 9px; LETTER-SPACING: normal; PADDING-RIGHT: 1px; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">
<DIV class=bar>
<DIV class=tools 
style="FONT-WEIGHT: bold; COLOR: black; PADDING-BOTTOM: 3px; TEXT-ALIGN: left; PADDING-TOP: 3px; PADDING-LEFT: 3px; MARGIN: 0px; PADDING-RIGHT: 3px">Java代码<SPAN 
class=Apple-converted-space>&nbsp;</SPAN><EMBED 
type=application/x-shockwave-flash 
pluginspage=http://www.macromedia.com/go/getflashplayer height=15 width=14 
src=http://deepinmind.iteye.com/javascripts/syntaxhighlighter/clipboard_new.swf 
allowscriptaccess="always" quality="high" 
flashvars="clipboard=Exception%20in%20thread%20%22Thread-2%22%20java.lang.RuntimeException%3A%20Die!%20...%20Why%20won't%20you%20DIE!%0Aat%20org.ocpsoft.tutorial.regex.server.InterruptRegex%24InterruptibleCharSequence.charAt(InterruptRegex.java%3A72)%0Aat%20java.util.regex.Pattern%24BmpCharProperty.match(Pattern.java%3A3366)%0Aat%20java.util.regex.Pattern%24Curly.match0(Pattern.java%3A3760)%0Aat%20java.util.regex.Pattern%24Curly.match(Pattern.java%3A3744)%0Aat%20java.util.regex.Pattern%24GroupHead.match(Pattern.java%3A4168)%0A%0A" 
wmode="transparent">&nbsp;<A 
onclick="code_favorites_do_favorite(this);return false;" title=收藏这段代码 
style="TEXT-DECORATION: underline; COLOR: rgb(16,138,198)" 
href="javascript:void()"><IMG class=star 
style="BORDER-TOP: 0px; BORDER-RIGHT: 0px; BORDER-BOTTOM: 0px; BORDER-LEFT: 0px" 
alt=收藏代码 src="http://deepinmind.iteye.com/images/icon_star.png"></A></DIV></DIV>
<OL class=dp-j 
style="LIST-STYLE-TYPE: decimal; FONT-SIZE: 1em; BORDER-TOP: rgb(209,215,220) 1px solid; BORDER-RIGHT: rgb(209,215,220) 1px solid; BORDER-BOTTOM: rgb(209,215,220) 1px solid; COLOR: rgb(43,145,175); PADDING-BOTTOM: 2px; PADDING-TOP: 2px; PADDING-LEFT: 0px; MARGIN: 0px 0px 1px; BORDER-LEFT: rgb(209,215,220) 1px solid; LINE-HEIGHT: 1.4em; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(255,255,255)">
  <LI 
  style="FONT-SIZE: 1em; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 10px; MARGIN: 0px 0px 0px 38px; BORDER-LEFT: rgb(209,215,220) 1px solid; LINE-HEIGHT: 18px; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(250,250,250)"><SPAN 
  style="COLOR: black"><SPAN 
  style="COLOR: black">Exception&nbsp;in&nbsp;thread&nbsp;</SPAN><SPAN 
  class=string style="COLOR: blue">"Thread-2"</SPAN><SPAN 
  style="COLOR: black">&nbsp;java.lang.RuntimeException:&nbsp;Die!&nbsp;...&nbsp;Why&nbsp;won't&nbsp;you&nbsp;DIE!&nbsp;&nbsp;</SPAN></SPAN></LI>
  <LI 
  style="FONT-SIZE: 1em; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 10px; MARGIN: 0px 0px 0px 38px; BORDER-LEFT: rgb(209,215,220) 1px solid; LINE-HEIGHT: 18px; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(250,250,250)"><SPAN 
  style="COLOR: black">at&nbsp;org.ocpsoft.tutorial.regex.server.InterruptRegex$InterruptibleCharSequence.charAt(InterruptRegex.java:<SPAN 
  class=number style="COLOR: rgb(192,0,0)">72</SPAN><SPAN 
  style="COLOR: black">)&nbsp;&nbsp;</SPAN></SPAN></LI>
  <LI 
  style="FONT-SIZE: 1em; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 10px; MARGIN: 0px 0px 0px 38px; BORDER-LEFT: rgb(209,215,220) 1px solid; LINE-HEIGHT: 18px; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(250,250,250)"><SPAN 
  style="COLOR: black">at&nbsp;java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:<SPAN 
  class=number style="COLOR: rgb(192,0,0)">3366</SPAN><SPAN 
  style="COLOR: black">)&nbsp;&nbsp;</SPAN></SPAN></LI>
  <LI 
  style="FONT-SIZE: 1em; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 10px; MARGIN: 0px 0px 0px 38px; BORDER-LEFT: rgb(209,215,220) 1px solid; LINE-HEIGHT: 18px; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(250,250,250)"><SPAN 
  style="COLOR: black">at&nbsp;java.util.regex.Pattern$Curly.match0(Pattern.java:<SPAN 
  class=number style="COLOR: rgb(192,0,0)">3760</SPAN><SPAN 
  style="COLOR: black">)&nbsp;&nbsp;</SPAN></SPAN></LI>
  <LI 
  style="FONT-SIZE: 1em; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 10px; MARGIN: 0px 0px 0px 38px; BORDER-LEFT: rgb(209,215,220) 1px solid; LINE-HEIGHT: 18px; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(250,250,250)"><SPAN 
  style="COLOR: black">at&nbsp;java.util.regex.Pattern$Curly.match(Pattern.java:<SPAN 
  class=number style="COLOR: rgb(192,0,0)">3744</SPAN><SPAN 
  style="COLOR: black">)&nbsp;&nbsp;</SPAN></SPAN></LI>
  <LI 
  style="FONT-SIZE: 1em; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 10px; MARGIN: 0px 0px 0px 38px; BORDER-LEFT: rgb(209,215,220) 1px solid; LINE-HEIGHT: 18px; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(250,250,250)"><SPAN 
  style="COLOR: black">at&nbsp;java.util.regex.Pattern$GroupHead.match(Pattern.java:<SPAN 
  class=number style="COLOR: rgb(192,0,0)">4168</SPAN><SPAN 
  style="COLOR: black">)&nbsp;&nbsp;</SPAN></SPAN></LI></OL></DIV><BR 
style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-ALIGN: left; FONT: 14px/25px Helvetica, Tahoma, Arial, sans-serif; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px"><BR 
style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-ALIGN: left; FONT: 14px/25px Helvetica, Tahoma, Arial, sans-serif; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px"><SPAN 
style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FLOAT: none; COLOR: rgb(0,0,0); TEXT-ALIGN: left; FONT: 14px/25px Helvetica, Tahoma, Arial, sans-serif; DISPLAY: inline !important; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">当然了你需要用到InterruptibleCharSequence，这多少会影响到程序的性能，不过总比干等一年要好得多：<SPAN 
class=Apple-converted-space>&nbsp;</SPAN></SPAN><BR 
style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-ALIGN: left; FONT: 14px/25px Helvetica, Tahoma, Arial, sans-serif; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px"><BR 
style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-ALIGN: left; FONT: 14px/25px Helvetica, Tahoma, Arial, sans-serif; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">
<DIV class=dp-highlighter 
style="OVERFLOW: auto; WORD-WRAP: break-word; WIDTH: 679px; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; WORD-BREAK: break-all; COLOR: rgb(0,0,0); PADDING-BOTTOM: 1px; TEXT-ALIGN: left; PADDING-TOP: 1px; FONT: 12px/25px Monaco, 'DejaVu Sans Mono', 'Bitstream Vera Sans Mono', Consolas, 'Courier New', monospace; PADDING-LEFT: 1px; MARGIN-LEFT: 9px; LETTER-SPACING: normal; PADDING-RIGHT: 1px; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">
<DIV class=bar>
<DIV class=tools 
style="FONT-WEIGHT: bold; COLOR: black; PADDING-BOTTOM: 3px; TEXT-ALIGN: left; PADDING-TOP: 3px; PADDING-LEFT: 3px; MARGIN: 0px; PADDING-RIGHT: 3px">Java代码<SPAN 
class=Apple-converted-space>&nbsp;</SPAN><EMBED 
type=application/x-shockwave-flash 
pluginspage=http://www.macromedia.com/go/getflashplayer height=15 width=14 
src=http://deepinmind.iteye.com/javascripts/syntaxhighlighter/clipboard_new.swf 
allowscriptaccess="always" quality="high" 
flashvars="clipboard=%2F**%0A%20*%20%7B%40link%20CharSequence%7D%20that%20notices%20%7B%40link%20Thread%7D%20interrupts%0A%20*%20%0A%20*%20%40author%20gojomo%20-%20http%3A%2F%2Fstackoverflow.com%2Fquestions%2F910740%2Fcancelling-a-long-running-regex-match%0A%20*%2F%0Aprivate%20static%20class%20InterruptibleCharSequence%20implements%20CharSequence%20%7B%0A%20%20%20CharSequence%20inner%3B%0A%0A%20%20%20public%20InterruptibleCharSequence(CharSequence%20inner)%20%7B%0A%20%20%20%20%20%20super()%3B%0A%20%20%20%20%20%20this.inner%20%3D%20inner%3B%0A%20%20%20%7D%0A%0A%20%20%20%40Override%0A%20%20%20public%20char%20charAt(int%20index)%20%7B%0A%20%20%20%20%20%20if%20(Thread.currentThread().isInterrupted())%20%7B%0A%20%20%20%20%20%20%20%20%20throw%20new%20RuntimeException(%22Interrupted!%22)%3B%0A%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20return%20inner.charAt(index)%3B%0A%20%20%20%7D%0A%0A%20%20%20%40Override%0A%20%20%20public%20int%20length()%20%7B%0A%20%20%20%20%20%20return%20inner.length()%3B%0A%20%20%20%7D%0A%0A%20%20%20%40Override%0A%20%20%20public%20CharSequence%20subSequence(int%20start%2C%20int%20end)%20%7B%0A%20%20%20%20%20%20return%20new%20InterruptibleCharSequence(inner.subSequence(start%2C%20end))%3B%0A%20%20%20%7D%0A%0A%20%20%20%40Override%0A%20%20%20public%20String%20toString()%20%7B%0A%20%20%20%20%20%20return%20inner.toString()%3B%0A%20%20%20%7D%0A%7D%0A%0A" 
wmode="transparent">&nbsp;<A 
onclick="code_favorites_do_favorite(this);return false;" title=收藏这段代码 
style="TEXT-DECORATION: underline; COLOR: rgb(16,138,198)" 
href="javascript:void()"><IMG class=star 
style="BORDER-TOP: 0px; BORDER-RIGHT: 0px; BORDER-BOTTOM: 0px; BORDER-LEFT: 0px" 
alt=收藏代码 src="http://deepinmind.iteye.com/images/icon_star.png"></A></DIV></DIV>
<OL class=dp-j 
style="LIST-STYLE-TYPE: decimal; FONT-SIZE: 1em; BORDER-TOP: rgb(209,215,220) 1px solid; BORDER-RIGHT: rgb(209,215,220) 1px solid; BORDER-BOTTOM: rgb(209,215,220) 1px solid; COLOR: rgb(43,145,175); PADDING-BOTTOM: 2px; PADDING-TOP: 2px; PADDING-LEFT: 0px; MARGIN: 0px 0px 1px; BORDER-LEFT: rgb(209,215,220) 1px solid; LINE-HEIGHT: 1.4em; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(255,255,255)">
  <LI 
  style="FONT-SIZE: 1em; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 10px; MARGIN: 0px 0px 0px 38px; BORDER-LEFT: rgb(209,215,220) 1px solid; LINE-HEIGHT: 18px; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(250,250,250)"><SPAN 
  style="COLOR: black"><SPAN class=comment 
  style="BORDER-TOP: 0px; BORDER-RIGHT: 0px; WIDTH: auto; BORDER-BOTTOM: 0px; COLOR: rgb(0,130,0); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; BORDER-LEFT: 0px; PADDING-RIGHT: 0px">/**</SPAN>&nbsp;</SPAN></LI>
  <LI 
  style="FONT-SIZE: 1em; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 10px; MARGIN: 0px 0px 0px 38px; BORDER-LEFT: rgb(209,215,220) 1px solid; LINE-HEIGHT: 18px; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(250,250,250)"><SPAN 
  style="COLOR: black"><SPAN class=comment 
  style="BORDER-TOP: 0px; BORDER-RIGHT: 0px; WIDTH: auto; BORDER-BOTTOM: 0px; COLOR: rgb(0,130,0); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; BORDER-LEFT: 0px; PADDING-RIGHT: 0px">&nbsp;*&nbsp;{@link&nbsp;CharSequence}&nbsp;that&nbsp;notices&nbsp;{@link&nbsp;Thread}&nbsp;interrupts</SPAN>&nbsp;</SPAN></LI>
  <LI 
  style="FONT-SIZE: 1em; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 10px; MARGIN: 0px 0px 0px 38px; BORDER-LEFT: rgb(209,215,220) 1px solid; LINE-HEIGHT: 18px; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(250,250,250)"><SPAN 
  style="COLOR: black"><SPAN class=comment 
  style="BORDER-TOP: 0px; BORDER-RIGHT: 0px; WIDTH: auto; BORDER-BOTTOM: 0px; COLOR: rgb(0,130,0); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; BORDER-LEFT: 0px; PADDING-RIGHT: 0px">&nbsp;*&nbsp;</SPAN>&nbsp;</SPAN></LI>
  <LI 
  style="FONT-SIZE: 1em; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 10px; MARGIN: 0px 0px 0px 38px; BORDER-LEFT: rgb(209,215,220) 1px solid; LINE-HEIGHT: 18px; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(250,250,250)"><SPAN 
  style="COLOR: black"><SPAN class=comment 
  style="BORDER-TOP: 0px; BORDER-RIGHT: 0px; WIDTH: auto; BORDER-BOTTOM: 0px; COLOR: rgb(0,130,0); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; BORDER-LEFT: 0px; PADDING-RIGHT: 0px">&nbsp;*&nbsp;@author&nbsp;gojomo&nbsp;-&nbsp;http://stackoverflow.com/questions/910740/cancelling-a-long-running-regex-match</SPAN>&nbsp;</SPAN></LI>
  <LI 
  style="FONT-SIZE: 1em; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 10px; MARGIN: 0px 0px 0px 38px; BORDER-LEFT: rgb(209,215,220) 1px solid; LINE-HEIGHT: 18px; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(250,250,250)"><SPAN 
  style="COLOR: black"><SPAN class=comment 
  style="BORDER-TOP: 0px; BORDER-RIGHT: 0px; WIDTH: auto; BORDER-BOTTOM: 0px; COLOR: rgb(0,130,0); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; BORDER-LEFT: 0px; PADDING-RIGHT: 0px">&nbsp;*/</SPAN><SPAN 
  style="COLOR: black">&nbsp;&nbsp;</SPAN></SPAN></LI>
  <LI 
  style="FONT-SIZE: 1em; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 10px; MARGIN: 0px 0px 0px 38px; BORDER-LEFT: rgb(209,215,220) 1px solid; LINE-HEIGHT: 18px; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(250,250,250)"><SPAN 
  style="COLOR: black"><SPAN class=keyword 
  style="FONT-WEIGHT: bold; COLOR: rgb(127,0,85)">private</SPAN><SPAN 
  style="COLOR: black">&nbsp;</SPAN><SPAN class=keyword 
  style="FONT-WEIGHT: bold; COLOR: rgb(127,0,85)">static</SPAN><SPAN 
  style="COLOR: black">&nbsp;</SPAN><SPAN class=keyword 
  style="FONT-WEIGHT: bold; COLOR: rgb(127,0,85)">class</SPAN><SPAN 
  style="COLOR: black">&nbsp;InterruptibleCharSequence&nbsp;</SPAN><SPAN 
  class=keyword 
  style="FONT-WEIGHT: bold; COLOR: rgb(127,0,85)">implements</SPAN><SPAN 
  style="COLOR: black">&nbsp;CharSequence&nbsp;{&nbsp;&nbsp;</SPAN></SPAN></LI>
  <LI 
  style="FONT-SIZE: 1em; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 10px; MARGIN: 0px 0px 0px 38px; BORDER-LEFT: rgb(209,215,220) 1px solid; LINE-HEIGHT: 18px; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(250,250,250)"><SPAN 
  style="COLOR: black">&nbsp;&nbsp;&nbsp;CharSequence&nbsp;inner;&nbsp;&nbsp;</SPAN></LI>
  <LI 
  style="FONT-SIZE: 1em; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 10px; MARGIN: 0px 0px 0px 38px; BORDER-LEFT: rgb(209,215,220) 1px solid; LINE-HEIGHT: 18px; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(250,250,250)"><SPAN 
  style="COLOR: black">&nbsp;&nbsp;</SPAN></LI>
  <LI 
  style="FONT-SIZE: 1em; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 10px; MARGIN: 0px 0px 0px 38px; BORDER-LEFT: rgb(209,215,220) 1px solid; LINE-HEIGHT: 18px; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(250,250,250)"><SPAN 
  style="COLOR: black">&nbsp;&nbsp;&nbsp;<SPAN class=keyword 
  style="FONT-WEIGHT: bold; COLOR: rgb(127,0,85)">public</SPAN><SPAN 
  style="COLOR: black">&nbsp;InterruptibleCharSequence(CharSequence&nbsp;inner)&nbsp;{&nbsp;&nbsp;</SPAN></SPAN></LI>
  <LI 
  style="FONT-SIZE: 1em; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 10px; MARGIN: 0px 0px 0px 38px; BORDER-LEFT: rgb(209,215,220) 1px solid; LINE-HEIGHT: 18px; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(250,250,250)"><SPAN 
  style="COLOR: black">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<SPAN class=keyword 
  style="FONT-WEIGHT: bold; COLOR: rgb(127,0,85)">super</SPAN><SPAN 
  style="COLOR: black">();&nbsp;&nbsp;</SPAN></SPAN></LI>
  <LI 
  style="FONT-SIZE: 1em; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 10px; MARGIN: 0px 0px 0px 38px; BORDER-LEFT: rgb(209,215,220) 1px solid; LINE-HEIGHT: 18px; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(250,250,250)"><SPAN 
  style="COLOR: black">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<SPAN class=keyword 
  style="FONT-WEIGHT: bold; COLOR: rgb(127,0,85)">this</SPAN><SPAN 
  style="COLOR: black">.inner&nbsp;=&nbsp;inner;&nbsp;&nbsp;</SPAN></SPAN></LI>
  <LI 
  style="FONT-SIZE: 1em; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 10px; MARGIN: 0px 0px 0px 38px; BORDER-LEFT: rgb(209,215,220) 1px solid; LINE-HEIGHT: 18px; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(250,250,250)"><SPAN 
  style="COLOR: black">&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;</SPAN></LI>
  <LI 
  style="FONT-SIZE: 1em; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 10px; MARGIN: 0px 0px 0px 38px; BORDER-LEFT: rgb(209,215,220) 1px solid; LINE-HEIGHT: 18px; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(250,250,250)"><SPAN 
  style="COLOR: black">&nbsp;&nbsp;</SPAN></LI>
  <LI 
  style="FONT-SIZE: 1em; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 10px; MARGIN: 0px 0px 0px 38px; BORDER-LEFT: rgb(209,215,220) 1px solid; LINE-HEIGHT: 18px; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(250,250,250)"><SPAN 
  style="COLOR: black">&nbsp;&nbsp;&nbsp;<SPAN class=annotation 
  style="COLOR: rgb(100,100,100)">@Override</SPAN><SPAN 
  style="COLOR: black">&nbsp;&nbsp;</SPAN></SPAN></LI>
  <LI 
  style="FONT-SIZE: 1em; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 10px; MARGIN: 0px 0px 0px 38px; BORDER-LEFT: rgb(209,215,220) 1px solid; LINE-HEIGHT: 18px; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(250,250,250)"><SPAN 
  style="COLOR: black">&nbsp;&nbsp;&nbsp;<SPAN class=keyword 
  style="FONT-WEIGHT: bold; COLOR: rgb(127,0,85)">public</SPAN><SPAN 
  style="COLOR: black">&nbsp;</SPAN><SPAN class=keyword 
  style="FONT-WEIGHT: bold; COLOR: rgb(127,0,85)">char</SPAN><SPAN 
  style="COLOR: black">&nbsp;charAt(</SPAN><SPAN class=keyword 
  style="FONT-WEIGHT: bold; COLOR: rgb(127,0,85)">int</SPAN><SPAN 
  style="COLOR: black">&nbsp;index)&nbsp;{&nbsp;&nbsp;</SPAN></SPAN></LI>
  <LI 
  style="FONT-SIZE: 1em; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 10px; MARGIN: 0px 0px 0px 38px; BORDER-LEFT: rgb(209,215,220) 1px solid; LINE-HEIGHT: 18px; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(250,250,250)"><SPAN 
  style="COLOR: black">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<SPAN class=keyword 
  style="FONT-WEIGHT: bold; COLOR: rgb(127,0,85)">if</SPAN><SPAN 
  style="COLOR: black">&nbsp;(Thread.currentThread().isInterrupted())&nbsp;{&nbsp;&nbsp;</SPAN></SPAN></LI>
  <LI 
  style="FONT-SIZE: 1em; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 10px; MARGIN: 0px 0px 0px 38px; BORDER-LEFT: rgb(209,215,220) 1px solid; LINE-HEIGHT: 18px; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(250,250,250)"><SPAN 
  style="COLOR: black">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<SPAN 
  class=keyword 
  style="FONT-WEIGHT: bold; COLOR: rgb(127,0,85)">throw</SPAN><SPAN 
  style="COLOR: black">&nbsp;</SPAN><SPAN class=keyword 
  style="FONT-WEIGHT: bold; COLOR: rgb(127,0,85)">new</SPAN><SPAN 
  style="COLOR: black">&nbsp;RuntimeException(</SPAN><SPAN class=string 
  style="COLOR: blue">"Interrupted!"</SPAN><SPAN 
  style="COLOR: black">);&nbsp;&nbsp;</SPAN></SPAN></LI>
  <LI 
  style="FONT-SIZE: 1em; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 10px; MARGIN: 0px 0px 0px 38px; BORDER-LEFT: rgb(209,215,220) 1px solid; LINE-HEIGHT: 18px; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(250,250,250)"><SPAN 
  style="COLOR: black">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;</SPAN></LI>
  <LI 
  style="FONT-SIZE: 1em; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 10px; MARGIN: 0px 0px 0px 38px; BORDER-LEFT: rgb(209,215,220) 1px solid; LINE-HEIGHT: 18px; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(250,250,250)"><SPAN 
  style="COLOR: black">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<SPAN class=keyword 
  style="FONT-WEIGHT: bold; COLOR: rgb(127,0,85)">return</SPAN><SPAN 
  style="COLOR: black">&nbsp;inner.charAt(index);&nbsp;&nbsp;</SPAN></SPAN></LI>
  <LI 
  style="FONT-SIZE: 1em; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 10px; MARGIN: 0px 0px 0px 38px; BORDER-LEFT: rgb(209,215,220) 1px solid; LINE-HEIGHT: 18px; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(250,250,250)"><SPAN 
  style="COLOR: black">&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;</SPAN></LI>
  <LI 
  style="FONT-SIZE: 1em; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 10px; MARGIN: 0px 0px 0px 38px; BORDER-LEFT: rgb(209,215,220) 1px solid; LINE-HEIGHT: 18px; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(250,250,250)"><SPAN 
  style="COLOR: black">&nbsp;&nbsp;</SPAN></LI>
  <LI 
  style="FONT-SIZE: 1em; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 10px; MARGIN: 0px 0px 0px 38px; BORDER-LEFT: rgb(209,215,220) 1px solid; LINE-HEIGHT: 18px; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(250,250,250)"><SPAN 
  style="COLOR: black">&nbsp;&nbsp;&nbsp;<SPAN class=annotation 
  style="COLOR: rgb(100,100,100)">@Override</SPAN><SPAN 
  style="COLOR: black">&nbsp;&nbsp;</SPAN></SPAN></LI>
  <LI 
  style="FONT-SIZE: 1em; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 10px; MARGIN: 0px 0px 0px 38px; BORDER-LEFT: rgb(209,215,220) 1px solid; LINE-HEIGHT: 18px; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(250,250,250)"><SPAN 
  style="COLOR: black">&nbsp;&nbsp;&nbsp;<SPAN class=keyword 
  style="FONT-WEIGHT: bold; COLOR: rgb(127,0,85)">public</SPAN><SPAN 
  style="COLOR: black">&nbsp;</SPAN><SPAN class=keyword 
  style="FONT-WEIGHT: bold; COLOR: rgb(127,0,85)">int</SPAN><SPAN 
  style="COLOR: black">&nbsp;length()&nbsp;{&nbsp;&nbsp;</SPAN></SPAN></LI>
  <LI 
  style="FONT-SIZE: 1em; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 10px; MARGIN: 0px 0px 0px 38px; BORDER-LEFT: rgb(209,215,220) 1px solid; LINE-HEIGHT: 18px; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(250,250,250)"><SPAN 
  style="COLOR: black">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<SPAN class=keyword 
  style="FONT-WEIGHT: bold; COLOR: rgb(127,0,85)">return</SPAN><SPAN 
  style="COLOR: black">&nbsp;inner.length();&nbsp;&nbsp;</SPAN></SPAN></LI>
  <LI 
  style="FONT-SIZE: 1em; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 10px; MARGIN: 0px 0px 0px 38px; BORDER-LEFT: rgb(209,215,220) 1px solid; LINE-HEIGHT: 18px; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(250,250,250)"><SPAN 
  style="COLOR: black">&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;</SPAN></LI>
  <LI 
  style="FONT-SIZE: 1em; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 10px; MARGIN: 0px 0px 0px 38px; BORDER-LEFT: rgb(209,215,220) 1px solid; LINE-HEIGHT: 18px; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(250,250,250)"><SPAN 
  style="COLOR: black">&nbsp;&nbsp;</SPAN></LI>
  <LI 
  style="FONT-SIZE: 1em; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 10px; MARGIN: 0px 0px 0px 38px; BORDER-LEFT: rgb(209,215,220) 1px solid; LINE-HEIGHT: 18px; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(250,250,250)"><SPAN 
  style="COLOR: black">&nbsp;&nbsp;&nbsp;<SPAN class=annotation 
  style="COLOR: rgb(100,100,100)">@Override</SPAN><SPAN 
  style="COLOR: black">&nbsp;&nbsp;</SPAN></SPAN></LI>
  <LI 
  style="FONT-SIZE: 1em; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 10px; MARGIN: 0px 0px 0px 38px; BORDER-LEFT: rgb(209,215,220) 1px solid; LINE-HEIGHT: 18px; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(250,250,250)"><SPAN 
  style="COLOR: black">&nbsp;&nbsp;&nbsp;<SPAN class=keyword 
  style="FONT-WEIGHT: bold; COLOR: rgb(127,0,85)">public</SPAN><SPAN 
  style="COLOR: black">&nbsp;CharSequence&nbsp;subSequence(</SPAN><SPAN 
  class=keyword style="FONT-WEIGHT: bold; COLOR: rgb(127,0,85)">int</SPAN><SPAN 
  style="COLOR: black">&nbsp;start,&nbsp;</SPAN><SPAN class=keyword 
  style="FONT-WEIGHT: bold; COLOR: rgb(127,0,85)">int</SPAN><SPAN 
  style="COLOR: black">&nbsp;end)&nbsp;{&nbsp;&nbsp;</SPAN></SPAN></LI>
  <LI 
  style="FONT-SIZE: 1em; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 10px; MARGIN: 0px 0px 0px 38px; BORDER-LEFT: rgb(209,215,220) 1px solid; LINE-HEIGHT: 18px; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(250,250,250)"><SPAN 
  style="COLOR: black">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<SPAN class=keyword 
  style="FONT-WEIGHT: bold; COLOR: rgb(127,0,85)">return</SPAN><SPAN 
  style="COLOR: black">&nbsp;</SPAN><SPAN class=keyword 
  style="FONT-WEIGHT: bold; COLOR: rgb(127,0,85)">new</SPAN><SPAN 
  style="COLOR: black">&nbsp;InterruptibleCharSequence(inner.subSequence(start,&nbsp;end));&nbsp;&nbsp;</SPAN></SPAN></LI>
  <LI 
  style="FONT-SIZE: 1em; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 10px; MARGIN: 0px 0px 0px 38px; BORDER-LEFT: rgb(209,215,220) 1px solid; LINE-HEIGHT: 18px; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(250,250,250)"><SPAN 
  style="COLOR: black">&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;</SPAN></LI>
  <LI 
  style="FONT-SIZE: 1em; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 10px; MARGIN: 0px 0px 0px 38px; BORDER-LEFT: rgb(209,215,220) 1px solid; LINE-HEIGHT: 18px; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(250,250,250)"><SPAN 
  style="COLOR: black">&nbsp;&nbsp;</SPAN></LI>
  <LI 
  style="FONT-SIZE: 1em; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 10px; MARGIN: 0px 0px 0px 38px; BORDER-LEFT: rgb(209,215,220) 1px solid; LINE-HEIGHT: 18px; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(250,250,250)"><SPAN 
  style="COLOR: black">&nbsp;&nbsp;&nbsp;<SPAN class=annotation 
  style="COLOR: rgb(100,100,100)">@Override</SPAN><SPAN 
  style="COLOR: black">&nbsp;&nbsp;</SPAN></SPAN></LI>
  <LI 
  style="FONT-SIZE: 1em; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 10px; MARGIN: 0px 0px 0px 38px; BORDER-LEFT: rgb(209,215,220) 1px solid; LINE-HEIGHT: 18px; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(250,250,250)"><SPAN 
  style="COLOR: black">&nbsp;&nbsp;&nbsp;<SPAN class=keyword 
  style="FONT-WEIGHT: bold; COLOR: rgb(127,0,85)">public</SPAN><SPAN 
  style="COLOR: black">&nbsp;String&nbsp;toString()&nbsp;{&nbsp;&nbsp;</SPAN></SPAN></LI>
  <LI 
  style="FONT-SIZE: 1em; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 10px; MARGIN: 0px 0px 0px 38px; BORDER-LEFT: rgb(209,215,220) 1px solid; LINE-HEIGHT: 18px; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(250,250,250)"><SPAN 
  style="COLOR: black">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<SPAN class=keyword 
  style="FONT-WEIGHT: bold; COLOR: rgb(127,0,85)">return</SPAN><SPAN 
  style="COLOR: black">&nbsp;inner.toString();&nbsp;&nbsp;</SPAN></SPAN></LI>
  <LI 
  style="FONT-SIZE: 1em; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 10px; MARGIN: 0px 0px 0px 38px; BORDER-LEFT: rgb(209,215,220) 1px solid; LINE-HEIGHT: 18px; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(250,250,250)"><SPAN 
  style="COLOR: black">&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;</SPAN></LI>
  <LI 
  style="FONT-SIZE: 1em; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 10px; MARGIN: 0px 0px 0px 38px; BORDER-LEFT: rgb(209,215,220) 1px solid; LINE-HEIGHT: 18px; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(250,250,250)"><SPAN 
  style="COLOR: black">}&nbsp;&nbsp;</SPAN></LI></OL></DIV><BR 
style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-ALIGN: left; FONT: 14px/25px Helvetica, Tahoma, Arial, sans-serif; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px"></body>
</html>
