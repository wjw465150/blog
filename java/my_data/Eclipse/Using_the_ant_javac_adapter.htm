<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
<title>Using the ant javac adapter</title>
<meta name="GENERATOR" content="WinCHM">
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<style>
html,body { 
	/* Default Font */
	font-family: Arial, Helvetica, sans-serif;
	font-size: 11pt;
}
</style>

</head>

<body>
<H2 
style="MARGIN-BOTTOM: 3px; FONT-SIZE: 19px; FONT-FAMILY: Arial, Helvetica, sans-serif; FONT-VARIANT: normal; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); FONT-STYLE: normal; MARGIN-TOP: 25px; LETTER-SPACING: normal; LINE-HEIGHT: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">Using 
the ant javac adapter</H2>
<P 
style="MARGIN-BOTTOM: 10px; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); FONT: 13px Arial, Helvetica, sans-serif; MARGIN-TOP: 10px; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">The 
Eclipse compiler can be used inside an Ant buildfile using the javac adapter. In 
order to use the Eclipse compiler, you simply need to define the<SPAN 
class=Apple-converted-space>&nbsp;</SPAN><B>build.compiler</B><SPAN 
class=Apple-converted-space>&nbsp;</SPAN>property in your buildfile.</P>
<P 
style="MARGIN-BOTTOM: 10px; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); FONT: 13px Arial, Helvetica, sans-serif; MARGIN-TOP: 10px; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">In 
order to get the batch compiler working in an ant buildfile, the ant runtime 
classpath needs to contain the Eclipse batch compiler. When you run your ant 
buildfile:</P>
<OL 
style="MARGIN-BOTTOM: 10px; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); FONT: 13px Arial, Helvetica, sans-serif; MARGIN-TOP: 10px; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">
  <LI 
  style="MARGIN-BOTTOM: 5px; FONT-FAMILY: Arial, Helvetica, sans-serif; COLOR: rgb(0,0,0); MARGIN-TOP: 5px">outside 
  of Eclipse: the easiest way to set up the ant runtime classpath is to add 
  the<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE 
  style="FONT-SIZE: 12px; FONT-FAMILY: 'Courier New', Courier, monospace">ecj.jar</CODE><SPAN 
  class=Apple-converted-space>&nbsp;</SPAN>file using the<SPAN 
  class=Apple-converted-space>&nbsp;</SPAN><CODE 
  style="FONT-SIZE: 12px; FONT-FAMILY: 'Courier New', Courier, monospace">-lib</CODE><SPAN 
  class=Apple-converted-space>&nbsp;</SPAN>argument or dumping it inside 
  the<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE 
  style="FONT-SIZE: 12px; FONT-FAMILY: 'Courier New', Courier, monospace">ANT_HOME</CODE><SPAN 
  class=Apple-converted-space>&nbsp;</SPAN>location. 
  <LI 
  style="MARGIN-BOTTOM: 5px; FONT-FAMILY: Arial, Helvetica, sans-serif; COLOR: rgb(0,0,0); MARGIN-TOP: 5px">inside Eclipse using the same JRE than Eclipse: the 
  Eclipse batch compiler is implicitly added to the ant runtime classpath. 
  <LI 
  style="MARGIN-BOTTOM: 5px; FONT-FAMILY: Arial, Helvetica, sans-serif; COLOR: rgb(0,0,0); MARGIN-TOP: 5px">inside 
  Eclipse using the different JRE: the Eclipse batch compiler must be explicitly 
  added to the ant runtime classpath. This can be done using the<SPAN 
  class=Apple-converted-space>&nbsp;</SPAN><CODE 
  style="FONT-SIZE: 12px; FONT-FAMILY: 'Courier New', Courier, monospace">ecj.jar</CODE><SPAN 
  class=Apple-converted-space>&nbsp;</SPAN>file or using the 
  org.eclipse.jdt.core jar file and the<CODE 
  style="FONT-SIZE: 12px; FONT-FAMILY: 'Courier New', Courier, monospace">jdtCompilerAdapter.jar</CODE><SPAN 
  class=Apple-converted-space>&nbsp;</SPAN>file located inside the 
  org.eclipse.jdt.core jar file (this jar file needs to be extracted 
first).</LI></OL>
<P 
style="MARGIN-BOTTOM: 10px; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); FONT: 13px Arial, Helvetica, sans-serif; MARGIN-TOP: 10px; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">Here 
is a small example:</P><PRE style="WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(68,68,204); FONT: 12px 'Courier New', Courier, monospace; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px" xml:space="preserve"><SPAN class=c2 style="COLOR: rgb(68,68,204)">
&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;project name="compile" default="main" basedir="../."&gt;

 <B>&lt;property name="build.compiler" value="org.eclipse.jdt.core.JDTCompilerAdapter"/&gt;</B>

 &lt;property name="root" value="${basedir}/src"/&gt;

 &lt;property name="destdir" value="d:/temp/bin" /&gt;

 &lt;target name="main"&gt;
  &lt;javac srcdir="${root}" destdir="${destdir}" debug="on" nowarn="on" extdirs="d:/extdirs" source="1.4"&gt;
      &lt;classpath&gt;
        &lt;pathelement location="${basedir}/../org.eclipse.jdt.core/bin"/&gt;

      &lt;/classpath&gt;
  &lt;/javac&gt;
 &lt;/target&gt;
&lt;/project&gt;
</SPAN>
</PRE>
<P 
style="MARGIN-BOTTOM: 10px; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); FONT: 13px Arial, Helvetica, sans-serif; MARGIN-TOP: 10px; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">The 
syntax used for the javac Ant task can be found in the<SPAN 
class=Apple-converted-space>&nbsp;</SPAN><A 
style="TEXT-DECORATION: underline; COLOR: rgb(0,0,255)" 
href="http://ant.apache.org/manual/Tasks/javac.html" shape=rect>Ant javac task 
documentation</A>. The current adapter supports the Javac Ant task 1.4.1 up to 
1.6.5 versions.</P>
<P 
style="MARGIN-BOTTOM: 10px; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); FONT: 13px Arial, Helvetica, sans-serif; MARGIN-TOP: 10px; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">If 
you are using a version above 1.5.0, you can use the nested compiler argument 
element (<CODE 
style="FONT-SIZE: 12px; FONT-FAMILY: 'Courier New', Courier, monospace">&lt;compilerarg&gt;</CODE>) 
to specify compiler specific options.</P><PRE style="WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(68,68,204); FONT: 12px 'Courier New', Courier, monospace; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px" xml:space="preserve"><SPAN class=c2 style="COLOR: rgb(68,68,204)">
...
&lt;javac srcdir="${root}" destdir="${destdir}" debug="on" nowarn="on" extdirs="d:/extdirs" source="1.4"&gt;
    &lt;classpath&gt;
      &lt;pathelement location="${basedir}/../org.eclipse.jdt.core/bin"/&gt;
    &lt;/classpath&gt;

    &lt;compilerarg</SPAN> <SPAN class=c6 style="COLOR: red">compiler="org.eclipse.jdt.core.JDTCompilerAdapter"</SPAN> <SPAN class=c2 style="COLOR: rgb(68,68,204)">line="-1.5 -warn:+boxing"/&gt;
&lt;/javac&gt;
...
</SPAN>
</PRE><B 
style="FONT-SIZE: 13px; FONT-FAMILY: Arial, Helvetica, sans-serif; FONT-VARIANT: normal; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); FONT-STYLE: normal; LETTER-SPACING: normal; LINE-HEIGHT: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">Note:</B><SPAN 
style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FLOAT: none; COLOR: rgb(0,0,0); FONT: 13px Arial, Helvetica, sans-serif; DISPLAY: inline !important; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px"></SPAN>
<OL 
style="MARGIN-BOTTOM: 10px; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); FONT: 13px Arial, Helvetica, sans-serif; MARGIN-TOP: 10px; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">
  <LI 
  style="MARGIN-BOTTOM: 5px; FONT-FAMILY: Arial, Helvetica, sans-serif; COLOR: rgb(0,0,0); MARGIN-TOP: 5px">To 
  prevent compiler dependant buildfiles, we<SPAN 
  class=Apple-converted-space>&nbsp;</SPAN><EM 
  style="FONT-STYLE: italic">strongly</EM><SPAN 
  class=Apple-converted-space>&nbsp;</SPAN>advise you to use a<SPAN 
  class=Apple-converted-space>&nbsp;</SPAN><CODE 
  style="FONT-SIZE: 12px; FONT-FAMILY: 'Courier New', Courier, monospace">&lt;compilerarg&gt;</CODE><SPAN 
  class=Apple-converted-space>&nbsp;</SPAN>whose "compiler" attribute value 
  is<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE 
  style="FONT-SIZE: 12px; FONT-FAMILY: 'Courier New', Courier, monospace">org.eclipse.jdt.core.JDTCompilerAdapter</CODE>. 
  If this is not set, the buildfile can only be used with the Eclipse compiler. 
  If set, the nested compiler argument is ignored if the name is different from 
  the compiler name specified by the<SPAN 
  class=Apple-converted-space>&nbsp;</SPAN><CODE 
  style="FONT-SIZE: 12px; FONT-FAMILY: 'Courier New', Courier, monospace">build.compiler</CODE><SPAN 
  class=Apple-converted-space>&nbsp;</SPAN>property. 
  <LI 
  style="MARGIN-BOTTOM: 5px; FONT-FAMILY: Arial, Helvetica, sans-serif; COLOR: rgb(0,0,0); MARGIN-TOP: 5px"><CODE 
  style="FONT-SIZE: 12px; FONT-FAMILY: 'Courier New', Courier, monospace">&lt;compilerarg&gt;</CODE><SPAN 
  class=Apple-converted-space>&nbsp;</SPAN>should not be used to set values like 
  target value, source value, debug options, or any options that could be set 
  using the defined attributes of the<SPAN 
  class=Apple-converted-space>&nbsp;</SPAN><CODE 
  style="FONT-SIZE: 12px; FONT-FAMILY: 'Courier New', Courier, monospace">javac</CODE><SPAN 
  class=Apple-converted-space>&nbsp;</SPAN>ant task. Its usage must be reserved 
  to pass compiler specific options like warning options. When a command-line 
  argument is specified more than once, the Eclipse batch compiler can report 
  errors like:<PRE style="FONT-SIZE: 12px; FONT-FAMILY: 'Courier New', Courier, monospace; COLOR: rgb(68,68,204)" xml:space="preserve">duplicate target compliance setting specification: 1.5</PRE>
  <LI 
  style="MARGIN-BOTTOM: 5px; FONT-FAMILY: Arial, Helvetica, sans-serif; COLOR: rgb(0,0,0); MARGIN-TOP: 5px">       
             
              
   <PRE style="FONT-SIZE: 12px; FONT-FAMILY: 'Courier New', Courier, monospace; COLOR: rgb(68,68,204)" xml:space="preserve">     &nbsp;</PRE></LI></OL></body>
</html>
