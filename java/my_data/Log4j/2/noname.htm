<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3c.org/TR/1999/REC-html401-19991224/loose.dtd">
<HTML dir=ltr xmlns="http://www.w3.org/1999/xhtml" 
xml:lang="zh-CN">
<HEAD>

  <title>开发框架之Spring对log4j的增强</title>
  <LINK 
href="favicon.ico" type=image/x-icon rel="shortcut icon">
  <LINK 
title=tgyd2006 href="rss" type=application/rss+xml rel=alternate>
  <LINK 
media=screen href="blog.css_1243862553" 
type=text/css rel=stylesheet>
  <LINK media=screen 
href="blue.css_1235723792" 
type=text/css rel=stylesheet>
  <LINK media=screen 
href="SyntaxHighlighter.css_1201588027" 
type=text/css rel=stylesheet>
  <STYLE>
div#main {
	background-color: transparent;
	border: 0;
	padding: 0px;
	width: 740px;
}
</STYLE>
  <LINK media=screen 
href="ui.css_1222156967" 
type=text/css rel=stylesheet>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
  </HEAD>

  <BODY>
  <DIV id=page>
    <DIV class=clearfix id=content>
      <DIV id=main>
        <DIV class=blog_main><!--StartFragment-->
          <DIV class=blog_title>
            <DIV class=date><SPAN class=year>2008</SPAN><SPAN class=sep_year>-</SPAN><SPAN 
class=month>03</SPAN><SPAN class=sep_month>-</SPAN><SPAN 
class=day>27</SPAN></DIV>
            <H3 title="" ><A href="http://tgyd2006.javaeye.com/blog/176736">开发框架之Spring对log4j的增强</A></H3>
          </DIV>
          <DIV class=blog_content><BR>
            <BR>
            Spring最擅长的，就是在别家的蛋糕上再加些cream，让你J2EE without 
            Spring的时候心痒痒。 <BR>
            <BR>
            &nbsp;&nbsp; log4j，可以有如下的cream： <BR>
            &nbsp;&nbsp; 1. 
            动态的改变记录级别和策略，不需要重启Web应用，如《Effective Enterprise Java》所说。 <BR>
            &nbsp;&nbsp; 2. 把log文件定在 
            /WEB-INF/logs/ 而不需要写绝对路径。 <BR>
            &nbsp;&nbsp; 3. 
            可以把log4j.properties和其他properties一起放在/WEB-INF/ ，而不是Class-Path。 <BR>
            <BR>
            &nbsp;&nbsp; 
            在web.xml 添加 <BR>
            <BR>
            &nbsp;&nbsp;&nbsp; &lt; context-param&gt; <BR>
            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt; 
            param-name&gt;log4jConfigLocation&lt; /param-name&gt; <BR>
            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt; 
            param-value&gt;WEB-INF/log4j.properties&lt; /param-value&gt; <BR>
            &nbsp;&nbsp;&nbsp; &lt; 
            /context-param&gt; <BR>
            <BR>
            &nbsp;&nbsp;&nbsp; &lt; context-param&gt; <BR>
            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt; 
            param-name&gt;log4jRefreshInterval&lt; /param-name&gt; <BR>
            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt; 
            param-value&gt;60000&lt; /param-value&gt; <BR>
            &nbsp;&nbsp;&nbsp; &lt; /context-param&gt; <BR>
            <BR>
            &nbsp;&nbsp;&nbsp; &lt; listener&gt; <BR>
            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt; 
            listener-class&gt;org.springframework.web.util.Log4jConfigListener&lt; 
            /listener-class&gt; <BR>
            &nbsp;&nbsp;&nbsp; &lt; /listener&gt; <BR>
            <BR>
            &nbsp;&nbsp;&nbsp;&nbsp; 在上文的配置里, <BR>
            &nbsp;&nbsp;&nbsp;&nbsp; 
            Log4jConfigListener会去WEB-INF/log4j.propeties 读取配置文件; <BR>
            &nbsp;&nbsp;&nbsp;&nbsp; 
            开一条watchdog线程每60秒扫描一下配置文件的变化; <BR>
            &nbsp;&nbsp;&nbsp;&nbsp; 并把web目录的路径压入一个叫webapp.root的系统变量。 <BR>
            <BR>
            &nbsp;&nbsp;&nbsp;&nbsp; 然后，在log4j.properties 里就可以这样定义logfile位置 <BR>
            <BR>
            <BR>
            log4j.appender.logfile.File=${webapp.root}/WEB-INF/logs/myfuse.log <BR>
            <BR>&nbsp;&nbsp;&nbsp;&nbsp; 
如果有多个web应用，怕webapp.root变量重复，可以在context-param里定义webAppRootKey。
          </DIV>
          <DIV class=blog_content>
              <BR>&nbsp;
          </DIV><!--EndFragment--></DIV>
      </DIV>
    </DIV>
  </DIV>
</BODY>
</HTML>