<html>
<title>修改java字节码(.class)文件</title>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<body>
<!--StartFragment-->
<div class="multicntwrap">
  <div class="multicnt">
    <div>
      <h3 class="title pre fs1"><span class="tcnt">修改java字节码(.class)文件</span>&nbsp;&nbsp;<span class="bgc0 fc07 fw0 fs0"></span></h3>
      <p class="tdep clearfix nbw-act fc06" style="line-height:20px;"> <span class="pleft"> <span class="blogsep">2010-06-22 11:25:37</span><span class="blogsep">|&nbsp;&nbsp;分类：</span> <a class="fc03 m2a" href="http://ljhzzyx.blog.163.com/blog/#m=0&amp;t=1&amp;c=fks_087070086082085069080081095095087094082075084085087065" title="Java">Java</a> <span class="blogsep" id="$_blogTagTitle">|&nbsp;&nbsp;标签：</span><span class="fc03" id="$_blogTagInfo"><a href="http://ljhzzyx.blog.163.com/blog/#m=0&amp;t=3&amp;c=class" class="fc03 m2a">class</a>&nbsp;&nbsp;<a href="http://ljhzzyx.blog.163.com/blog/#m=0&amp;t=3&amp;c=javassist" class="fc03 m2a">javassist</a>&nbsp;&nbsp;<a href="http://ljhzzyx.blog.163.com/blog/#m=0&amp;t=3&amp;c=java" class="fc03 m2a">java</a>&nbsp;&nbsp;</span> </span> <span class="pright fc07 ztag"><span class="blogsep">|</span><span class="zihao fc03" id="$_fontswitch">字号</span></span><span class="pright pnt fc03" id="$_blog_subscribe"><span class="iblock icn0 icn0-919">&nbsp;</span><a class="m2a">订阅</a></span> </p>
    </div>
  </div>
</div>
<div> </div>
<div class="bct fc05 fc11 nbw-blog ztag js-fs2">&nbsp;&nbsp;&nbsp; 
  特殊情况，只有.class文件，或者自己把源代码弄丢，就需要修改.class文件文件了。有.class文件的反编译工具，可以将.class文件反
  编译成java源码，修改以后再编译成.class文件。这样做还是麻烦，有的java类依赖包很多，这样就要把依赖包到找出来进行编译，有时候也许只是
  想修改一个很小的地方，就没必要这么大费周折了。可以使用javassist库修改.class文件。<br>
  &nbsp;&nbsp;&nbsp; 比如有这样简单的一个类：<br>
  package javassist;<br>
  public class SistTest {<br>
  ......<br>
  public static String getMessage(String str){<br>
  &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; return "yes ," + str;<br>
  &nbsp;&nbsp;&nbsp; }<br>
  }<br>
  &nbsp;&nbsp;&nbsp; .class文件在E:/javassist目录下(E:/javassist/SistTest.class)，对这个.class文件进行修改的代码如下：<br>
  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ClassPool pool = ClassPool.getDefault();<br>
  &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; //设置目标类的路径<br>
  &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; pool.insertClassPath("E:/");<br>
  &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; //获得要修改的类<br>
  &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; CtClass cclass = pool.get("javassist.SistTest");<br>
  &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; //设置方法需要的参数<br>
  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; CtClass[] param = new CtClass[1] ;<br>
  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; param[0] = pool.get("java.lang.String") ;<br>
  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //得到方法<br>
  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; CtMethod method = cclass.getDeclaredMethod("getMessage",param);<br>
  &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; //插入新的代码<br>
  &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; method.insertBefore("{return \"no ,\" + $1;}");//$1表示第一个参数<br>
  &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; //method.setBody("{return $1;}");<br>
  &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; //保存到文件里<br>
  &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; cclass.writeFile("E:/");//这里把.class文件再写回它原来所在地目录，如果没有这个参数，则会在当前项目的根目录生成新的.class文件<br>
  &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; <br>
  &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; //调用修改后的类<br>
  &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; //Class c = cclass.toClass();<br>
  &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; //SistTest s = (SistTest) c.newInstance();<br>
  &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; //System.out.println(s.getMessage());<br>
  &nbsp;&nbsp;&nbsp; 代码最后调用修改后的类，需要获得class文件的源码，在目前情况下是不需要的，这里记录下，备查。<br>
  <br>
&nbsp;&nbsp;&nbsp; 编辑class文件，另外还有可视化的工具，java class file editor。还有java bytecode editor，这个就可以编辑jvm的指令代码了。</div>
<!--EndFragment-->
</body>
</htm>