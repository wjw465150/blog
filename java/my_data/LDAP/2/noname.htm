<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3c.org/TR/1999/REC-html401-19991224/loose.dtd">

<HTML dir=ltr xml:lang="zh-CN" 
xmlns="http://www.w3.org/1999/xhtml">
<HEAD>
<title>CRUD data in LDAP with spring v3.x</title>
<LINK 
rel="shortcut icon" type=image/x-icon href="favicon.ico">
<LINK 
title=JavaEye rel=search type=application/opensearchdescription+xml 
href="open_search.xml">
<LINK title="Wang Xiang's Blog" rel=alternate 
type=application/rss+xml href="rss">
<LINK rel=stylesheet type=text/css 
href="blog.css_1300693847" media=screen>
<LINK 
rel=stylesheet type=text/css 
href="blue.css_1299226978" 
media=screen>
  <SCRIPT type=text/javascript 
src="application.js_1299226978"></SCRIPT>
  <SCRIPT id=__onDOMContentLoaded defer src="http://:/"></SCRIPT>
  <LINK rel=stylesheet type=text/css 
href="SyntaxHighlighter.css_1299226978" 
media=screen>
  <SCRIPT type=text/javascript 
src="hotkey.js_1299226978"></SCRIPT>
  <SCRIPT type=text/javascript 
src="code_favorites.js_1300153098"></SCRIPT>
  <STYLE>
div#main {
	background-color: transparent;
	border: 0;
	padding: 0px;
	width: 740px;
}
</STYLE>
  <LINK rel=stylesheet type=text/css 
href="ui.css_1299226978" 
media=screen>
  <SCRIPT type=text/javascript 
src="compress.js_1299226978"></SCRIPT>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
  </HEAD>

  <BODY>
  <DIV id=page>
    <DIV id=content class=clearfix>
      <DIV id=main>
        <DIV class=blog_main>
          <DIV class=blog_content><!--StartFragment-->JDK 1.6.x <BR>
            Oralce Identity Directory 11g <BR>
            Spring 3.x --add the following 
            ldap-related jar files in spring to your project <BR>
            spring-ldap-core-tiger-1.3.0.RELEASE.jar <BR>
            spring-ldap-1.3.0.RELEASE-all.jar <BR>
            commons-lang-1.6.2.jar <BR>
            commons-logging-1.0.4.jar <BR>
            commons-logging-api-1.1.jar <BR>
            org.springframework.beans-3.0.2.RELEASE.jar <BR>
            org.springframework.core-3.0.2.RELEASE.jar <BR>
            org.springframework.transaction-3.0.2.RELEASE.jar <BR>
            <BR>
            &nbsp;&nbsp;&nbsp; *&nbsp; spring 
            configuraiton <BR>
            <BR>
            &lt;?xml version="1.0" encoding="UTF-8"?&gt; <BR>
            &lt;beans 
            xmlns="http://www.springframework.org/schema/beans" <BR>
            &nbsp;&nbsp;&nbsp; 
            xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" <BR>
            &nbsp;&nbsp;&nbsp; 
            xsi:schemaLocation="http://www.springframework.org/schema/beans <BR>
            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
            http://www.springframework.org/schema/beans/spring-beans-2.0.xsd"&gt; <BR>
            &nbsp;&nbsp;&nbsp; 
            &lt;bean id="contextSource" 
            class="org.springframework.ldap.core.support.LdapContextSource"&gt; <BR>
            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
            &lt;property name="url" value="ldap://&lt;server&gt;:&lt;port&gt;" /&gt; <BR>
            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;property name="base" value="&lt;base DN&gt;" /&gt; <BR>
            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
            &lt;property name="userDn" value="&lt;user DN&gt;" /&gt; <BR>
            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
            &lt;property name="password" value="&lt;password&gt;" /&gt; <BR>
            &nbsp;&nbsp;&nbsp; 
            &lt;/bean&gt; <BR>
            &nbsp;&nbsp;&nbsp; &lt;bean id="ldapTemplate" 
            class="org.springframework.ldap.core.LdapTemplate"&gt; <BR>
            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
            &lt;constructor-arg ref="contextSource" /&gt; <BR>
            &nbsp;&nbsp;&nbsp; &lt;/bean&gt; <BR>
            &nbsp;&nbsp;&nbsp; 
            &lt;bean id="ldapUserDao" class="com.ldap.dao.SsoUserDaoImpl"&gt; <BR>
            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
            &lt;property name="ldapTemplate" ref="ldapTemplate" /&gt; <BR>
            &nbsp;&nbsp;&nbsp; &lt;/bean&gt; <BR>
            &lt;/beans&gt; <BR>
            <BR>
            &nbsp;&nbsp;&nbsp; * Code <BR>
            <BR>
            // create user <BR>
            &nbsp;&nbsp;&nbsp; public void 
            create(SsoUser user) { <BR>
            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; try { <BR>
            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Attributes attrs = 
            buildAttributes(user); <BR>
            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ldapTemplate.bind(buildDn(user), null, 
            attrs); <BR>
            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; } catch (Exception e) { <BR>
            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; e.printStackTrace(); <BR>
            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; } <BR>
            &nbsp;&nbsp;&nbsp; } <BR>
            <BR>
            &nbsp;&nbsp;&nbsp; private Attributes buildAttributes(SsoUser 
            user) { <BR>
            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Attributes attrs = new BasicAttributes(); <BR>
            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
            BasicAttribute obj = new BasicAttribute("objectclass"); <BR>
            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
            obj.add("top"); <BR>
            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; obj.add("person"); <BR>
            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; obj.add("cssoUser"); <BR>
            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; attrs.put(obj); <BR>
            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; attrs.put("mail", user.getEmail()); <BR>
            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; attrs.put("employeenumber", user.getCustId()); <BR>
            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
            attrs.put("cn", user.getUserId()); <BR>
            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; attrs.put("uid", 
            user.getUserId()); <BR>
            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; attrs.put("sn", user.getUserId()); <BR>
            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
            return attrs; <BR>
            &nbsp;&nbsp;&nbsp; } <BR>
            <BR>
            &nbsp;&nbsp;&nbsp; private String buildDn(SsoUser user) { <BR>
            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return "cn=" + user.getUserId(); <BR>
            &nbsp;&nbsp;&nbsp; } <BR>
            <BR>
            // search user <BR>
            &nbsp;&nbsp;&nbsp; @Override <BR>
            &nbsp;&nbsp;&nbsp; public List&lt;SsoUser&gt; getAllUsers() { <BR>
            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
            return ldapTemplate.search("", "(objectclass=cssoUser)", <BR>
            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; new 
            SsoUserAttributeMapper()); <BR>
            <BR>
            &nbsp;&nbsp;&nbsp; } <BR>
            <BR>
            private class 
            SsoUserAttributeMapper implements AttributesMapper { <BR>
            <BR>
            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; @Override <BR>
            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public Object mapFromAttributes(Attributes attrs) <BR>
            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; throws NamingException { <BR>
            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; SsoUser user = new 
            SsoUser(); <BR>
            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; user.setUserId((String) attrs.get("cn").get()); <BR>
            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; user.setCustId((String) attrs.get("employeenumber").get()); <BR>
            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; user.setEmail((String) attrs.get("mail").get()); <BR>
            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
            return user; <BR>
            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; } <BR>
            <BR>
            &nbsp;&nbsp;&nbsp; } <BR>
            <BR>
            // update user <BR>
            <BR>
            &nbsp;&nbsp;&nbsp; 
            @Override <BR>
            &nbsp;&nbsp;&nbsp; public void update(SsoUser user) { <BR>
            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; try { <BR>
            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Attributes attrs = buildAttributes(user); <BR>
            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
            ldapTemplate.rebind(buildDn(user), null, attrs); <BR>
            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; } catch (Exception 
            e) { <BR>
            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; e.printStackTrace(); <BR>
            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; } <BR>&nbsp;&nbsp;&nbsp; }</DIV>
          <DIV class=blog_content><!--EndFragment--></DIV>
        </DIV>
      </DIV>
    </DIV>
  </DIV>
</BODY>
</HTML>