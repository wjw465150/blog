<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
<title>解决 HTTPS hostname wrong: should be <localhost></title>
<meta name="GENERATOR" content="WinCHM">
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<style>
html,body { 
	/* Default Font */
	font-family: 宋体, Arial, Helvetica, sans-serif;
	font-size: 10pt;
}
</style>

</head>

<body>import java.io.BufferedReader;<BR>import 
java.io.BufferedWriter;<BR>import java.io.InputStreamReader;<BR>import 
java.io.OutputStreamWriter;<BR>import java.net.Socket;<BR>import 
java.security.cert.CertificateException;<BR>import 
java.security.cert.X509Certificate;<BR>import 
javax.net.ssl.SSLContext;<BR>import javax.net.ssl.SSLSocketFactory;<BR>import 
javax.net.ssl.TrustManager;<BR>import 
javax.net.ssl.X509TrustManager;<BR>/**<BR>&nbsp;* 
JAVA操作SSL协议，通过Socket访问Https的程序代码例子。<BR>&nbsp;* <BR>&nbsp;* @author 
JAVA世纪网(java2000.net)<BR>&nbsp;* <BR>&nbsp;*/<BR>public class ReadHttpsURL 
{<BR>&nbsp; // 默认的HTTPS 端口<BR>&nbsp; static final int HTTPS_PORT = 
443;<BR>&nbsp; public static void main(String argv[]) throws Exception 
{<BR>&nbsp;&nbsp;&nbsp; // 受访主机<BR>&nbsp;&nbsp;&nbsp; String host = "<A 
href="http://www.google.com">www.google.com</A>";<BR>&nbsp;&nbsp;&nbsp; // 
受访的页面<BR>&nbsp;&nbsp;&nbsp; String url = 
"/adsense/?sourceid=aso&amp;subid=ZH_CN-ET-AS-ADSBY6&amp;medium=link&amp;hl=zh_CN";<BR>&nbsp;&nbsp;&nbsp; 
// 自定义的管理器<BR>&nbsp;&nbsp;&nbsp; X509TrustManager xtm = new 
Java2000TrustManager();<BR>&nbsp;&nbsp;&nbsp; TrustManager mytm[] = { xtm 
};<BR>&nbsp;&nbsp;&nbsp; // 得到上下文<BR>&nbsp;&nbsp;&nbsp; SSLContext ctx = 
SSLContext.getInstance("SSL");<BR>&nbsp;&nbsp;&nbsp; // 
初始化<BR>&nbsp;&nbsp;&nbsp; ctx.init(null, mytm, null);<BR>&nbsp;&nbsp;&nbsp; // 
获得工厂<BR>&nbsp;&nbsp;&nbsp; SSLSocketFactory factory = 
ctx.getSocketFactory();<BR>&nbsp;&nbsp;&nbsp; // 
从工厂获得Socket连接<BR>&nbsp;&nbsp;&nbsp; Socket socket = factory.createSocket(host, 
HTTPS_PORT);<BR>&nbsp;&nbsp;&nbsp; // 剩下的就和普通的Socket操作一样了<BR>&nbsp;&nbsp;&nbsp; 
BufferedWriter out = new BufferedWriter(new 
OutputStreamWriter(socket.getOutputStream()));<BR>&nbsp;&nbsp;&nbsp; 
BufferedReader in = new BufferedReader(new 
InputStreamReader(socket.getInputStream()));<BR>&nbsp;&nbsp;&nbsp; 
out.write("GET " + url + " HTTP/1.0/n/n");<BR>&nbsp;&nbsp;&nbsp; 
out.flush();<BR>&nbsp;&nbsp;&nbsp; System.out.println("start&nbsp;&nbsp; 
work!");<BR>&nbsp;&nbsp;&nbsp; String line;<BR>&nbsp;&nbsp;&nbsp; StringBuffer 
sb = new StringBuffer();<BR>&nbsp;&nbsp;&nbsp; while ((line = in.readLine()) != 
null) {<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; sb.append(line + 
"/n");<BR>&nbsp;&nbsp;&nbsp; }<BR>&nbsp;&nbsp;&nbsp; 
out.close();<BR>&nbsp;&nbsp;&nbsp; in.close();<BR>&nbsp;&nbsp;&nbsp; 
System.out.println(sb.toString());<BR>&nbsp; }<BR>}<BR>/**<BR>&nbsp;* 
自定义的认证管理类。<BR>&nbsp;* <BR>&nbsp;* @author JAVA世纪网(java2000.net)<BR>&nbsp;* 
<BR>&nbsp;*/<BR>class Java2000TrustManager implements X509TrustManager 
{<BR>&nbsp; Java2000TrustManager() {<BR>&nbsp;&nbsp;&nbsp; // 
这里可以进行证书的初始化操作<BR>&nbsp; }<BR>&nbsp; // 检查客户端的可信任状态<BR>&nbsp; public void 
checkClientTrusted(X509Certificate chain[], String authType) throws 
CertificateException {<BR>&nbsp;&nbsp;&nbsp; 
System.out.println("检查客户端的可信任状态...");<BR>&nbsp; }<BR>&nbsp; // 
检查服务器的可信任状态<BR>&nbsp; public void checkServerTrusted(X509Certificate chain[], 
String authType) throws CertificateException {<BR>&nbsp;&nbsp;&nbsp; 
System.out.println("检查服务器的可信任状态");<BR>&nbsp; }<BR>&nbsp; // 返回接受的发行商数组<BR>&nbsp; 
public X509Certificate[] getAcceptedIssuers() {<BR>&nbsp;&nbsp;&nbsp; 
System.out.println("获取接受的发行商数组...");<BR>&nbsp;&nbsp;&nbsp; return 
null;<BR>&nbsp; }<BR>}</body>
</html>
