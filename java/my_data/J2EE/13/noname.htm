<html>

<head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
  <title>轻量级EJB--Cajo</title>
</head>

<body>
  <!--StartFragment-->
  <h1 class="title_txt">轻量级EJB--Cajo
					<cite class="fav_csdnstylebykimi"><A title=收藏到我的网摘中，并分享给我的朋友 class=fav_csdnstylebykimi href="javascript:d=document;t=d.selection%3F(d.selection.type!='None'?d.selection.createRange().text:''):(d.getSelection?d.getSelection():'');void(saveit=window.open('http://wz.csdn.net/storeit.aspx?t='+escape(d.title)+'&amp;u='+escape(d.location.href)+'&amp;c='+escape(t),'saveit','scrollbars=no,width=590,height=300,left=75,top=20,status=no,resizable=yes'));saveit.focus();" >收藏</A> </cite>
					
				</h1>
  <div class="blogstory">
    <p>Cajo的目的就是使得JVM间的通信变得简单，不需要EJB容器，任何servlet容器之间都可以进行通信。先到官方网站<a href="http://java.net/projects/cajo/downloads">http://java.net/projects/cajo/downloads</a> 下载相应的包，就一个包下载完就可以直接用了。</p>
    <p>只需要用到gnu.cajo.invoke.Remote和gnu.cajo.utils.ItemServer两个类就可以了，如下：</p>
    <p>Remote.config(null, port, null, 0);
      <br>ItemServer.bind(new CajoTestObj(), "displayMethodName");</p>
    <p>如果另一台JVM需要读取相关信息的话可以这样：</p>
    <p>Object object = Remote.getItem("//host:port/displayMethodName");
      <br>Map&lt;Integer, User&gt; userArray= (Map&lt;Integer, User&gt;)Remote.invoke(object, "realMethodName",null);</p>
    <p>就这么简单就读取到了另外一台JVM上的数据。</p>
    <p>&nbsp;</p>
    <p>&nbsp;</p>
  </div>
  <!--EndFragment-->
</body>
</htm>