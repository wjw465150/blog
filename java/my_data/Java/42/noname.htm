<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">

<HTML>
<HEAD>
<title>实例教程：巧用Java 实现个性MSN聊天功能 （2）</title>
<LINK 
href="index_css_new.css" 
type=text/css rel=stylesheet>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
</HEAD>

<BODY>
<DIV style="WIDTH: 986px">
  <DIV id=aaaa 
style="WIDTH: 639px; FLOAT: left; MARGIN-LEFT: 20px; MARGIN-TOP: 5px">
    <TABLE cellSpacing=0 cellPadding=0 width="100%" border=0>
      <TBODY>
        <TR>
          <TD align=center 
background=wz_left_2.gif><!--StartFragment-->
            <TABLE class=titel style="BORDER-TOP: #ffffff 17px solid" cellSpacing=0 
cellPadding=0 width=560 border=0>
              <TBODY>
                <TR>
                  <TD align=center><H1 class=titel>实例教程：巧用Java 实现个性MSN聊天功能 （2） </H1></TD>
                </TR>
              </TBODY>
            </TABLE>
            <TABLE style="MARGIN: 2px 0px 20px" cellSpacing=0 cellPadding=0 width=560 
border=0>
              <TBODY>
                <TR>
                  <TD bgColor=#b1bcc0 height=1></TD>
                </TR>
              </TBODY>
            </TABLE>
            <TABLE style="MARGIN-BOTTOM: 20px" cellSpacing=0 cellPadding=0 width=560 
border=0>
              <TBODY>
                <TR>
                  <TD align=center><SPAN class=content01></SPAN><SPAN class=b>发布时间：2008.09.18 
                    10:50</SPAN>&nbsp;&nbsp;&nbsp;&nbsp;<SPAN class=b> 来源：赛迪网</SPAN>&nbsp;&nbsp;&nbsp;&nbsp;<SPAN 
class=b>作者：DuDu</SPAN></TD>
                </TR>
              </TBODY>
            </TABLE>
            <TABLE class=p11 cellSpacing=0 cellPadding=0 width=560 border=0>
              <TBODY>
                <TR>
                  <TD style="WORD-WRAP: break-word" align=left><P class=a14c style="TEXT-INDENT: 2em">
                    <SPAN class=a14c id=zoom>
                    <P style="TEXT-INDENT: 2em">
                    <P 
style="TEXT-INDENT: 2em">闽南语说：说破不值钱！闲话说了那么多，现在我们就开始来开发我们自己基于JAVA的跨平台的MSN客户端程序。相信听到这句大家都会觉得血脉膨胀，没错，还有什么比动手写程序更让人兴奋的事情呢？何况还是基于JAVA的、跨平台的！
                    <P 
style="TEXT-INDENT: 2em">我们先给出一段可运行的代码来完成一个最简单的功能：当有人把它加入好友时，程序自动将之加入好友，当有人给它发送信息，程序自动回复一条相同的信息。OK，完成这么简单的功能的代码如下：
                    <P style="TEXT-INDENT: 2em">
                    <CENTER>
                      <CCID_NOBR>
                        <TABLE cellSpacing=0 borderColorDark=#ffffff cellPadding=2 width=400 
align=center borderColorLight=black border=1>
                          <TBODY>
                            <TR>
                              <TD class=code style="FONT-SIZE: 9pt" bgColor=#e6e6e6><PRE><CCID_CODE>/*

* Created on 2003-11-21 by Liudong

*/

package jmsn.demo; 

import rath.msnm.MSNMessenger;

import rath.msnm.SwitchboardSession;

import rath.msnm.UserStatus;

import rath.msnm.entity.MsnFriend;

import rath.msnm.event.MsnAdapter;

import rath.msnm.msg.MimeMessage;

/**

* MSN演示程序

* @author Liudong

*/

public class MSNDaemon extends Thread {

private static MSNMessenger msn;

public static void main(String[] args) {

msn = new MSNMessenger("youraccount@hotmail.com", "password");

msn.setInitialStatus(UserStatus.ONLINE);

msn.addMsnListener(new MSNAdapter(msn));

msn.login();

System.out.println("Waiting for the response....");

//捕捉Ctrl+C的输入以便注销MSN的登录

Runtime.getRuntime().addShutdownHook(new MSNDaemon());

}

/**

* 用户中止程序执行

*/

public void run() {

msn.logout();

System.out.println("MSN Logout OK");

}

}

/**

* MSN消息事件处理类

* @author Liudong

*/
</CCID_CODE>
</PRE></TD>
                            </TR>
                          </TBODY>
                        </TABLE>
                    </CCID_NOBR>
                    </CENTER>
                    <BR>
                    <P style="TEXT-INDENT: 2em">
                    <CENTER>
                      <CCID_NOBR>
                        <TABLE cellSpacing=0 borderColorDark=#ffffff cellPadding=2 width=400 
align=center borderColorLight=black border=1>
                          <TBODY>
                            <TR>
                              <TD class=code style="FONT-SIZE: 9pt" bgColor=#e6e6e6><PRE><CCID_CODE>class MSNAdapter extends MsnAdapter {

 MSNMessenger messenger;

public MSNAdapter(MSNMessenger messenger) {

this.messenger = messenger;

}

/**

* 某人正在输入信息

*/

public void progressTyping(

SwitchboardSession ss,

MsnFriend friend,

String typingUser) {

System.out.println(

friend.getLoginName() + "正在输入信息...");

}

/**

* 收到消息的时候执行该方法

*/

public void instantMessageReceived(

SwitchboardSession ss,

MsnFriend friend,

MimeMessage mime) {

System.out.print(

"接收到消息：" + friend.getFriendlyName() + "-&gt;");

System.out.println(mime.getMessage());

try {

//发送相同的回复信息给发送者messenger.sendMessage(

friend.getLoginName(), mime);

} 

catch (Exception e) {

e.printStackTrace();

}

}

/**

* 登录成功后执行该方法

*/

public void loginComplete(MsnFriend own) {

System.out.println(

own.getLoginName() + " Login OK");

}

/**

* 登录失败后执行该方法

*/

public void loginError(

String header) {

System.out.println(

"Login Failed: " + header);

}

/**

* 好友离线时执行该方法

*/

public void userOffline(String loginName) {

System.out.println("USER " + loginName + " Logout.");

}

/**

* 好友上线时执行该方法

*/

public void userOnline(MsnFriend friend) {

System.out.println(

"USER "+friend.getFriendlyName()+" Login.");

}

/**

* 有人加我为好友时执行

*/

public void whoAddedMe(MsnFriend friend) {

System.out.println(

"USER " + friend.getLoginName() + " Addme.");

try {

messenger.addFriend(friend.getLoginName());

}

 catch (Exception e) {

e.printStackTrace();

}

}
</CCID_CODE>
</PRE></TD>
                            </TR>
                          </TBODY>
                        </TABLE>
                    </CCID_NOBR>
                    </CENTER>
                    <BR>
                    <P style="TEXT-INDENT: 2em">
                    <CENTER>
                      <CCID_NOBR>
                        <TABLE cellSpacing=0 borderColorDark=#ffffff cellPadding=2 width=400 
align=center borderColorLight=black border=1>
                          <TBODY>
                            <TR>
                              <TD class=code style="FONT-SIZE: 9pt" bgColor=#e6e6e6><PRE><CCID_CODE>/**

* 有人把我从好友列表中删除时执行

*/

public void whoRemovedMe(MsnFriend friend) {

System.out.println("USER "+friend.getLoginName()+" Remove me.");

try {

messenger.removeFriend(friend.getLoginName());

}

 catch (Exception e) {

e.printStackTrace();

}

}

}
</CCID_CODE>
</PRE></TD>
                            </TR>
                          </TBODY>
                        </TABLE>
                    </CCID_NOBR>
                    </CENTER>
                    <BR>
                    <P 
style="TEXT-INDENT: 2em">除了两个常用的对象MsnFriend以及MimeMessage分别用来表示我的好友以及MSN信息外，其他我们需要了解的也就是MSNMessenger以及MsnAdapter了。当然了前提是我们不需要除了聊天外的其他功能，例如文件传输等等。类MSNMessenger 
                      对应着一个帐号的一次登录会话。
                    <P 
style="TEXT-INDENT: 2em">我们仅仅是需要告诉MSNMessenger类我们登录所用的帐号、密码、登录后的初始状态以及我们怎么来处理从MSN服务器上接收到的任何信息。在msnm-lib中，处理MSN信息是通过一个叫MsnAdapter类来处理的，这个类定义了如何处理例如收到消息、有人加我为好友等等的事件，开发者可以重载这些方法以便进行自行处理。 </P>
                    </SPAN></TD>
                </TR>
              </TBODY>
            </TABLE><!--EndFragment--></TD>
        </TR>
      </TBODY>
    </TABLE>
  </DIV>
</DIV>
<P>&nbsp;</P>
<P>&nbsp;</P>
</BODY>
</HTML>