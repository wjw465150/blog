<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
<title>注意CodeCache的设置</title>
<meta name="GENERATOR" content="WinCHM">
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<style>
html,body { 
	/* Default Font */
	font-family: Arial, Helvetica, sans-serif;
	font-size: 11pt;
}
</style>

</head>

<body>
<P 
style="BORDER-TOP: 0px; BORDER-RIGHT: 0px; VERTICAL-ALIGN: baseline; WHITE-SPACE: normal; WORD-SPACING: 0px; BORDER-BOTTOM: 0px; TEXT-TRANSFORM: none; COLOR: rgb(68,68,68); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; FONT: 14px/24px 'Open Sans', Helvetica, Arial, sans-serif; PADDING-LEFT: 0px; MARGIN: 0px 0px 1px; BORDER-LEFT: 0px; WIDOWS: 1; LETTER-SPACING: normal; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">Code 
Cache区域是JVM用来存储经过C1/C2编译优化后的代码的，因为是存在内存中的，所以肯定得限制大小，Code Cache的最大大小可通过jinfo 
-flag ReservedCodeCacheSize来获取，通常在64 bit机器上默认是48m，当code 
cache用满了后，编译优化就被禁掉了，此时会回归到解释执行，RT可想而知不会好到哪去。</P>
<P 
style="BORDER-TOP: 0px; BORDER-RIGHT: 0px; VERTICAL-ALIGN: baseline; WHITE-SPACE: normal; WORD-SPACING: 0px; BORDER-BOTTOM: 0px; TEXT-TRANSFORM: none; COLOR: rgb(68,68,68); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; FONT: 14px/24px 'Open Sans', Helvetica, Arial, sans-serif; PADDING-LEFT: 0px; MARGIN: 0px 0px 1px; BORDER-LEFT: 0px; WIDOWS: 1; LETTER-SPACING: normal; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">为什么这个应用会造成这样的现象呢？<BR>和应用方了解了下，应用会采用groovy来加载一些脚本，在这些脚本修改后会动态更新，而且更新的是比较频繁的，这些groovy 
script执行的也是比较多的，这样的话基本是可以解释通的，意味着C2需要在groovy 
script更新后和执行到达阈值时重新编译，这自然会导致随着运行时间越长，Code Cache使用的就越多。</P>
<P 
style="BORDER-TOP: 0px; BORDER-RIGHT: 0px; VERTICAL-ALIGN: baseline; WHITE-SPACE: normal; WORD-SPACING: 0px; BORDER-BOTTOM: 0px; TEXT-TRANSFORM: none; COLOR: rgb(68,68,68); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; FONT: 14px/24px 'Open Sans', Helvetica, Arial, sans-serif; PADDING-LEFT: 0px; MARGIN: 0px 0px 1px; BORDER-LEFT: 0px; WIDOWS: 1; LETTER-SPACING: normal; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">解决方法<BR>Code 
Cache用满一方面是因为空间可能不够用，另一方面是Code 
Cache是不会回收的，所以会累积的越来越多（其实在不采用groovy这种动态更新/装载class的情况下的话，是不会太多的），所以解法一可以是增大code 
cache的size，可通过在启动参数上增加-XX:ReservedCodeCacheSize=256m（Oracle JVM Team那边也是推荐把code 
cache调大的），二是启用code cache的回收机制（关于Code Cache flushing的具体策略请<A 
style="FONT-SIZE: 14px; BORDER-TOP: 0px; BORDER-RIGHT: 0px; VERTICAL-ALIGN: baseline; BORDER-BOTTOM: 0px; COLOR: rgb(33,117,155); OUTLINE-WIDTH: medium; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; OUTLINE-STYLE: none; PADDING-LEFT: 0px; MARGIN: 0px; BORDER-LEFT: 0px; OUTLINE-COLOR: invert; PADDING-RIGHT: 0px" 
href="http://blogs.atlassian.com/2012/05/codecache-is-full-compiler-has-been-disabled/" 
target=_blank>参见此文</A>），可通过在启动参数上增加：-XX:+UseCodeCacheFlushing来启用。</P>
<P 
style="BORDER-TOP: 0px; BORDER-RIGHT: 0px; VERTICAL-ALIGN: baseline; WHITE-SPACE: normal; WORD-SPACING: 0px; BORDER-BOTTOM: 0px; TEXT-TRANSFORM: none; COLOR: rgb(68,68,68); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; FONT: 14px/24px 'Open Sans', Helvetica, Arial, sans-serif; PADDING-LEFT: 0px; MARGIN: 0px 0px 1px; BORDER-LEFT: 0px; WIDOWS: 1; LETTER-SPACING: normal; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px"><STRONG>-XX:ReservedCodeCacheSize=256m<BR>-XX:+UseCodeCacheFlushing<BR></STRONG></P>
<P 
style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(51,51,51); FONT: 16px/27px 'Helvetica Neue', Helvetica, Tahoma, Arial, STXihei, 'Microsoft YaHei', 微软雅黑, sans-serif; MARGIN: 0px 0px 0.75em; WIDOWS: 1; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(254,254,254); TEXT-INDENT: 1em; -webkit-text-stroke-width: 0px">=================================================</P>
<P 
style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(51,51,51); PADDING-BOTTOM: 0px; TEXT-ALIGN: left; PADDING-TOP: 0px; FONT: 14px/22px 'Microsoft Yahei', 'Microsoft Henghei', 'hiragino sans gb', Helvetica, Tahoma, 'Lucida Grande', Georgia, Verdana; PADDING-LEFT: 0px; MARGIN: 0px 0px 15px; WIDOWS: 1; LETTER-SPACING: 1px; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">1、通过groovyShell类直接执行脚本，例如：</P><PRE class="wp-code-highlight prettyprint linenums:1" style="BORDER-TOP: rgb(238,238,238) 1px solid; BORDER-RIGHT: rgb(238,238,238) 1px solid; WIDTH: 580px; WHITE-SPACE: pre-wrap; WORD-SPACING: 0px; OVERFLOW-X: auto; OVERFLOW-Y: hidden; BORDER-BOTTOM: rgb(238,238,238) 1px solid; TEXT-TRANSFORM: none; WORD-BREAK: break-all; COLOR: rgb(51,51,51); PADDING-BOTTOM: 3px; TEXT-ALIGN: left; PADDING-TOP: 3px; FONT: 12px/16px Menlo, Monaco, 'Courier New', monospace; PADDING-LEFT: 8px; MARGIN: 6px 0px; BORDER-LEFT: rgb(238,238,238) 1px solid; WIDOWS: 1; DISPLAY: block; LETTER-SPACING: 1px; PADDING-RIGHT: 8px; BACKGROUND-COLOR: rgb(247,247,247); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px; border-radius: 4px"><OL class=linenums style="LIST-STYLE-TYPE: decimal; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px 0px 0px 38px; PADDING-RIGHT: 0px"><LI class=L0 style="LIST-STYLE-TYPE: decimal; COLOR: rgb(190,190,197); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 3px; MARGIN: 0px; LINE-HEIGHT: 18px; PADDING-RIGHT: 0px; text-shadow: rgb(255, 255, 255) 0px 1px 0px" value=1><SPAN class=typ style="COLOR: teal">Binding</SPAN><SPAN class=pln style="COLOR: rgb(72,72,76)"> bind </SPAN><SPAN class=pun style="COLOR: rgb(147,161,161)">=</SPAN><SPAN class=pln style="COLOR: rgb(72,72,76)"> </SPAN><SPAN class=kwd style="COLOR: rgb(30,52,123)">new</SPAN><SPAN class=pln style="COLOR: rgb(72,72,76)"> </SPAN><SPAN class=typ style="COLOR: teal">Binding</SPAN><SPAN class=pun style="COLOR: rgb(147,161,161)">();</SPAN><LI class=L1 style="LIST-STYLE-TYPE: decimal; BACKGROUND: rgb(239,239,239); COLOR: rgb(190,190,197); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 3px; MARGIN: 0px; LINE-HEIGHT: 18px; PADDING-RIGHT: 0px; text-shadow: rgb(255, 255, 255) 0px 1px 0px"><SPAN class=pln style="COLOR: rgb(72,72,76)">bind</SPAN><SPAN class=pun style="COLOR: rgb(147,161,161)">.</SPAN><SPAN class=pln style="COLOR: rgb(72,72,76)">setVariable</SPAN><SPAN class=pun style="COLOR: rgb(147,161,161)">(</SPAN><SPAN class=str style="COLOR: rgb(221,17,68)">"str"</SPAN><SPAN class=pun style="COLOR: rgb(147,161,161)">,</SPAN><SPAN class=pln style="COLOR: rgb(72,72,76)"> </SPAN><SPAN class=str style="COLOR: rgb(221,17,68)">"test"</SPAN><SPAN class=pun style="COLOR: rgb(147,161,161)">);</SPAN><LI class=L2 style="LIST-STYLE-TYPE: decimal; COLOR: rgb(190,190,197); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 3px; MARGIN: 0px; LINE-HEIGHT: 18px; PADDING-RIGHT: 0px; text-shadow: rgb(255, 255, 255) 0px 1px 0px"><SPAN class=typ style="COLOR: teal">GroovyShell</SPAN><SPAN class=pln style="COLOR: rgb(72,72,76)"> shell </SPAN><SPAN class=pun style="COLOR: rgb(147,161,161)">=</SPAN><SPAN class=pln style="COLOR: rgb(72,72,76)"> </SPAN><SPAN class=kwd style="COLOR: rgb(30,52,123)">new</SPAN><SPAN class=pln style="COLOR: rgb(72,72,76)"> </SPAN><SPAN class=typ style="COLOR: teal">GroovyShell</SPAN><SPAN class=pun style="COLOR: rgb(147,161,161)">(</SPAN><SPAN class=pln style="COLOR: rgb(72,72,76)">bind</SPAN><SPAN class=pun style="COLOR: rgb(147,161,161)">);</SPAN><LI class=L3 style="LIST-STYLE-TYPE: decimal; BACKGROUND: rgb(239,239,239); COLOR: rgb(190,190,197); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 3px; MARGIN: 0px; LINE-HEIGHT: 18px; PADDING-RIGHT: 0px; text-shadow: rgb(255, 255, 255) 0px 1px 0px"><SPAN class=typ style="COLOR: teal">Object</SPAN><SPAN class=pln style="COLOR: rgb(72,72,76)"> obj </SPAN><SPAN class=pun style="COLOR: rgb(147,161,161)">=</SPAN><SPAN class=pln style="COLOR: rgb(72,72,76)"> shell</SPAN><SPAN class=pun style="COLOR: rgb(147,161,161)">.</SPAN><SPAN class=pln style="COLOR: rgb(72,72,76)">evaluate</SPAN><SPAN class=pun style="COLOR: rgb(147,161,161)">(</SPAN><SPAN class=str style="COLOR: rgb(221,17,68)">"return str"</SPAN><SPAN class=pun style="COLOR: rgb(147,161,161)">);</SPAN><LI class=L4 style="LIST-STYLE-TYPE: decimal; COLOR: rgb(190,190,197); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 3px; MARGIN: 0px; LINE-HEIGHT: 18px; PADDING-RIGHT: 0px; text-shadow: rgb(255, 255, 255) 0px 1px 0px"><SPAN class=typ style="COLOR: teal">System</SPAN><SPAN class=pun style="COLOR: rgb(147,161,161)">.</SPAN><SPAN class=kwd style="COLOR: rgb(30,52,123)">out</SPAN><SPAN class=pun style="COLOR: rgb(147,161,161)">.</SPAN><SPAN class=pln style="COLOR: rgb(72,72,76)">println</SPAN><SPAN class=pun style="COLOR: rgb(147,161,161)">(</SPAN><SPAN class=pln style="COLOR: rgb(72,72,76)">obj</SPAN><SPAN class=pun style="COLOR: rgb(147,161,161)">);</SPAN></LI></OL></PRE>
<P 
style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(51,51,51); PADDING-BOTTOM: 0px; TEXT-ALIGN: left; PADDING-TOP: 0px; FONT: 14px/22px 'Microsoft Yahei', 'Microsoft Henghei', 'hiragino sans gb', Helvetica, Tahoma, 'Lucida Grande', Georgia, Verdana; PADDING-LEFT: 0px; MARGIN: 0px 0px 15px; WIDOWS: 1; LETTER-SPACING: 1px; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">2、通过groovyScriptEngine执行文件或者脚本，例如：</P><PRE class="wp-code-highlight prettyprint linenums:1" style="BORDER-TOP: rgb(238,238,238) 1px solid; BORDER-RIGHT: rgb(238,238,238) 1px solid; WIDTH: 580px; WHITE-SPACE: pre-wrap; WORD-SPACING: 0px; OVERFLOW-X: auto; OVERFLOW-Y: hidden; BORDER-BOTTOM: rgb(238,238,238) 1px solid; TEXT-TRANSFORM: none; WORD-BREAK: break-all; COLOR: rgb(51,51,51); PADDING-BOTTOM: 3px; TEXT-ALIGN: left; PADDING-TOP: 3px; FONT: 12px/16px Menlo, Monaco, 'Courier New', monospace; PADDING-LEFT: 8px; MARGIN: 6px 0px; BORDER-LEFT: rgb(238,238,238) 1px solid; WIDOWS: 1; DISPLAY: block; LETTER-SPACING: 1px; PADDING-RIGHT: 8px; BACKGROUND-COLOR: rgb(247,247,247); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px; border-radius: 4px"><OL class=linenums style="LIST-STYLE-TYPE: decimal; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px 0px 0px 38px; PADDING-RIGHT: 0px"><LI class=L0 style="LIST-STYLE-TYPE: decimal; COLOR: rgb(190,190,197); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 3px; MARGIN: 0px; LINE-HEIGHT: 18px; PADDING-RIGHT: 0px; text-shadow: rgb(255, 255, 255) 0px 1px 0px" value=1><SPAN class=typ style="COLOR: teal">GroovyScriptEngine</SPAN><SPAN class=pln style="COLOR: rgb(72,72,76)"> engine </SPAN><SPAN class=pun style="COLOR: rgb(147,161,161)">=</SPAN><SPAN class=pln style="COLOR: rgb(72,72,76)"> </SPAN><SPAN class=kwd style="COLOR: rgb(30,52,123)">new</SPAN><SPAN class=pln style="COLOR: rgb(72,72,76)"> </SPAN><SPAN class=typ style="COLOR: teal">GroovyScriptEngine</SPAN><SPAN class=pun style="COLOR: rgb(147,161,161)">(</SPAN><SPAN class=str style="COLOR: rgb(221,17,68)">"groovy"</SPAN><SPAN class=pun style="COLOR: rgb(147,161,161)">);</SPAN><LI class=L1 style="LIST-STYLE-TYPE: decimal; BACKGROUND: rgb(239,239,239); COLOR: rgb(190,190,197); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 3px; MARGIN: 0px; LINE-HEIGHT: 18px; PADDING-RIGHT: 0px; text-shadow: rgb(255, 255, 255) 0px 1px 0px"><SPAN class=typ style="COLOR: teal">Object</SPAN><SPAN class=pln style="COLOR: rgb(72,72,76)"> obj </SPAN><SPAN class=pun style="COLOR: rgb(147,161,161)">=</SPAN><SPAN class=pln style="COLOR: rgb(72,72,76)"> engine</SPAN><SPAN class=pun style="COLOR: rgb(147,161,161)">.</SPAN><SPAN class=pln style="COLOR: rgb(72,72,76)">run</SPAN><SPAN class=pun style="COLOR: rgb(147,161,161)">(</SPAN><SPAN class=str style="COLOR: rgb(221,17,68)">"test.groovy"</SPAN><SPAN class=pun style="COLOR: rgb(147,161,161)">,</SPAN><SPAN class=str style="COLOR: rgb(221,17,68)">"test"</SPAN><SPAN class=pun style="COLOR: rgb(147,161,161)">);</SPAN><LI class=L2 style="LIST-STYLE-TYPE: decimal; COLOR: rgb(190,190,197); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 3px; MARGIN: 0px; LINE-HEIGHT: 18px; PADDING-RIGHT: 0px; text-shadow: rgb(255, 255, 255) 0px 1px 0px"><SPAN class=typ style="COLOR: teal">System</SPAN><SPAN class=pun style="COLOR: rgb(147,161,161)">.</SPAN><SPAN class=kwd style="COLOR: rgb(30,52,123)">out</SPAN><SPAN class=pun style="COLOR: rgb(147,161,161)">.</SPAN><SPAN class=pln style="COLOR: rgb(72,72,76)">println</SPAN><SPAN class=pun style="COLOR: rgb(147,161,161)">(</SPAN><SPAN class=pln style="COLOR: rgb(72,72,76)">obj</SPAN><SPAN class=pun style="COLOR: rgb(147,161,161)">);</SPAN></LI></OL></PRE>
<P 
style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(51,51,51); PADDING-BOTTOM: 0px; TEXT-ALIGN: left; PADDING-TOP: 0px; FONT: 14px/22px 'Microsoft Yahei', 'Microsoft Henghei', 'hiragino sans gb', Helvetica, Tahoma, 'Lucida Grande', Georgia, Verdana; PADDING-LEFT: 0px; MARGIN: 0px 0px 15px; WIDOWS: 1; LETTER-SPACING: 1px; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">?3、通过GroovyClassLoader来执行，例如：</P><PRE class="wp-code-highlight prettyprint linenums:1" style="BORDER-TOP: rgb(238,238,238) 1px solid; BORDER-RIGHT: rgb(238,238,238) 1px solid; WIDTH: 580px; WHITE-SPACE: pre-wrap; WORD-SPACING: 0px; OVERFLOW-X: auto; OVERFLOW-Y: hidden; BORDER-BOTTOM: rgb(238,238,238) 1px solid; TEXT-TRANSFORM: none; WORD-BREAK: break-all; COLOR: rgb(51,51,51); PADDING-BOTTOM: 3px; TEXT-ALIGN: left; PADDING-TOP: 3px; FONT: 12px/16px Menlo, Monaco, 'Courier New', monospace; PADDING-LEFT: 8px; MARGIN: 6px 0px; BORDER-LEFT: rgb(238,238,238) 1px solid; WIDOWS: 1; DISPLAY: block; LETTER-SPACING: 1px; PADDING-RIGHT: 8px; BACKGROUND-COLOR: rgb(247,247,247); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px; border-radius: 4px"><OL class=linenums style="LIST-STYLE-TYPE: decimal; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px 0px 0px 38px; PADDING-RIGHT: 0px"><LI class=L0 style="LIST-STYLE-TYPE: decimal; COLOR: rgb(190,190,197); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 3px; MARGIN: 0px; LINE-HEIGHT: 18px; PADDING-RIGHT: 0px; text-shadow: rgb(255, 255, 255) 0px 1px 0px" value=1><SPAN class=typ style="COLOR: teal">String</SPAN><SPAN class=pln style="COLOR: rgb(72,72,76)"> script</SPAN><SPAN class=pun style="COLOR: rgb(147,161,161)">=</SPAN><SPAN class=str style="COLOR: rgb(221,17,68)">""</SPAN><SPAN class=pun style="COLOR: rgb(147,161,161)">;</SPAN><SPAN class=com style="COLOR: rgb(147,161,161)">//groovy script</SPAN><LI class=L1 style="LIST-STYLE-TYPE: decimal; BACKGROUND: rgb(239,239,239); COLOR: rgb(190,190,197); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 3px; MARGIN: 0px; LINE-HEIGHT: 18px; PADDING-RIGHT: 0px; text-shadow: rgb(255, 255, 255) 0px 1px 0px"><SPAN class=typ style="COLOR: teal">ClassLoader</SPAN><SPAN class=pln style="COLOR: rgb(72,72,76)"> parent </SPAN><SPAN class=pun style="COLOR: rgb(147,161,161)">=</SPAN><SPAN class=pln style="COLOR: rgb(72,72,76)"> </SPAN><SPAN class=typ style="COLOR: teal">ClassLoader</SPAN><SPAN class=pun style="COLOR: rgb(147,161,161)">.</SPAN><SPAN class=pln style="COLOR: rgb(72,72,76)">getSystemClassLoader</SPAN><SPAN class=pun style="COLOR: rgb(147,161,161)">();</SPAN><LI class=L2 style="LIST-STYLE-TYPE: decimal; COLOR: rgb(190,190,197); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 3px; MARGIN: 0px; LINE-HEIGHT: 18px; PADDING-RIGHT: 0px; text-shadow: rgb(255, 255, 255) 0px 1px 0px"><SPAN class=typ style="COLOR: teal">GroovyClassLoader</SPAN><SPAN class=pln style="COLOR: rgb(72,72,76)"> loader </SPAN><SPAN class=pun style="COLOR: rgb(147,161,161)">=</SPAN><SPAN class=pln style="COLOR: rgb(72,72,76)"> </SPAN><SPAN class=kwd style="COLOR: rgb(30,52,123)">new</SPAN><SPAN class=pln style="COLOR: rgb(72,72,76)"> </SPAN><SPAN class=typ style="COLOR: teal">GroovyClassLoader</SPAN><SPAN class=pun style="COLOR: rgb(147,161,161)">(</SPAN><SPAN class=pln style="COLOR: rgb(72,72,76)">parent</SPAN><SPAN class=pun style="COLOR: rgb(147,161,161)">);</SPAN><LI class=L3 style="LIST-STYLE-TYPE: decimal; BACKGROUND: rgb(239,239,239); COLOR: rgb(190,190,197); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 3px; MARGIN: 0px; LINE-HEIGHT: 18px; PADDING-RIGHT: 0px; text-shadow: rgb(255, 255, 255) 0px 1px 0px"><SPAN class=typ style="COLOR: teal">Class</SPAN><SPAN class=pun style="COLOR: rgb(147,161,161)">&lt;</SPAN><SPAN class=pln style="COLOR: rgb(72,72,76)"> </SPAN><SPAN class=pun style="COLOR: rgb(147,161,161)">?&gt;</SPAN><SPAN class=pln style="COLOR: rgb(72,72,76)"> clazz </SPAN><SPAN class=pun style="COLOR: rgb(147,161,161)">=</SPAN><SPAN class=pln style="COLOR: rgb(72,72,76)"> loader</SPAN><SPAN class=pun style="COLOR: rgb(147,161,161)">.</SPAN><SPAN class=pln style="COLOR: rgb(72,72,76)">parseClass</SPAN><SPAN class=pun style="COLOR: rgb(147,161,161)">(</SPAN><SPAN class=pln style="COLOR: rgb(72,72,76)">script</SPAN><SPAN class=pun style="COLOR: rgb(147,161,161)">);</SPAN><LI class=L4 style="LIST-STYLE-TYPE: decimal; COLOR: rgb(190,190,197); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 3px; MARGIN: 0px; LINE-HEIGHT: 18px; PADDING-RIGHT: 0px; text-shadow: rgb(255, 255, 255) 0px 1px 0px"><SPAN class=typ style="COLOR: teal">GroovyObject</SPAN><SPAN class=pln style="COLOR: rgb(72,72,76)"> clazzObj </SPAN><SPAN class=pun style="COLOR: rgb(147,161,161)">=</SPAN><SPAN class=pln style="COLOR: rgb(72,72,76)"> </SPAN><SPAN class=pun style="COLOR: rgb(147,161,161)">(</SPAN><SPAN class=typ style="COLOR: teal">GroovyObject</SPAN><SPAN class=pun style="COLOR: rgb(147,161,161)">)</SPAN><SPAN class=pln style="COLOR: rgb(72,72,76)">clazz</SPAN><SPAN class=pun style="COLOR: rgb(147,161,161)">.</SPAN><SPAN class=pln style="COLOR: rgb(72,72,76)">newInstance</SPAN><SPAN class=pun style="COLOR: rgb(147,161,161)">();</SPAN><LI class=L5 style="LIST-STYLE-TYPE: decimal; BACKGROUND: rgb(239,239,239); COLOR: rgb(190,190,197); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 3px; MARGIN: 0px; LINE-HEIGHT: 18px; PADDING-RIGHT: 0px; text-shadow: rgb(255, 255, 255) 0px 1px 0px"><SPAN class=typ style="COLOR: teal">System</SPAN><SPAN class=pun style="COLOR: rgb(147,161,161)">.</SPAN><SPAN class=kwd style="COLOR: rgb(30,52,123)">out</SPAN><SPAN class=pun style="COLOR: rgb(147,161,161)">.</SPAN><SPAN class=pln style="COLOR: rgb(72,72,76)">println</SPAN><SPAN class=pun style="COLOR: rgb(147,161,161)">(</SPAN><SPAN class=pln style="COLOR: rgb(72,72,76)">clazzObj</SPAN><SPAN class=pun style="COLOR: rgb(147,161,161)">.</SPAN><SPAN class=pln style="COLOR: rgb(72,72,76)">invokeMethod</SPAN><SPAN class=pun style="COLOR: rgb(147,161,161)">(</SPAN><SPAN class=str style="COLOR: rgb(221,17,68)">"test"</SPAN><SPAN class=pun style="COLOR: rgb(147,161,161)">,</SPAN><SPAN class=pln style="COLOR: rgb(72,72,76)"> </SPAN><SPAN class=str style="COLOR: rgb(221,17,68)">"str"</SPAN><SPAN class=pun style="COLOR: rgb(147,161,161)">));</SPAN></LI></OL></PRE>
<P 
style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(51,51,51); FONT: 16px/27px 'Helvetica Neue', Helvetica, Tahoma, Arial, STXihei, 'Microsoft YaHei', 微软雅黑, sans-serif; MARGIN: 0px 0px 0.75em; WIDOWS: 1; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(254,254,254); TEXT-INDENT: 1em; -webkit-text-stroke-width: 0px">需要注意的是，通过看groovy的创建类的地方，就能发现，每次执行的时候，都会新生成一个class文件，这样就会导致JVM的perm区持续增长，进而导致FullGCc问题，解决办法很简单，就是脚本文件变化了之后才去创建文件，之前从缓存中获取即可，缓存的实现可以采用简单的Map或者使用之前文章提到的EhCache（同时可以设置缓存有效期，降低服务器压力）。</P>
<P 
style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(51,51,51); FONT: 16px/27px 'Helvetica Neue', Helvetica, Tahoma, Arial, STXihei, 'Microsoft YaHei', 微软雅黑, sans-serif; MARGIN: 0px 0px 0.75em; WIDOWS: 1; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(254,254,254); TEXT-INDENT: 1em; -webkit-text-stroke-width: 0px">在使用时，最好每次重新new 
classloader，因为如果脚本重新加载了，这时候就会有新老两个class文件，如果通过一个classloader持有的话，这样在GC扫描的时候，会认为老的类还在存活，导致回收不掉，所以每次new一个就能解决这个问题了。</P>
<DIV 
style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(51,51,51); FONT: 16px/27px 'Helvetica Neue', Helvetica, Tahoma, Arial, STXihei, 'Microsoft YaHei', 微软雅黑, sans-serif; WIDOWS: 1; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(254,254,254); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">
<P 
style="FONT-SIZE: 16px; MARGIN: 0px 0px 0.75em; LINE-HEIGHT: 1.7em; TEXT-INDENT: 1em">注意CodeCache的设置大小（来自：http://hellojava.info/）</P>
<P 
style="FONT-SIZE: 16px; MARGIN: 0px 0px 0.75em; LINE-HEIGHT: 1.7em; TEXT-INDENT: 1em">对于大量使用Groovy的应用，尤其是Groovy脚本还会经常更新的应用，由于这些Groovy脚本在执行了很多次后都会被JVM编译为native进行优化，会占据一些CodeCache空间，而如果这样的脚本很多的话，可能会导致CodeCache被用满，而CodeCache一旦被用满，JVM的Compiler就会被禁用，那性能下降的就不是一点点了。</P>
<P 
style="FONT-SIZE: 16px; MARGIN: 0px 0px 0.75em; LINE-HEIGHT: 1.7em; TEXT-INDENT: 1em">Code 
Cache用满一方面是因为空间可能不够用，另一方面是Code 
Cache是不会回收的，所以会累积的越来越多（其实在不采用groovy这种动态更新/装载class的情况下的话，是不会太多的），所以解法一可以是增大code 
cache的size，可通过在启动参数上增加-XX:ReservedCodeCacheSize=256m（Oracle JVM Team那边也是推荐把code 
cache调大的），二是启用code cache的回收机制（关于Code Cache 
flushing的具体策略请参见此文），可通过在启动参数上增加：-XX:+UseCodeCacheFlushing来启用。</P>
<P 
style="FONT-SIZE: 16px; MARGIN: 0px 0px 0.75em; LINE-HEIGHT: 1.7em; TEXT-INDENT: 1em">========================================== 
 
 
=   
   
</P></DIV></body>
</html>
