<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html lang="zh-cn"><head><meta content="text/html; charset=ISO-8859-1" http-equiv="content-type"><title>Builder-Solve Naming Conflicts with Builders</title></head><body>
<div id="body_content" style="border: 0px none ; margin: 0px; padding: 0px; background: rgb(255, 255, 255) none repeat scroll 0%; color: rgb(0, 0, 0); font-family: 'Helvetica Neue',Helvetica,Arial,sans-serif; font-size: 16px; font-style: normal; font-variant: normal; font-weight: 300; letter-spacing: normal; line-height: 28px; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 1; word-spacing: 0px; -moz-background-clip: initial; -moz-background-origin: initial; -moz-background-inline-policy: initial;"><div id="main_content" style="border: 0px none ; margin: 0px; padding: 0px;"><div class="main section" id="main" style="border: 0px none ; margin: 0px; padding: 0px;"><div class="widget Blog" id="Blog1" style="border: 0px none ; margin: 0px; padding: 0px;"><div class="blog-posts hfeed" style="border: 0px none ; margin: 0px; padding: 0px;"><div class="post hentry" style="border: 0px none ; margin: 0px 0px 40px; padding: 0px;"><h3 class="post-title entry-title" style="border: 0px none ; margin: 0px 0px 16px; padding: 0px; font-weight: lighter; font-size: 26px; line-height: 26px; font-family: 'Helvetica Neue UltraLight','Helvetica Neue Light','Helvetica Neue',Helvetica,Arial,sans-serif;">Groovy Goodness: Solve Naming Conflicts with Builders</h3><div class="post-body entry-content" style="border: 0px none ; margin: 0px; padding: 0px;"><p style="border: 0px none ; margin: 0px 0px 20px; padding: 0px;">With
Groovy we can use for example the MarkupBuilder or JSONBuilder to
create XML or JSON content. The builders are a very elegant way to
create the content. Most builders in Groovy use the<span class="Apple-converted-space">&nbsp;</span><code style="border: 1px solid rgb(212, 217, 217); margin: 0px; padding: 1px 4px; font-style: normal; font-variant: normal; font-weight: normal; font-stretch: normal; font-size: 0.9375em; line-height: 24px; font-family: Menlo,Monaco,'Liberation Mono',Consolas,monospace; color: rgb(59, 59, 59); white-space: nowrap; text-shadow: none; background-color: rgb(239, 241, 241);">invokeMethod</code><span class="Apple-converted-space">&nbsp;</span>and<span class="Apple-converted-space">&nbsp;</span><code style="border: 1px solid rgb(212, 217, 217); margin: 0px; padding: 1px 4px; font-style: normal; font-variant: normal; font-weight: normal; font-stretch: normal; font-size: 0.9375em; line-height: 24px; font-family: Menlo,Monaco,'Liberation Mono',Consolas,monospace; color: rgb(59, 59, 59); white-space: nowrap; text-shadow: none; background-color: rgb(239, 241, 241);">getProperty</code><span class="Apple-converted-space">&nbsp;</span>and<span class="Apple-converted-space">&nbsp;</span><code style="border: 1px solid rgb(212, 217, 217); margin: 0px; padding: 1px 4px; font-style: normal; font-variant: normal; font-weight: normal; font-stretch: normal; font-size: 0.9375em; line-height: 24px; font-family: Menlo,Monaco,'Liberation Mono',Consolas,monospace; color: rgb(59, 59, 59); white-space: nowrap; text-shadow: none; background-color: rgb(239, 241, 241);">setProperty</code><span class="Apple-converted-space">&nbsp;</span>methods
to dynamically build the contents. But this also means that if we have
builder node names that are the same as method or property names in the
local context of our code running the builder, that we have a naming
conflict. Let's see this with a simple sample:</p><pre class="brush:groovy" style="border: 0px none ; margin: 0px; padding: 0px; font-style: normal; font-variant: normal; font-weight: normal; font-stretch: normal; font-size: 16px; line-height: 24px; font-family: Menlo,Monaco,'Liberation Mono',Consolas,monospace;">import groovy.xml.*<br><br>def body = []<br><br>def writer = new StringWriter()<br>def builder = new MarkupBuilder(writer)<br>builder.message {<br>    body(contentType: 'plain') {<br>        text 'Simple message'<br>    }<br>}<br><br>def contents = writer.toString()<br>println contents<br></pre><p style="border: 0px none ; margin: 0px 0px 20px; padding: 0px;">When we run this code we get an error message:</p><pre class="brush:plain;light:true" style="border: 0px none ; margin: 0px; padding: 0px; font-style: normal; font-variant: normal; font-weight: normal; font-stretch: normal; font-size: 16px; line-height: 24px; font-family: Menlo,Monaco,'Liberation Mono',Consolas,monospace;">groovy.lang.MissingMethodException: No signature of method: java.util.ArrayList.call() is applicable for argument types: (java.util.LinkedHashMap, xmlmessage$_run_closure1_closure2) values: [[contentType:plain], xmlmessage$_run_closure1_closure2@50502819]<br>Possible solutions: tail(), wait(), last(), any(), max(), clear()<br> at xmlmessage$_run_closure1.doCall(xmlmessage.groovy:7)<br> at xmlmessage$_run_closure1.doCall(xmlmessage.groovy)<br> at xmlmessage.run(xmlmessage.groovy:6)<br></pre><p style="border: 0px none ; margin: 0px 0px 20px; padding: 0px;">Groovy tries to use the<span class="Apple-converted-space">&nbsp;</span><code style="border: 1px solid rgb(212, 217, 217); margin: 0px; padding: 1px 4px; font-style: normal; font-variant: normal; font-weight: normal; font-stretch: normal; font-size: 0.9375em; line-height: 24px; font-family: Menlo,Monaco,'Liberation Mono',Consolas,monospace; color: rgb(59, 59, 59); white-space: nowrap; text-shadow: none; background-color: rgb(239, 241, 241);">ArrayList</code><span class="Apple-converted-space">&nbsp;</span>class of our books variable to execute a<span class="Apple-converted-space">&nbsp;</span><code style="border: 1px solid rgb(212, 217, 217); margin: 0px; padding: 1px 4px; font-style: normal; font-variant: normal; font-weight: normal; font-stretch: normal; font-size: 0.9375em; line-height: 24px; font-family: Menlo,Monaco,'Liberation Mono',Consolas,monospace; color: rgb(59, 59, 59); white-space: nowrap; text-shadow: none; background-color: rgb(239, 241, 241);">call</code><span class="Apple-converted-space">&nbsp;</span>method with two parameters of type<span class="Apple-converted-space">&nbsp;</span><code style="border: 1px solid rgb(212, 217, 217); margin: 0px; padding: 1px 4px; font-style: normal; font-variant: normal; font-weight: normal; font-stretch: normal; font-size: 0.9375em; line-height: 24px; font-family: Menlo,Monaco,'Liberation Mono',Consolas,monospace; color: rgb(59, 59, 59); white-space: nowrap; text-shadow: none; background-color: rgb(239, 241, 241);">LinkedHashMap</code><span class="Apple-converted-space">&nbsp;</span>and
closure. So our local variable is found by the builder and the builder
tries to use this variable, which results in the shown error.</p><p style="border: 0px none ; margin: 0px 0px 20px; padding: 0px;">The following sample shows what happens if we have a local method with the same name as a node in the builder:</p><pre class="brush:groovy" style="border: 0px none ; margin: 0px; padding: 0px; font-style: normal; font-variant: normal; font-weight: normal; font-stretch: normal; font-size: 16px; line-height: 24px; font-family: Menlo,Monaco,'Liberation Mono',Consolas,monospace;">import groovy.xml.*<br><br>def body(value) {<br>    println "body contents is $value"<br>}<br><br>def writer = new StringWriter()<br>def builder = new MarkupBuilder(writer)<br>builder.message {<br>    body {<br>        text 'Simple message'<br>    }<br>}<br><br>def contents = writer.toString()<br>println contents<br></pre><p style="border: 0px none ; margin: 0px 0px 20px; padding: 0px;">We get the following output if we run this script:</p><pre class="brush:plain;light:true" style="border: 0px none ; margin: 0px; padding: 0px; font-style: normal; font-variant: normal; font-weight: normal; font-stretch: normal; font-size: 16px; line-height: 24px; font-family: Menlo,Monaco,'Liberation Mono',Consolas,monospace;">body contents is <br>&lt;message&gt;<br>  &lt;text&gt;Simple message&lt;/text&gt;<br>&lt;/message&gt;<br></pre><p style="border: 0px none ; margin: 0px 0px 20px; padding: 0px;">Our
method with the name body has the same signature and name as the body
node in the builder. Our local method is invoked and we see the output
of the<span class="Apple-converted-space">&nbsp;</span><code style="border: 1px solid rgb(212, 217, 217); margin: 0px; padding: 1px 4px; font-style: normal; font-variant: normal; font-weight: normal; font-stretch: normal; font-size: 0.9375em; line-height: 24px; font-family: Menlo,Monaco,'Liberation Mono',Consolas,monospace; color: rgb(59, 59, 59); white-space: nowrap; text-shadow: none; background-color: rgb(239, 241, 241);">println</code><span class="Apple-converted-space">&nbsp;</span>statement.</p><p style="border: 0px none ; margin: 0px 0px 20px; padding: 0px;">To
solve this naming conflict we can change the name of our local variable
or method. But this is not always possible or desired. Imagine the
method or variable is dynamically added to our class than we cannot
change the name. But we can also change our builder syntax slightly to
get what we want.</p><p style="border: 0px none ; margin: 0px 0px 20px; padding: 0px;">To force our builder to use the builder's code to create the contents we can prepend the node name with<span class="Apple-converted-space">&nbsp;</span><code style="border: 1px solid rgb(212, 217, 217); margin: 0px; padding: 1px 4px; font-style: normal; font-variant: normal; font-weight: normal; font-stretch: normal; font-size: 0.9375em; line-height: 24px; font-family: Menlo,Monaco,'Liberation Mono',Consolas,monospace; color: rgb(59, 59, 59); white-space: nowrap; text-shadow: none; background-color: rgb(239, 241, 241);">delegate</code>.
Delegate is the closure context of our builder. This way our builder
will not use any already defined variable or method names to create the
content.</p>
<p style="border: 0px none; margin: 0px 0px 20px; padding: 0px; font-weight: bold; color: rgb(255,0,0);">//@wjw_note: &#27880;&#24847;&#27492;&#26102;&#22312;builder&#37324;delgate&#24050;&#32463;&#19981;&#31561;&#20110;owner&#21644;this&#20102;,&#27492;&#26102;delgate&#25351;&#21521;builder!</p>
<pre class="brush:groovy" style="border: 0px none ; margin: 0px; padding: 0px; font-style: normal; font-variant: normal; font-weight: normal; font-stretch: normal; font-size: 16px; line-height: 24px; font-family: Menlo,Monaco,'Liberation Mono',Consolas,monospace;">import groovy.xml.*<br><br>def body = []<br><br>def writer = new StringWriter()<br>def builder = new MarkupBuilder(writer)<br>builder.message {<br>    delegate.body(contentType: 'plain') {<br>        text 'Simple message'<br>    }<br>}<br><br>def contents = writer.toString()<br>println contents<br></pre><p style="border: 0px none ; margin: 0px 0px 20px; padding: 0px;">When we run the script we get the following output:</p><pre class="brush:plain;light:true" style="border: 0px none ; margin: 0px; padding: 0px; font-style: normal; font-variant: normal; font-weight: normal; font-stretch: normal; font-size: 16px; line-height: 24px; font-family: Menlo,Monaco,'Liberation Mono',Consolas,monospace;">&lt;message&gt;<br>  &lt;body contentType='plain'&gt;<br>    &lt;text&gt;Simple message&lt;/text&gt;<br>  &lt;/body&gt;<br>&lt;/message&gt;<br></pre><p style="border: 0px none ; margin: 0px 0px 20px; padding: 0px;">And that is the output we want.</p><p style="border: 0px none ; margin: 0px 0px 20px; padding: 0px;">If we are using Grails and use the<span class="Apple-converted-space">&nbsp;</span><code style="border: 1px solid rgb(212, 217, 217); margin: 0px; padding: 1px 4px; font-style: normal; font-variant: normal; font-weight: normal; font-stretch: normal; font-size: 0.9375em; line-height: 24px; font-family: Menlo,Monaco,'Liberation Mono',Consolas,monospace; color: rgb(59, 59, 59); white-space: nowrap; text-shadow: none; background-color: rgb(239, 241, 241);">render</code><span class="Apple-converted-space">&nbsp;</span>method to create XML or JSON we must be aware that methods are also dynamically available in a controller. For example the<span class="Apple-converted-space">&nbsp;</span><code style="border: 1px solid rgb(212, 217, 217); margin: 0px; padding: 1px 4px; font-style: normal; font-variant: normal; font-weight: normal; font-stretch: normal; font-size: 0.9375em; line-height: 24px; font-family: Menlo,Monaco,'Liberation Mono',Consolas,monospace; color: rgb(59, 59, 59); white-space: nowrap; text-shadow: none; background-color: rgb(239, 241, 241);">message</code><span class="Apple-converted-space">&nbsp;</span>method from the Grails tag libraries is a method in a controller:</p><pre class="brush:groovy" style="border: 0px none ; margin: 0px; padding: 0px; font-style: normal; font-variant: normal; font-weight: normal; font-stretch: normal; font-size: 16px; line-height: 24px; font-family: Menlo,Monaco,'Liberation Mono',Consolas,monospace;">package builder.naming<br><br>class SampleController {<br><br>    def index() {<br>        render(contenType: 'text/xml') {<br>            message {<br>                content 'Contents'<br>            }<br>        }<br>    }<br>}<br></pre><p style="border: 0px none ; margin: 0px 0px 20px; padding: 0px;">If we invoke this controller we get the following XML output:</p><pre class="brush:plain;light:true" style="border: 0px none ; margin: 0px; padding: 0px; font-style: normal; font-variant: normal; font-weight: normal; font-stretch: normal; font-size: 16px; line-height: 24px; font-family: Menlo,Monaco,'Liberation Mono',Consolas,monospace;">&lt;content&gt;Contents&lt;/content&gt;<br></pre><p style="border: 0px none ; margin: 0px 0px 20px; padding: 0px;">But if we change the code to:</p><pre class="brush:groovy" style="border: 0px none ; margin: 0px; padding: 0px; font-style: normal; font-variant: normal; font-weight: normal; font-stretch: normal; font-size: 16px; line-height: 24px; font-family: Menlo,Monaco,'Liberation Mono',Consolas,monospace;">package builder.naming<br><br>class SampleController {<br><br>    def index() {<br>        render(contenType: 'text/xml') {<br>            delegate.message {<br>                content 'Contents'<br>            }<br>        }<br>    }<br>}<br></pre><p style="border: 0px none ; margin: 0px 0px 20px; padding: 0px;">We get the following output:</p><pre class="brush:plain;light:true" style="border: 0px none ; margin: 0px; padding: 0px; font-style: normal; font-variant: normal; font-weight: normal; font-stretch: normal; font-size: 16px; line-height: 24px; font-family: Menlo,Monaco,'Liberation Mono',Consolas,monospace;">&lt;message&gt;&lt;content&gt;Contents&lt;/content&gt;&lt;/message&gt;<br></pre><p style="border: 0px none ; margin: 0px 0px 20px; padding: 0px;"></p><div style="border: 0px none ; margin: 0px; padding: 0px; clear: both;"></div></div></div></div><div class="clear" style="border: 0px none ; margin: 0px; padding: 0px; clear: both;"></div></div></div></div></div>
<iframe name="oauth2relay348048723" id="oauth2relay348048723" src="about:blank" tabindex="-1" style="border: 0px none ; margin: 0px; padding: 0px; color: rgb(0, 0, 0); font-family: 'Helvetica Neue',Helvetica,Arial,sans-serif; font-size: 16px; font-style: normal; font-variant: normal; font-weight: 300; letter-spacing: normal; line-height: 28px; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 1; word-spacing: 0px; width: 1px; height: 1px; position: absolute; top: -100px;"></iframe><br class="Apple-interchange-newline">
</body></html>