<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html lang="zh-cn">
<head>
  <meta content="text/html; charset=ISO-8859-1"
 http-equiv="content-type">
  <title>Collection-Finding Data in Collections</title>
</head>
<body>
<div id="body_content"
 style="border: 0px none ; margin: 0px; padding: 0px; background: rgb(255, 255, 255) none repeat scroll 0%; color: rgb(0, 0, 0); font-family: 'Helvetica Neue',Helvetica,Arial,sans-serif; font-size: 16px; font-style: normal; font-variant: normal; font-weight: 300; letter-spacing: normal; line-height: 28px; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 1; word-spacing: 0px; -moz-background-clip: initial; -moz-background-origin: initial; -moz-background-inline-policy: initial;">
<div id="main_content"
 style="border: 0px none ; margin: 0px; padding: 0px;">
<div class="main section" id="main"
 style="border: 0px none ; margin: 0px; padding: 0px;">
<div class="widget Blog" id="Blog1"
 style="border: 0px none ; margin: 0px; padding: 0px;">
<div class="blog-posts hfeed"
 style="border: 0px none ; margin: 0px; padding: 0px;">
<div class="post hentry"
 style="border: 0px none ; margin: 0px 0px 40px; padding: 0px;">
<h3 class="post-title entry-title"
 style="border: 0px none ; margin: 0px 0px 16px; padding: 0px; font-weight: lighter; font-size: 26px; line-height: 26px; font-family: 'Helvetica Neue UltraLight','Helvetica Neue Light','Helvetica Neue',Helvetica,Arial,sans-serif;">Groovy
Goodness: Finding Data in Collections</h3>
<div class="post-body entry-content"
 style="border: 0px none ; margin: 0px; padding: 0px;">
<p style="border: 0px none ; margin: 0px 0px 20px; padding: 0px;">Groovy
adds several methods to<span class="Apple-converted-space">&nbsp;</span><code
 style="border: 1px solid rgb(212, 217, 217); margin: 0px; padding: 1px 4px; font-style: normal; font-variant: normal; font-weight: normal; font-stretch: normal; font-size: 0.9375em; line-height: 24px; font-family: Menlo,Monaco,'Liberation Mono',Consolas,monospace; color: rgb(59, 59, 59); white-space: nowrap; text-shadow: none; background-color: rgb(239, 241, 241);">Collection</code><span
 class="Apple-converted-space">&nbsp;</span>classes to find elements in
the collection. The<span class="Apple-converted-space">&nbsp;</span><code
 style="border: 1px solid rgb(212, 217, 217); margin: 0px; padding: 1px 4px; font-style: normal; font-variant: normal; font-weight: normal; font-stretch: normal; font-size: 0.9375em; line-height: 24px; font-family: Menlo,Monaco,'Liberation Mono',Consolas,monospace; color: rgb(59, 59, 59); white-space: nowrap; text-shadow: none; background-color: rgb(239, 241, 241);">findXXX()</code><span
 class="Apple-converted-space">&nbsp;</span>methods take a closure and
if an element matches the condition defined in the closure we get a
result. We can also use the<span class="Apple-converted-space">&nbsp;</span><code
 style="border: 1px solid rgb(212, 217, 217); margin: 0px; padding: 1px 4px; font-style: normal; font-variant: normal; font-weight: normal; font-stretch: normal; font-size: 0.9375em; line-height: 24px; font-family: Menlo,Monaco,'Liberation Mono',Consolas,monospace; color: rgb(59, 59, 59); white-space: nowrap; text-shadow: none; background-color: rgb(239, 241, 241);">any()</code><span
 class="Apple-converted-space">&nbsp;</span>method to verify if at
least one element applies to the closure condition, or we use the<span
 class="Apple-converted-space">&nbsp;</span><code
 style="border: 1px solid rgb(212, 217, 217); margin: 0px; padding: 1px 4px; font-style: normal; font-variant: normal; font-weight: normal; font-stretch: normal; font-size: 0.9375em; line-height: 24px; font-family: Menlo,Monaco,'Liberation Mono',Consolas,monospace; color: rgb(59, 59, 59); white-space: nowrap; text-shadow: none; background-color: rgb(239, 241, 241);">every()</code><span
 class="Apple-converted-space">&nbsp;</span>method to everify all
elements that confirm to the closure condition. Both the<span
 class="Apple-converted-space">&nbsp;</span><code
 style="border: 1px solid rgb(212, 217, 217); margin: 0px; padding: 1px 4px; font-style: normal; font-variant: normal; font-weight: normal; font-stretch: normal; font-size: 0.9375em; line-height: 24px; font-family: Menlo,Monaco,'Liberation Mono',Consolas,monospace; color: rgb(59, 59, 59); white-space: nowrap; text-shadow: none; background-color: rgb(239, 241, 241);">any()</code><span
 class="Apple-converted-space">&nbsp;</span>and<span
 class="Apple-converted-space">&nbsp;</span><code
 style="border: 1px solid rgb(212, 217, 217); margin: 0px; padding: 1px 4px; font-style: normal; font-variant: normal; font-weight: normal; font-stretch: normal; font-size: 0.9375em; line-height: 24px; font-family: Menlo,Monaco,'Liberation Mono',Consolas,monospace; color: rgb(59, 59, 59); white-space: nowrap; text-shadow: none; background-color: rgb(239, 241, 241);">every()</code><span
 class="Apple-converted-space">&nbsp;</span>method return a<code
 style="border: 1px solid rgb(212, 217, 217); margin: 0px; padding: 1px 4px; font-style: normal; font-variant: normal; font-weight: normal; font-stretch: normal; font-size: 0.9375em; line-height: 24px; font-family: Menlo,Monaco,'Liberation Mono',Consolas,monospace; color: rgb(59, 59, 59); white-space: nowrap; text-shadow: none; background-color: rgb(239, 241, 241);">boolean</code><span
 class="Apple-converted-space">&nbsp;</span>value.</p>
<pre class="brush:groovy"
 style="border: 0px none ; margin: 0px; padding: 0px; font-style: normal; font-variant: normal; font-weight: normal; font-stretch: normal; font-size: 16px; line-height: 24px; font-family: Menlo,Monaco,'Liberation Mono',Consolas,monospace;">def list = ['Daffy', 'Bugs', 'Elmer', 'Tweety', 'Silvester', 'Yosemite']<br>assert 'Bugs' == list.find { it == 'Bugs' }<br>assert ['Daffy', 'Bugs', 'Elmer'] == list.findAll { it.size() &lt; 6 }<br>assert 1 == list.findIndexOf { name -&gt; name =~ /^B.*/ }  // Start with B.<br>assert 3 == list.findIndexOf(3) { it[0] &gt; 'S' }  // Use a start index.<br>assert [0,3,5] == list.findIndexValues { it =~ /(y|Y)/ }  // Contains y or Y.<br>assert [3,5] == list.findIndexValues(2) { it =~ /(y|Y)/ }<br>assert 2 == list.findLastIndexOf { it.size() == 5 }<br>assert 5 == list.findLastIndexOf(1) { it.count('e') &gt; 1 }<br>assert list.any { it =~ /a/ }<br>assert list.every { it.size() &gt; 3 }<br><br>def map = [name: 'Messages from mrhaki', url: 'http://mrhaki.blogspot.com', blog: true]<br>def found = map.find { key, value -&gt; key == 'name' }<br>assert found.key == 'name' &amp;&amp; found.value == 'Messages from mrhaki'<br>found = map.find { it.value =~ /mrhaki/ }<br>assert found.key == 'name' &amp;&amp; found.value == 'Messages from mrhaki'<br>assert [name: 'Messages from mrhaki', url: 'http://mrhaki.blogspot.com'] == map.findAll { key, value -&gt; value =~ /mrhaki/ }<br>assert 1 == map.findIndexOf { it.value.endsWith('com') }<br>assert [1,2] == map.findIndexValues { it.key =~ /l/ }  // All keys with the letter 'l'.<br>assert 2 == map.findLastIndexOf { it.key =~ /l/ &amp;&amp; it.value }<br>assert map.any { entry -&gt; entry.value }<br>assert map.every { key, value -&gt; key.size() &gt;= 3 }<br></pre>
<p style="border: 0px none ; margin: 0px 0px 20px; padding: 0px;"></p>
<div style="border: 0px none ; margin: 0px; padding: 0px; clear: both;"></div>
</div>
</div>
</div>
<div class="clear"
 style="border: 0px none ; margin: 0px; padding: 0px; clear: both;"></div>
</div>
</div>
</div>
</div>
<iframe name="oauth2relay405761069" id="oauth2relay405761069"
 src="about:blank" tabindex="-1"
 style="border: 0px none ; margin: 0px; padding: 0px; color: rgb(0, 0, 0); font-family: 'Helvetica Neue',Helvetica,Arial,sans-serif; font-size: 16px; font-style: normal; font-variant: normal; font-weight: 300; letter-spacing: normal; line-height: 28px; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 1; word-spacing: 0px; width: 1px; height: 1px; position: absolute; top: -100px;"></iframe><br
 class="Apple-interchange-newline">
</body>
</html>
