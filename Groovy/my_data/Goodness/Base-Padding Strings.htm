<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
  <meta content="text/html; charset=ISO-8859-1"
 http-equiv="content-type">
  <title>Base-Padding Strings</title>
</head>
<body>
<h3 class="post-title entry-title"
 style="border: 0px none ; margin: 0px 0px 16px; padding: 0px; font-weight: lighter; font-size: 26px; line-height: 26px; font-family: 'Helvetica Neue UltraLight','Helvetica Neue Light','Helvetica Neue',Helvetica,Arial,sans-serif; color: rgb(0, 0, 0); font-style: normal; font-variant: normal; letter-spacing: normal; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 1; word-spacing: 0px; background-color: rgb(255, 255, 255);">Groovy
Goodness: Padding Strings</h3>
<div class="post-body entry-content"
 style="border: 0px none ; margin: 0px; padding: 0px; color: rgb(0, 0, 0); font-family: 'Helvetica Neue',Helvetica,Arial,sans-serif; font-size: 16px; font-style: normal; font-variant: normal; font-weight: 300; letter-spacing: normal; line-height: 28px; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 1; word-spacing: 0px; background-color: rgb(255, 255, 255);">
<p style="border: 0px none ; margin: 0px 0px 20px; padding: 0px;">Groovy
extends the<span class="Apple-converted-space">&nbsp;</span><code
 style="border: 1px solid rgb(212, 217, 217); margin: 0px; padding: 1px 4px; font-style: normal; font-variant: normal; font-weight: normal; font-stretch: normal; font-size: 0.9375em; line-height: 24px; font-family: Menlo,Monaco,'Liberation Mono',Consolas,monospace; color: rgb(59, 59, 59); white-space: nowrap; text-shadow: none; background-color: rgb(239, 241, 241);">String</code><span
 class="Apple-converted-space">&nbsp;</span>class with a couple of
padding methods. These methods allows us to define a fixed width a<span
 class="Apple-converted-space">&nbsp;</span><code
 style="border: 1px solid rgb(212, 217, 217); margin: 0px; padding: 1px 4px; font-style: normal; font-variant: normal; font-weight: normal; font-stretch: normal; font-size: 0.9375em; line-height: 24px; font-family: Menlo,Monaco,'Liberation Mono',Consolas,monospace; color: rgb(59, 59, 59); white-space: nowrap; text-shadow: none; background-color: rgb(239, 241, 241);">String</code><span
 class="Apple-converted-space">&nbsp;</span>value must occupy. If the<span
 class="Apple-converted-space">&nbsp;</span><code
 style="border: 1px solid rgb(212, 217, 217); margin: 0px; padding: 1px 4px; font-style: normal; font-variant: normal; font-weight: normal; font-stretch: normal; font-size: 0.9375em; line-height: 24px; font-family: Menlo,Monaco,'Liberation Mono',Consolas,monospace; color: rgb(59, 59, 59); white-space: nowrap; text-shadow: none; background-color: rgb(239, 241, 241);">String</code><span
 class="Apple-converted-space">&nbsp;</span>itself is less than the
fixed width then the space is padded with spaces or any other character
or<span class="Apple-converted-space">&nbsp;</span><code
 style="border: 1px solid rgb(212, 217, 217); margin: 0px; padding: 1px 4px; font-style: normal; font-variant: normal; font-weight: normal; font-stretch: normal; font-size: 0.9375em; line-height: 24px; font-family: Menlo,Monaco,'Liberation Mono',Consolas,monospace; color: rgb(59, 59, 59); white-space: nowrap; text-shadow: none; background-color: rgb(239, 241, 241);">String</code><span
 class="Apple-converted-space">&nbsp;</span>we define. We can pad to
the left or the right of the<span class="Apple-converted-space">&nbsp;</span><code
 style="border: 1px solid rgb(212, 217, 217); margin: 0px; padding: 1px 4px; font-style: normal; font-variant: normal; font-weight: normal; font-stretch: normal; font-size: 0.9375em; line-height: 24px; font-family: Menlo,Monaco,'Liberation Mono',Consolas,monospace; color: rgb(59, 59, 59); white-space: nowrap; text-shadow: none; background-color: rgb(239, 241, 241);">String</code><span
 class="Apple-converted-space">&nbsp;</span>or both left and right and
put the<span class="Apple-converted-space">&nbsp;</span><code
 style="border: 1px solid rgb(212, 217, 217); margin: 0px; padding: 1px 4px; font-style: normal; font-variant: normal; font-weight: normal; font-stretch: normal; font-size: 0.9375em; line-height: 24px; font-family: Menlo,Monaco,'Liberation Mono',Consolas,monospace; color: rgb(59, 59, 59); white-space: nowrap; text-shadow: none; background-color: rgb(239, 241, 241);">String</code><span
 class="Apple-converted-space">&nbsp;</span>in the center.</p>
<p style="border: 0px none ; margin: 0px 0px 20px; padding: 0px;">These
methods are especially useful when we create Groovy scripts that run on
the console and we want to format some output.</p>
<pre class="brush:groovy"
 style="border: 0px none ; margin: 0px; padding: 0px; font-style: normal; font-variant: normal; font-weight: normal; font-stretch: normal; font-size: 16px; line-height: 24px; font-family: Menlo,Monaco,'Liberation Mono',Consolas,monospace;">assert '   Groovy   ' == 'Groovy'.center(12)<br>assert 'Groovy      ' == "Groovy".padRight(12)<br>assert '      Groovy' == /Groovy/.padLeft(12)<br><br>assert '---Groovy---' == "Groovy".center(12, '-')<br>assert 'Groovy * * *' == "Groovy".padRight(12, ' *')<br>assert 'Groovy Groovy Groovy' == 'Groovy'.padLeft(20, 'Groovy ')<br><br>def createOutput = {<br>    def table = [<br>        // Page,    Response time, Size<br>        ['page1.html',        200, 1201],<br>        ['page2.html',         42, 8853],<br>        ['page3.html',         98, 3432],<br>        ['page4.html',        432, 9081]<br>    ]<br><br>    def total = { data, index -&gt;<br>        data.inject(0) { result, row -&gt; result += row[index] }<br>    }<br>    def totalTime = total.curry(table, 1)<br>    def totalSize = total.curry(table, 2)<br><br>    def out = new StringBuffer()<br>    out &lt;&lt; ' Summary '.center(15, "*") &lt;&lt; '\n\n'<br>    out &lt;&lt; 'Total pages:'.padRight(25)<br>    out &lt;&lt; table.size().toString().padLeft(6) &lt;&lt; '\n'<br>    out &lt;&lt; 'Total response time (ms):'.padRight(25)<br>    out &lt;&lt; totalTime().toString().padLeft(6) &lt;&lt; '\n'<br>    out &lt;&lt; 'Total size (KB):'.padRight(25)<br>    out &lt;&lt; totalSize().toString().padLeft(6) &lt;&lt; '\n\n'<br><br>    out &lt;&lt; ' Details '.center(15, "*") &lt;&lt; '\n\n'<br>    table.each {<br>        out &lt;&lt; it[0].padRight(14)<br>        out &lt;&lt; it[1].toString().padLeft(5)<br>        out &lt;&lt; it[2].toString().padLeft(8)<br>        out &lt;&lt; '\n'<br>    }<br>    out.toString()<br>}<br><br>assert '''\<br>*** Summary ***<br><br>Total pages:                  4<br>Total response time (ms):   772<br>Total size (KB):          22567<br>         <br>*** Details ***<br><br>page1.html      200    1201<br>page2.html       42    8853<br>page3.html       98    3432<br>page4.html      432    9081<br>''' == createOutput()</pre>
</div>
</body>
</html>
