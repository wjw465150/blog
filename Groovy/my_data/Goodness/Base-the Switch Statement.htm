<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html><head><meta content="text/html; charset=ISO-8859-1" http-equiv="content-type"><title>Base-the Switch Statement</title></head><body>
<h3 class="post-title entry-title" style="border: 0px none ; margin: 0px 0px 16px; padding: 0px; font-weight: lighter; font-size: 26px; line-height: 26px; font-family: 'Helvetica Neue UltraLight','Helvetica Neue Light','Helvetica Neue',Helvetica,Arial,sans-serif; color: rgb(0, 0, 0); font-style: normal; font-variant: normal; letter-spacing: normal; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 1; word-spacing: 0px; background-color: rgb(255, 255, 255);">Groovy Goodness: the Switch Statement</h3>
<div class="post-body entry-content" style="border: 0px none ; margin: 0px; padding: 0px; color: rgb(0, 0, 0); font-family: 'Helvetica Neue',Helvetica,Arial,sans-serif; font-size: 16px; font-style: normal; font-variant: normal; font-weight: 300; letter-spacing: normal; line-height: 28px; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 1; word-spacing: 0px; background-color: rgb(255, 255, 255);"><p style="border: 0px none ; margin: 0px 0px 20px; padding: 0px;">The
Java switch statement looks pale compared to Groovy's switch statement.
In Groovy we can use different classifiers for a switch statement
instead of only an int or int-derived type. Anything that implements the<span class="Apple-converted-space">&nbsp;</span><code style="border: 1px solid rgb(212, 217, 217); margin: 0px; padding: 1px 4px; font-style: normal; font-variant: normal; font-weight: normal; font-stretch: normal; font-size: 0.9375em; line-height: 24px; font-family: Menlo,Monaco,'Liberation Mono',Consolas,monospace; color: rgb(59, 59, 59); white-space: nowrap; text-shadow: none; background-color: rgb(239, 241, 241);">isCase()</code><span class="Apple-converted-space">&nbsp;</span>method can be used as a classifier. Groovy already added an<span class="Apple-converted-space">&nbsp;</span><code style="border: 1px solid rgb(212, 217, 217); margin: 0px; padding: 1px 4px; font-style: normal; font-variant: normal; font-weight: normal; font-stretch: normal; font-size: 0.9375em; line-height: 24px; font-family: Menlo,Monaco,'Liberation Mono',Consolas,monospace; color: rgb(59, 59, 59); white-space: nowrap; text-shadow: none; background-color: rgb(239, 241, 241);">isCase()</code>method to<span class="Apple-converted-space">&nbsp;</span><code style="border: 1px solid rgb(212, 217, 217); margin: 0px; padding: 1px 4px; font-style: normal; font-variant: normal; font-weight: normal; font-stretch: normal; font-size: 0.9375em; line-height: 24px; font-family: Menlo,Monaco,'Liberation Mono',Consolas,monospace; color: rgb(59, 59, 59); white-space: nowrap; text-shadow: none; background-color: rgb(239, 241, 241);">Class</code><span class="Apple-converted-space">&nbsp;</span>(uses<span class="Apple-converted-space">&nbsp;</span><code style="border: 1px solid rgb(212, 217, 217); margin: 0px; padding: 1px 4px; font-style: normal; font-variant: normal; font-weight: normal; font-stretch: normal; font-size: 0.9375em; line-height: 24px; font-family: Menlo,Monaco,'Liberation Mono',Consolas,monospace; color: rgb(59, 59, 59); white-space: nowrap; text-shadow: none; background-color: rgb(239, 241, 241);">isInstance</code>),<span class="Apple-converted-space">&nbsp;</span><code style="border: 1px solid rgb(212, 217, 217); margin: 0px; padding: 1px 4px; font-style: normal; font-variant: normal; font-weight: normal; font-stretch: normal; font-size: 0.9375em; line-height: 24px; font-family: Menlo,Monaco,'Liberation Mono',Consolas,monospace; color: rgb(59, 59, 59); white-space: nowrap; text-shadow: none; background-color: rgb(239, 241, 241);">Object</code><span class="Apple-converted-space">&nbsp;</span>(uses (<code style="border: 1px solid rgb(212, 217, 217); margin: 0px; padding: 1px 4px; font-style: normal; font-variant: normal; font-weight: normal; font-stretch: normal; font-size: 0.9375em; line-height: 24px; font-family: Menlo,Monaco,'Liberation Mono',Consolas,monospace; color: rgb(59, 59, 59); white-space: nowrap; text-shadow: none; background-color: rgb(239, 241, 241);">equals</code>), collections (uses<span class="Apple-converted-space">&nbsp;</span><code style="border: 1px solid rgb(212, 217, 217); margin: 0px; padding: 1px 4px; font-style: normal; font-variant: normal; font-weight: normal; font-stretch: normal; font-size: 0.9375em; line-height: 24px; font-family: Menlo,Monaco,'Liberation Mono',Consolas,monospace; color: rgb(59, 59, 59); white-space: nowrap; text-shadow: none; background-color: rgb(239, 241, 241);">contains</code>) and regular expressions (uses<span class="Apple-converted-space">&nbsp;</span><code style="border: 1px solid rgb(212, 217, 217); margin: 0px; padding: 1px 4px; font-style: normal; font-variant: normal; font-weight: normal; font-stretch: normal; font-size: 0.9375em; line-height: 24px; font-family: Menlo,Monaco,'Liberation Mono',Consolas,monospace; color: rgb(59, 59, 59); white-space: nowrap; text-shadow: none; background-color: rgb(239, 241, 241);">matches</code>). If we implement the<span class="Apple-converted-space">&nbsp;</span><code style="border: 1px solid rgb(212, 217, 217); margin: 0px; padding: 1px 4px; font-style: normal; font-variant: normal; font-weight: normal; font-stretch: normal; font-size: 0.9375em; line-height: 24px; font-family: Menlo,Monaco,'Liberation Mono',Consolas,monospace; color: rgb(59, 59, 59); white-space: nowrap; text-shadow: none; background-color: rgb(239, 241, 241);">isCase</code><span class="Apple-converted-space">&nbsp;</span>method
in our own Groovy classes we can use it as a classifier as well.
Finally we can use a closure as a classifier. The closure will be
evaluated to a boolean value.</p><pre class="brush:groovy" style="border: 0px none ; margin: 0px; padding: 0px; font-style: normal; font-variant: normal; font-weight: normal; font-stretch: normal; font-size: 16px; line-height: 24px; font-family: Menlo,Monaco,'Liberation Mono',Consolas,monospace;">def testSwitch(val) {<br>    def result<br>    switch (val) {<br>        case ~/^Switch.*Groovy$/:<br>            result = 'Pattern match'<br>            break<br>        case BigInteger:<br>            result = 'Class isInstance'<br>            break<br>        case 60..90:<br>            result = 'Range contains'<br>            break<br>        case [21, 'test', 9.12]:<br>            result = 'List contains'<br>            break<br>        case 42.056:<br>            result = 'Object equals'<br>            break<br>        case { it instanceof Integer &amp;&amp; it &lt; 50 }:<br>            result = 'Closure boolean'<br>            break<br>        default:<br>            result = 'Default'<br>            break<br>    }    <br>    result<br>}<br><br>assert 'Pattern match' == testSwitch("Switch to Groovy")<br>assert 'Class isInstance' == testSwitch(42G)<br>assert 'Range contains' == testSwitch(70)<br>assert 'List contains' == testSwitch('test')<br>assert 'Object equals' == testSwitch(42.056)<br>assert 'Closure boolean' == testSwitch(20)<br>assert 'Default' == testSwitch('default')</pre></div>
</body></html>