<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html lang="zh-cn">
<head>
  <meta content="text/html; charset=ISO-8859-1"
 http-equiv="content-type">
  <title>Collection-GroupBy with Multiple Closures</title>
</head>
<body>
<div id="body_content"
 style="border: 0px none ; margin: 0px; padding: 0px; background: rgb(255, 255, 255) none repeat scroll 0%; color: rgb(0, 0, 0); font-family: 'Helvetica Neue',Helvetica,Arial,sans-serif; font-size: 16px; font-style: normal; font-variant: normal; font-weight: 300; letter-spacing: normal; line-height: 28px; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 1; word-spacing: 0px; -moz-background-clip: initial; -moz-background-origin: initial; -moz-background-inline-policy: initial;">
<div id="main_content"
 style="border: 0px none ; margin: 0px; padding: 0px;">
<div class="main section" id="main"
 style="border: 0px none ; margin: 0px; padding: 0px;">
<div class="widget Blog" id="Blog1"
 style="border: 0px none ; margin: 0px; padding: 0px;">
<div class="blog-posts hfeed"
 style="border: 0px none ; margin: 0px; padding: 0px;">
<div class="post hentry"
 style="border: 0px none ; margin: 0px 0px 40px; padding: 0px;">
<h3 class="post-title entry-title"
 style="border: 0px none ; margin: 0px 0px 16px; padding: 0px; font-weight: lighter; font-size: 26px; line-height: 26px; font-family: 'Helvetica Neue UltraLight','Helvetica Neue Light','Helvetica Neue',Helvetica,Arial,sans-serif;">Groovy
Goodness: GroupBy with Multiple Closures</h3>
<div class="post-body entry-content"
 style="border: 0px none ; margin: 0px; padding: 0px;">
<p style="border: 0px none ; margin: 0px 0px 20px; padding: 0px;">We can<span
 class="Apple-converted-space">&nbsp;</span><a
 href="http://mrhaki.blogspot.com/2009/09/groovy-goodness-using-groupby-method.html"
 style="border: 0px none ; margin: 0px; padding: 0px; color: rgb(51, 51, 51);">group
elements</a><span class="Apple-converted-space">&nbsp;</span>in a List
or Map with the<span class="Apple-converted-space">&nbsp;</span><code
 style="border: 1px solid rgb(212, 217, 217); margin: 0px; padding: 1px 4px; font-style: normal; font-variant: normal; font-weight: normal; font-stretch: normal; font-size: 0.9375em; line-height: 24px; font-family: Menlo,Monaco,'Liberation Mono',Consolas,monospace; color: rgb(59, 59, 59); white-space: nowrap; text-shadow: none; background-color: rgb(239, 241, 241);">groupBy()</code><span
 class="Apple-converted-space">&nbsp;</span>method for a long time in
Groovy. We pass a closure with the grouping condition to get a Map with
the items grouped. And since Groovy 1.8.1 we can use more than closure
to do the grouping. We can use it for both List and Map objects.</p>
<pre class="brush:groovy"
 style="border: 0px none ; margin: 0px; padding: 0px; font-style: normal; font-variant: normal; font-weight: normal; font-stretch: normal; font-size: 16px; line-height: 24px; font-family: Menlo,Monaco,'Liberation Mono',Consolas,monospace;">import static java.util.Calendar.*<br><br>class User {<br>    String name<br>    String city<br>    Date birthDate<br>    public String toString() { name }<br>}<br><br>def users = [<br>    new User(name:'mrhaki', city: 'Tilburg',   birthDate: Date.parse('yyyy-MM-dd', '1973-9-7')),<br>    new User(name:'bob',    city: 'New York',  birthDate: Date.parse('yyyy-MM-dd', '1963-3-30')),<br>    new User(name:'britt',  city: 'Amsterdam', birthDate: Date.parse('yyyy-MM-dd', '1980-5-12')),<br>    new User(name:'kim',    city: 'Amsterdam', birthDate: Date.parse('yyyy-MM-dd', '1983-3-30')),<br>    new User(name:'liam',   city: 'Tilburg',   birthDate: Date.parse('yyyy-MM-dd', '2009-3-6'))<br>]<br><br>def result = users.groupBy({it.city}, {it.birthDate.format('MMM')})<br><br>assert result.toMapString() == <br>    '[Tilburg:[Sep:[mrhaki], Mar:[liam]], New York:[Mar:[bob]], Amsterdam:[May:[britt], Mar:[kim]]]'<br><br>assert result.Amsterdam.size() == 2<br>assert result.Tilburg.Mar.name == ['liam']<br><br>result = users.groupBy({it.name[0]}, {it.city})<br>assert result.toMapString() ==<br>    '[m:[Tilburg:[mrhaki]], b:[New York:[bob], Amsterdam:[britt]], k:[Amsterdam:[kim]], l:[Tilburg:[liam]]]'<br>assert result.k.Amsterdam.name == ['kim']  <br><br>// groupBy with multiple closues also works on Map<br>def usersByCityMap = users.groupBy({it.city})<br>def resultMap = usersByCityMap.groupBy({it.value.size()}, { k,v -&gt; k.contains('i') })<br>assert resultMap.toMapString() ==<br>    '[2:[true:[Tilburg:[mrhaki, liam]], false:[Amsterdam:[britt, kim]]], 1:[false:[New York:[bob]]]]'<br>assert resultMap[1].size() == 1<br>assert resultMap[2].size() == 2<br>assert resultMap[2][true].Tilburg.name.join(',') == 'mrhaki,liam'<br></pre>
<p style="border: 0px none ; margin: 0px 0px 20px; padding: 0px;"><br>
</p>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</body>
</html>
