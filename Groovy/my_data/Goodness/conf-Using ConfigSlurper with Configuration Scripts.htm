<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html lang="zh-cn">
<head>
  <meta content="text/html; charset=ISO-8859-1"
 http-equiv="content-type">
  <title>conf-Using ConfigSlurper with Configuration Scripts</title>
</head>
<body>
<div id="body_content"
 style="border: 0px none ; margin: 0px; padding: 0px; background: rgb(255, 255, 255) none repeat scroll 0%; color: rgb(0, 0, 0); font-family: 'Helvetica Neue',Helvetica,Arial,sans-serif; font-size: 16px; font-style: normal; font-variant: normal; font-weight: 300; letter-spacing: normal; line-height: 28px; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 1; word-spacing: 0px; -moz-background-clip: initial; -moz-background-origin: initial; -moz-background-inline-policy: initial;">
<div id="main_content"
 style="border: 0px none ; margin: 0px; padding: 0px;">
<div class="main section" id="main"
 style="border: 0px none ; margin: 0px; padding: 0px;">
<div class="widget Blog" id="Blog1"
 style="border: 0px none ; margin: 0px; padding: 0px;">
<div class="blog-posts hfeed"
 style="border: 0px none ; margin: 0px; padding: 0px;">
<div class="post hentry"
 style="border: 0px none ; margin: 0px 0px 40px; padding: 0px;">
<h3 class="post-title entry-title"
 style="border: 0px none ; margin: 0px 0px 16px; padding: 0px; font-weight: lighter; font-size: 26px; line-height: 26px; font-family: 'Helvetica Neue UltraLight','Helvetica Neue Light','Helvetica Neue',Helvetica,Arial,sans-serif;">Groovy
Goodness: Using ConfigSlurper with Configuration Scripts</h3>
<div class="post-body entry-content"
 style="border: 0px none ; margin: 0px; padding: 0px;">
<p style="border: 0px none ; margin: 0px 0px 20px; padding: 0px;">The<span
 class="Apple-converted-space">&nbsp;</span><a
 href="http://groovy.codehaus.org/gapi/groovy/util/ConfigSlurper.html"
 style="border: 0px none ; margin: 0px; padding: 0px; color: rgb(51, 51, 51);"><code
 style="border: 1px solid rgb(212, 217, 217); margin: 0px; padding: 1px 4px; font-style: normal; font-variant: normal; font-weight: normal; font-stretch: normal; font-size: 0.9375em; line-height: 24px; font-family: Menlo,Monaco,'Liberation Mono',Consolas,monospace; color: rgb(59, 59, 59); white-space: nowrap; text-shadow: none; background-color: rgb(239, 241, 241);">ConfigSlurper</code></a><span
 class="Apple-converted-space">&nbsp;</span>class can be used to parse
Groovy scripts with configuration information. This way we can use a
real script instead of a properties file to define configuration
information in our applications. In a<span class="Apple-converted-space">&nbsp;</span><a
 href="http://mrhaki.blogspot.com/2009/08/grassroots-groovy-configuration-with.html"
 style="border: 0px none ; margin: 0px; padding: 0px; color: rgb(51, 51, 51);">previous
post</a><span class="Apple-converted-space">&nbsp;</span>we saw how to
use the<span class="Apple-converted-space">&nbsp;</span><code
 style="border: 1px solid rgb(212, 217, 217); margin: 0px; padding: 1px 4px; font-style: normal; font-variant: normal; font-weight: normal; font-stretch: normal; font-size: 0.9375em; line-height: 24px; font-family: Menlo,Monaco,'Liberation Mono',Consolas,monospace; color: rgb(59, 59, 59); white-space: nowrap; text-shadow: none; background-color: rgb(239, 241, 241);">ConfigSlurper</code><span
 class="Apple-converted-space">&nbsp;</span>from Java code and in this
post we focus on using it in Groovy code.</p>
<p style="border: 0px none ; margin: 0px 0px 20px; padding: 0px;">Using
the<span class="Apple-converted-space">&nbsp;</span><code
 style="border: 1px solid rgb(212, 217, 217); margin: 0px; padding: 1px 4px; font-style: normal; font-variant: normal; font-weight: normal; font-stretch: normal; font-size: 0.9375em; line-height: 24px; font-family: Menlo,Monaco,'Liberation Mono',Consolas,monospace; color: rgb(59, 59, 59); white-space: nowrap; text-shadow: none; background-color: rgb(239, 241, 241);">ConfigSlurper</code><span
 class="Apple-converted-space">&nbsp;</span>we can parse Groovy scripts
into a<span class="Apple-converted-space">&nbsp;</span><a
 href="http://groovy.codehaus.org/gapi/groovy/util/ConfigObject.html"
 style="border: 0px none ; margin: 0px; padding: 0px; color: rgb(51, 51, 51);"><code
 style="border: 1px solid rgb(212, 217, 217); margin: 0px; padding: 1px 4px; font-style: normal; font-variant: normal; font-weight: normal; font-stretch: normal; font-size: 0.9375em; line-height: 24px; font-family: Menlo,Monaco,'Liberation Mono',Consolas,monospace; color: rgb(59, 59, 59); white-space: nowrap; text-shadow: none; background-color: rgb(239, 241, 241);">ConfigObject</code></a>.
The<span class="Apple-converted-space">&nbsp;</span><code
 style="border: 1px solid rgb(212, 217, 217); margin: 0px; padding: 1px 4px; font-style: normal; font-variant: normal; font-weight: normal; font-stretch: normal; font-size: 0.9375em; line-height: 24px; font-family: Menlo,Monaco,'Liberation Mono',Consolas,monospace; color: rgb(59, 59, 59); white-space: nowrap; text-shadow: none; background-color: rgb(239, 241, 241);">ConfigObject</code><span
 class="Apple-converted-space">&nbsp;</span>is a subclass of<span
 class="Apple-converted-space">&nbsp;</span><code
 style="border: 1px solid rgb(212, 217, 217); margin: 0px; padding: 1px 4px; font-style: normal; font-variant: normal; font-weight: normal; font-stretch: normal; font-size: 0.9375em; line-height: 24px; font-family: Menlo,Monaco,'Liberation Mono',Consolas,monospace; color: rgb(59, 59, 59); white-space: nowrap; text-shadow: none; background-color: rgb(239, 241, 241);">LinkedHashMap</code><span
 class="Apple-converted-space">&nbsp;</span>and contains the
configuration information. A configuration script contains information
defined using dot notation or closures. Because it is a script we can
use all Groovy constructs, or use any other Groovy and Java class we
want.</p>
<p style="border: 0px none ; margin: 0px 0px 20px; padding: 0px;">To
support different configuration settings per environment (for example
development, test and production) we can define a special environments
section in our script. When we create a new<span
 class="Apple-converted-space">&nbsp;</span><code
 style="border: 1px solid rgb(212, 217, 217); margin: 0px; padding: 1px 4px; font-style: normal; font-variant: normal; font-weight: normal; font-stretch: normal; font-size: 0.9375em; line-height: 24px; font-family: Menlo,Monaco,'Liberation Mono',Consolas,monospace; color: rgb(59, 59, 59); white-space: nowrap; text-shadow: none; background-color: rgb(239, 241, 241);">ConfigSlurper</code><span
 class="Apple-converted-space">&nbsp;</span>instance and use a
environment name in the constructor, the environment section is used to
determine values. If we don't specify the environment in the
constructor the environments section is skipped.</p>
<p style="border: 0px none ; margin: 0px 0px 20px; padding: 0px;">Okay
that is a lot of explaining, let's see some code:</p>
<pre class="brush:groovy"
 style="border: 0px none ; margin: 0px; padding: 0px; font-style: normal; font-variant: normal; font-weight: normal; font-stretch: normal; font-size: 16px; line-height: 24px; font-family: Menlo,Monaco,'Liberation Mono',Consolas,monospace;">// Configuration script as String, but can also be URL, file.<br>def mail = '''<br><br>// Dot notation.<br>mail.hostname = 'localhost'  <br><br>// Scoped closure notation.<br>mail {  <br>    // Using Groovy constructs.<br>    ['user', 'password'].each { <br>        this."${it}" = 'secret' <br>    }<br>}<br><br>// Environments section.<br>environments {<br>    dev {<br>        mail.hostname = 'local'<br>    }<br>    test {<br>        mail.hostname = 'test'<br>    }<br>    prod {<br>        mail.hostname = 'prod'<br>    }<br>}<br>'''<br><br>// Another configuration script.<br>def app = '''<br>app {<br>    version = version()  // Use method in script.<br>}<br><br>// Define method to build version info.<br>def version() {<br>    "1.0-${releasedate.format('yyyy_MM_dd')}"<br>}<br>'''<br><br>// Read mail configuration script for the prod environment.<br>def mailConfig = new ConfigSlurper('prod').parse(mail)<br><br>// We can pass information to the configuration with<br>// the setBinding method.<br>def appSlurper = new ConfigSlurper()<br>appSlurper.setBinding([releasedate: new Date(109, 9, 10)])<br>def appConfig = appSlurper.parse(app)<br><br>// Both configurations are merged into one.<br>def config = mailConfig.merge(appConfig)<br><br>assert 'prod' == config.mail.hostname<br>assert 'secret' == config.mail.user<br>assert 'secret' == config.mail.password<br>assert '1.0-2009_10_10' == config.app.version<br></pre>
<p style="border: 0px none ; margin: 0px 0px 20px; padding: 0px;"></p>
<div style="border: 0px none ; margin: 0px; padding: 0px; clear: both;"></div>
</div>
</div>
</div>
<div class="clear"
 style="border: 0px none ; margin: 0px; padding: 0px; clear: both;"></div>
</div>
</div>
</div>
</div>
<iframe name="oauth2relay544343840" id="oauth2relay544343840"
 src="about:blank" tabindex="-1"
 style="border: 0px none ; margin: 0px; padding: 0px; color: rgb(0, 0, 0); font-family: 'Helvetica Neue',Helvetica,Arial,sans-serif; font-size: 16px; font-style: normal; font-variant: normal; font-weight: 300; letter-spacing: normal; line-height: 28px; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 1; word-spacing: 0px; width: 1px; height: 1px; position: absolute; top: -100px;"></iframe><br
 class="Apple-interchange-newline">
</body>
</html>
