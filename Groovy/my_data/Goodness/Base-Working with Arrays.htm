<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html lang="zh-cn"><head><meta content="text/html; charset=ISO-8859-1" http-equiv="content-type"><title>Base-Working with Arrays</title></head><body>
<div id="body_content" style="border: 0px none ; margin: 0px; padding: 0px; background: rgb(255, 255, 255) none repeat scroll 0%; color: rgb(0, 0, 0); font-family: 'Helvetica Neue',Helvetica,Arial,sans-serif; font-size: 16px; font-style: normal; font-variant: normal; font-weight: 300; letter-spacing: normal; line-height: 28px; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 1; word-spacing: 0px; -moz-background-clip: initial; -moz-background-origin: initial; -moz-background-inline-policy: initial;"><div id="main_content" style="border: 0px none ; margin: 0px; padding: 0px;"><div class="main section" id="main" style="border: 0px none ; margin: 0px; padding: 0px;"><div class="widget Blog" id="Blog1" style="border: 0px none ; margin: 0px; padding: 0px;"><div class="blog-posts hfeed" style="border: 0px none ; margin: 0px; padding: 0px;"><div class="post hentry" style="border: 0px none ; margin: 0px 0px 40px; padding: 0px;"><h3 class="post-title entry-title" style="border: 0px none ; margin: 0px 0px 16px; padding: 0px; font-weight: lighter; font-size: 26px; line-height: 26px; font-family: 'Helvetica Neue UltraLight','Helvetica Neue Light','Helvetica Neue',Helvetica,Arial,sans-serif;">Groovy Goodness: Working with Arrays</h3><div class="post-body entry-content" style="border: 0px none ; margin: 0px; padding: 0px;"><p style="border: 0px none ; margin: 0px 0px 20px; padding: 0px;">Groovy supports arrays just like in Java. We only get a lot more methods because of the<span class="Apple-converted-space">&nbsp;</span><a href="http://groovy.codehaus.org/groovy-jdk/primitive-types/T%5B%5D.html" style="border: 0px none ; margin: 0px; padding: 0px; color: rgb(51, 51, 51);">GDK extensions</a><span class="Apple-converted-space">&nbsp;</span>added
to arrays. The only we thing we need to consider is the way we
initialize arrays. In Java we can define and populate an array with the
following code:<code style="border: 1px solid rgb(212, 217, 217); margin: 0px; padding: 1px 4px; font-style: normal; font-variant: normal; font-weight: normal; font-stretch: normal; font-size: 0.9375em; line-height: 24px; font-family: Menlo,Monaco,'Liberation Mono',Consolas,monospace; color: rgb(59, 59, 59); white-space: nowrap; text-shadow: none; background-color: rgb(239, 241, 241);">String[] s = new String[] { "a", "b" };</code>, but in Groovy we cannot use this syntax. In Groovy the previous statement would become<code style="border: 1px solid rgb(212, 217, 217); margin: 0px; padding: 1px 4px; font-style: normal; font-variant: normal; font-weight: normal; font-stretch: normal; font-size: 0.9375em; line-height: 24px; font-family: Menlo,Monaco,'Liberation Mono',Consolas,monospace; color: rgb(59, 59, 59); white-space: nowrap; text-shadow: none; background-color: rgb(239, 241, 241);">String[] s = ["a", "b"] as String[]</code>.</p><pre class="brush:groovy" style="border: 0px none ; margin: 0px; padding: 0px; font-style: normal; font-variant: normal; font-weight: normal; font-stretch: normal; font-size: 16px; line-height: 24px; font-family: Menlo,Monaco,'Liberation Mono',Consolas,monospace;">def strArray = new String[3]<br>assert strArray instanceof String[]<br>strArray[0] = 'mrhaki'<br>strArray.putAt(1, 'Groovy')  // New syntax.<br>strArray[2] = 'Java'<br><br>assert 'mrhaki' == strArray.getAt(0)  // Just another way to get a value.<br>assert 'Groovy' == strArray[1]<br>assert 'Java' == strArray[-1]  // Negative indeces allowed.<br>assert ['mrhaki', 'Groovy'] == strArray[0..1]  // We can use ranges.<br>assert ['mrhaki', 'Java'] == strArray[0, 2]<br><br>assert 3 == strArray.length  // Normal length property for arrays.<br>assert 3 == strArray.size()  // Groovy adds size() method as well.<br><br>// We can use min() and max() methods.<br>assert 42 == [102,301,42,83].min()<br>assert 301 == [102,301,42,83].max()<br>assert 'Java' == strArray.min { it.size() }<br>assert 'mrhaki' == strArray.max { it[0] as char }<br><br>// We can even use the Collection GDK methods on an array.<br>strArray.eachWithIndex { value, idx -&gt; assert value == strArray[idx] }<br>assert ['ikahrm', 'yvoorG', 'avaJ'] == strArray.collect { it.reverse() }<br>assert 'Groovy' == strArray.find { it =~ /Groovy/ }<br><br>// We can remove values with the '-' operator.<br>assert ['Groovy', 'Java'] == strArray - 'mrhaki'<br><br>// Other useful methods for arrays.<br>assert ['Java', 'Groovy', 'mrhaki'] == strArray.reverse()<br>assert ['Groovy', 'Java', 'mrhaki'] == strArray.sort()<br>assert 1 == strArray.count('mrhaki')<br><br>// Convert to ArrayList.<br>def strList = strArray.toList()<br>assert 'java.util.ArrayList' == strList.class.name<br><br>// Convert ArrayList to array object.<br>def otherArray = strList as String[]<br>assert otherArray instanceof String[]<br></pre><p style="border: 0px none ; margin: 0px 0px 20px; padding: 0px;"></p><div style="border: 0px none ; margin: 0px; padding: 0px; clear: both;"></div></div></div></div><div class="clear" style="border: 0px none ; margin: 0px; padding: 0px; clear: both;"></div></div></div></div></div>
<iframe name="oauth2relay392227627" id="oauth2relay392227627" src="about:blank" tabindex="-1" style="border: 0px none ; margin: 0px; padding: 0px; color: rgb(0, 0, 0); font-family: 'Helvetica Neue',Helvetica,Arial,sans-serif; font-size: 16px; font-style: normal; font-variant: normal; font-weight: 300; letter-spacing: normal; line-height: 28px; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 1; word-spacing: 0px; width: 1px; height: 1px; position: absolute; top: -100px;"></iframe><br class="Apple-interchange-newline">
</body></html>