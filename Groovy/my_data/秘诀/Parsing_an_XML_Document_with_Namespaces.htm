<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
<title>Parsing an XML Document with Namespaces</title>
<meta name="GENERATOR" content="WinCHM">
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<style>
html,body { 
	/* Default Font */
	font-family: 宋体, Arial, Helvetica, sans-serif;
	font-size: 10pt;
}
</style>

</head>

<body>
<H4 
style="FONT-SIZE: 14px; FONT-FAMILY: Arial; FONT-VARIANT: normal; WHITE-SPACE: normal; TEXT-TRANSFORM: none; WORD-SPACING: 0px; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; FONT-STYLE: normal; TEXT-ALIGN: left; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; ORPHANS: 2; WIDOWS: 2; LETTER-SPACING: normal; LINE-HEIGHT: 26px; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px">Parsing 
an XML Document with Namespaces</H4>
<P 
style="WHITE-SPACE: normal; TEXT-TRANSFORM: none; WORD-SPACING: 0px; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; TEXT-ALIGN: left; PADDING-TOP: 0px; FONT: 14px/26px Arial; PADDING-LEFT: 0px; MARGIN: 0px; ORPHANS: 2; WIDOWS: 2; LETTER-SPACING: normal; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px">在处理命名空间时，XmlParser 
与 XmlSlurper 的区别比较明显：XmlParser 严格遵守命名空间；而 XmlSlurper 则默认忽略命名空间，除非你进行了声明：</P>
<DIV id=codeSnippetWrapper 
style="WHITE-SPACE: normal; TEXT-TRANSFORM: none; WORD-SPACING: 0px; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; TEXT-ALIGN: left; PADDING-TOP: 0px; FONT: 14px/26px Arial; PADDING-LEFT: 0px; MARGIN: 0px; ORPHANS: 2; WIDOWS: 2; LETTER-SPACING: normal; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px">&nbsp;</DIV>
<DIV style="WHITE-SPACE: 
normal; TEXT-TRANSFORM: none; WORD-SPACING: 0px; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; TEXT-ALIGN: left; PADDING-TOP: 0px; FONT: 14px/26px Arial; PADDING-LEFT: 0px; MARGIN: 0px; ORPHANS: 2; WIDOWS: 2; LETTER-SPACING: normal; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px" >def p_xml = """<BR>&lt;p:person<BR>xmlns:p="<A 
href="http://somewhere.org/person">http://somewhere.org/person</A>"<BR>xmlns:xsi="<A 
href="http://www.w3.org/2001/XMLSchema-instance">http://www.w3.org/2001/XMLSchema-instance</A>"<BR>xsi:schemaLocation="<A 
href="http://somewhere.org/person">http://somewhere.org/person</A><BR><A 
href="http://somewhere.org/person.xsd">http://somewhere.org/person.xsd</A>"<BR>id="99" 
&gt;<BR>&lt;p:firstname&gt;John&lt;/p:firstname&gt;<BR>&lt;p:last-name&gt;Smith&lt;/p:last-name&gt;<BR>&lt;/p:person&gt;<BR>"""<BR>def 
person = new XmlParser().parseText(p_xml)<BR>//the firstname element cannot be 
found without its namespace<BR>println person.firstname.text()<BR>===&gt; 
[]<BR>def p = new groovy.xml.Namespace("<A 
href="http://somewhere.org/person">http://somewhere.org/person</A>" )<BR>println 
person[p.firstname].text()<BR>===&gt; John<BR>println person[p.'last-name' 
].text()<BR>===&gt; Smith<BR>When p</DIV></body>
</html>