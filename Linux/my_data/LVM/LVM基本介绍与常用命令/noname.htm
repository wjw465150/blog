<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">
<html>
<head>
<title>LVM基本介绍与常用命令</title>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
</head>
<body><!--StartFragment--><div class="showHead"><div class="showTitleBOx" style="TEXT-ALIGN: center"><div class="showTitle">LVM基本介绍与常用命令
                </div>
  		    </div>
   		    <span class="artTime">2011-05-19 12:01:19</span></div>
    <div class="showTags">标签：<a href="http://blog.51cto.com/tagindex.php?keyword=LVM" target="_blank" class="operlink">LVM</a> <a href="http://blog.51cto.com/tagindex.php?keyword=LV" target="_blank" class="operlink">LV</a> <a href="http://blog.51cto.com/tagindex.php?keyword=PV" target="_blank" class="operlink">PV</a> <a href="http://blog.51cto.com/tagindex.php?keyword=PE" target="_blank" class="operlink">PE</a> <a href="http://blog.51cto.com/tagindex.php?keyword=LE" target="_blank" class="operlink">LE</a>

	</div>



            
    		<div class="showContent">
    		  <p>一、LVM介绍<br>
LVM是 Logical Volume Manager(逻辑卷管理)的简写，它是Linux环境下对磁盘分区进行管理的一种机制<br>
LVM - 优点: <br>
LVM通常用于装备大量磁盘的系统，但它同样适于仅有一、两块硬盘的小系统。</p>
<p>小系统使用LVM的益处:</p>
<p>传统的文件系统是基于分区的，一个文件系统对应一个分区。这种方式比较直观，但不易改变：</p>
<p>1.不同的分区相对独立，无相互联系，各分区空间很易利用不平衡，空间不能充分利用；</p>
<p>2.当一个文件系统／分区已满时，无法对其扩充，只能采用重新分区／建立文件系统，非常麻烦；或把分区中的数据移到另一个更</p>
<p>大的分区中；或采用符号连接的方式使用其它分区的空间。</p>
<p>3.如果要把硬盘上的多个分区合并在一起使用，只能采用再分区的方式，这个过程需要数据的备份与恢复。</p>
<p>当采用LVM时，情况有所不同：</p>
<p>1.硬盘的多个分区由LVM统一为卷组管理，可以方便的加入或移走分区以扩大或减小卷组的可用容量，充分利用硬盘空间；</p>
<p>2.文件系统建立在逻辑卷上，而逻辑卷可根据需要改变大小(在卷组容量范围内)以满足要求；</p>
<p>3.文件系统建立在LVM上，可以跨分区，方便使用；</p>
<p>大系统使用LVM的益处:</p>
<p>1、在使用很多硬盘的大系统中，使用LVM主要是方便管理、增加了系统的扩展性。</p>
<p>2、在一个有很多不同容量硬盘的大型系统中，对不同的用户的空间分配是一个技巧性的工作，要在用户需求与实际可用空间中寻求</p>
<p>平衡。</p>
<p>3、用户／用户组的空间建立在LVM上，可以随时按要求增大，或根据使用情况对各逻辑卷进行调整。当系统空间不足而加入新的硬</p>
<p>盘时，不必把用户的数据从原硬盘迁移到新硬盘，而只须把新的分区加入卷组并扩充逻辑卷即可。同样，使用LVM可以在不停服务的</p>
<p>情况下。把用户数据从旧硬盘转移到新硬盘空间中去。</p>
<p>二、 基本概念<br>
1、 物理卷-----PV（Physical Volume）<br>
物理卷在逻辑卷管理中处于最底层，它可以是实际物理硬盘上的分区，也可以是整个物理硬盘。</p>
<p>2、 卷组--------VG（Volumne Group）<br>
卷组建立在物理卷之上，一个卷组中至少要包括一个物理卷，在卷组建立之后可动态添加物理卷到卷组中。一个逻辑卷管理系统工</p>
<p>程中可以只有一个卷组，也可以拥有多个卷组。</p>
<p>3、 逻辑卷-----LV（Logical Volume）<br>
逻辑卷建立在卷组之上，卷组中的未分配空间可以用于建立新的逻辑卷，逻辑卷建立后可以动态地扩展和缩小空间。系统中的多个</p>
<p>逻辑卷可以属于同一个卷组，也可以属于不同的多个卷组。</p>
<p>4、 物理区域--PE（Physical Extent）<br>
物理区域是物理卷中可用于分配的最小存储单元，物理区域的大小可根据实际情况在建立物理卷时指定。物理区域大小一旦确定将</p>
<p>不能更改，同一卷组中的所有物理卷的物理区域大小需要一致。</p>
<p>5、 逻辑区域―LE（Logical Extent）<br>
逻辑区域是逻辑卷中可用于分配的最小存储单元，逻辑区域的大小取决于逻辑卷所在卷组中的物理区域的大小。</p>
<p>6、 卷组描述区域-----（Volume Group Descriptor Area）<br>
卷组描述区域存在于每个物理卷中，用于描述物理卷本身、物理卷所属卷组、卷组中的逻辑卷及逻辑卷中物理区域的分配等所有信</p>
<p>息，卷组描述区域是在使用pvcreate建立物理卷时建立的。</p>
<p>三、 常用命令<br>
1、 物理卷命令<br>
一般维护命令：<br>
pvscan #在系统的所有磁盘中搜索已存在的物理卷<br>
pvdisplay 物理卷全路径名称 #用于显示指定物理卷的属性。<br>
pvdata 物理卷全路径名称 #用于显示物理卷的卷组描述区域信息，用于调试目的。<br>
pvchange Cx|--allocation {y|n} 物理卷全路径名 #用于改变物理卷的分配许可设置物理卷的创建与删除命令<br>
pvcreate 设备全路径名 #用于在磁盘或磁盘分区上创建物理卷初始化信息，以便对该物理卷进行逻辑卷管理。<br>
pvmove 源物理卷全路径我[目的物理卷全路径名] #用于把某物理卷中的数据转移到同卷组中其他的特刊卷中。</p>
<p>2、 卷组命令<br>
一般维护命令<br>
vgscan #检测系统中所有磁盘<br>
vgck [卷组名] #用于检查卷组中卷组描述区域信息的一致性。<br>
vgdisplay [卷组名] #显示卷组的属性信息<br>
vgrename 原卷组名 新卷组名 <br>
vgchange -a y|n [卷组名] #改变卷组的相应属性。是否可分配<br>
vgchange -l 最大逻辑卷数 #卷组可容纳最大逻辑卷数<br>
vgchange -x y|n [卷组名] #卷是否有效<br>
vgmknodes [卷组名|卷组路径] #用于建立（重新建立）已有卷组目录和其中的设备文件卷组配置的备份与恢复命令<br>
vgcfgbackup [卷组名] #把卷组中的VGDA信息备份到“/etc/lvmconf”目录中的文件<br>
vgcfgrestore -n 卷组名 物理卷全路命名 #从备份文件中必得指定物理卷的信息卷组的建立与删除命令<br>
vgcreate 卷组名 物理卷全路径名[物理卷全路径名]<br>
vgmove 卷组名</p>
<p>卷组的扩充与缩小命令<br>
vgextend 卷组名 物理卷全路径名[物理卷全路径名]<br>
vgreduce 卷组名 物理卷全路径名[物理卷全路径名]</p>
<p>卷组的合并与拆分<br>
vgmerge 目的卷组名 源卷组名 #合并两个已经存在的卷组，要求两个卷组的物理区域大小相等且源卷组是非活动的。<br>
vgsplit 现有卷组 新卷组 物理卷全路径名[物理卷全路径名]</p>
<p>卷组的输入与输出命令<br>
vgexport 卷组名<br>
vgimport 卷组名 卷组中的物理卷[卷组中的物理卷]</p>
<p>3、 逻辑卷命令<br>
一般命令<br>
lvscan<br>
lvdisplay 逻辑卷全路径名[逻辑卷全路径名]<br>
lvrename 旧逻辑卷全路径名 新逻辑卷全路径名<br>
lvrename 卷组名 旧逻辑卷名 新逻辑卷名<br>
lvchange<br>
e2fsadm -L +|- 逻辑卷增减量 逻辑卷全路径名</p>
<p>逻辑卷的创建与删除命令<br>
lvcreate<br>
lvremove</p>
<p>逻辑卷的扩充与缩小命令<br>
lvextend -L|--size +逻辑卷大小增量 逻辑卷全路径名<br>
lvreduce q -L|--size +逻辑卷减小量 逻辑卷全路径名</p>
<p>4、 逻辑卷管理命令<br>
lvmdiskscan #检测所有的SCSI、IDE等存储设备<br>
lvmchange -R|--reset #复位逻辑卷管理器 <br>
lvmsadc [日志文件全路径名] #收信逻辑卷管理器读写统计信息，保存到日志文件中。<br>
lvmsar 日志文件全路径名 #从lvmsadc命令生成的日志文件中读取并报告逻辑卷管理器的读写统计信息。</p>
<p>
  &nbsp;</p>
    		</div><!--EndFragment-->
</body>
