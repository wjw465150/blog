<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
<title>Hhase性能调优</title>
<meta name="GENERATOR" content="WinCHM">
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<style>
html,body { 
	/* Default Font */
	font-family: Arial, Helvetica, sans-serif;
	font-size: 11pt;
}
</style>

</head>

<body>
<H3 
style="FONT-SIZE: 20px; FONT-FAMILY: 'Roboto Slab', serif; FONT-VARIANT: normal; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(218,68,83); PADDING-BOTTOM: 0px; FONT-STYLE: normal; TEXT-ALIGN: left; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 20px 0px 10px; LETTER-SPACING: normal; LINE-HEIGHT: 1.1; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">配置优化</H3>
<P 
style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(107,107,107); PADDING-BOTTOM: 0px; TEXT-ALIGN: left; PADDING-TOP: 0px; FONT: 14px/23px 'Open Sans', sans-serif; PADDING-LEFT: 0px; MARGIN: 0px 0px 10px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px"><SPAN 
style="FONT-WEIGHT: 700">zookeeper.session.timeout</SPAN><BR><SPAN 
style="FONT-WEIGHT: 700">默认值</SPAN>：3分钟（180000ms）<BR><SPAN 
style="FONT-WEIGHT: 700">说明</SPAN>：RegionServer与Zookeeper间的连接超时时间。当超时时间到后，ReigonServer会被Zookeeper从RS集群清单中移除，HMaster收到移除通知后，会对这台server负责的regions重新balance，让其他存活的RegionServer接管.<BR><SPAN 
style="FONT-WEIGHT: 700">调优</SPAN>：<BR>这个timeout决定了RegionServer是否能够及时的failover。设置成1分钟或更低，可以减少因等待超时而被延长的failover时间。<BR>不过需要注意的是，对于一些Online应用，RegionServer从宕机到恢复时间本身就很短的（网络闪断，crash等故障，运维可快速介入），如果调低timeout时间，反而会得不偿失。因为当ReigonServer被正式从RS集群中移除时，HMaster就开始做balance了（让其他RS根据故障机器记录的WAL日志进行恢复）。当故障的RS在人工介入恢复后，这个balance动作是毫无意义的，反而会使负载不均匀，给RS带来更多负担。特别是那些固定分配regions的场景。</P>
<P 
style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(107,107,107); PADDING-BOTTOM: 0px; TEXT-ALIGN: left; PADDING-TOP: 0px; FONT: 14px/23px 'Open Sans', sans-serif; PADDING-LEFT: 0px; MARGIN: 0px 0px 10px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px"><SPAN 
id=more-2340></SPAN></P>
<P 
style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(107,107,107); PADDING-BOTTOM: 0px; TEXT-ALIGN: left; PADDING-TOP: 0px; FONT: 14px/23px 'Open Sans', sans-serif; PADDING-LEFT: 0px; MARGIN: 0px 0px 10px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px"><SPAN 
style="FONT-WEIGHT: 700">hbase.regionserver.handler.count</SPAN><BR><SPAN 
style="FONT-WEIGHT: 700">默认值</SPAN>：10<BR><SPAN 
style="FONT-WEIGHT: 700">说明</SPAN>：RegionServer的请求处理IO线程数。<BR><SPAN 
style="FONT-WEIGHT: 700">调优</SPAN>：<BR>这个参数的调优与内存息息相关。<BR>较少的IO线程，适用于处理单次请求内存消耗较高的Big 
PUT场景（大容量单次PUT或设置了较大cache的scan，均属于Big 
PUT）或ReigonServer的内存比较紧张的场景。<BR>较多的IO线程，适用于单次请求内存消耗低，TPS要求非常高的场景。设置该值的时候，以监控内存为主要参考。<BR>这里需要注意的是如果server的region数量很少，大量的请求都落在一个region上，因快速充满memstore触发flush导致的读写锁会影响全局TPS，不是IO线程数越高越好。<BR>压测时，开启<A 
title="Enabling RPC-level logging" 
style="TEXT-DECORATION: none; COLOR: rgb(255,153,0)" 
href="http://hbase.apache.org/book.html#rpc.logging" target=_blank>Enabling 
RPC-level logging</A>，可以同时监控每次请求的内存消耗和GC的状况，最后通过多次压测结果来合理调节IO线程数。<BR>这里是一个案例?<A 
style="TEXT-DECORATION: none; COLOR: rgb(255,153,0)" 
href="http://software.intel.com/en-us/articles/hadoop-and-hbase-optimization-for-read-intensive-search-applications/" 
target=_blank>Hadoop and HBase Optimization for Read Intensive Search 
Applications</A>，作者在SSD的机器上设置IO线程数为100，仅供参考。</P>
<P 
style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(107,107,107); PADDING-BOTTOM: 0px; TEXT-ALIGN: left; PADDING-TOP: 0px; FONT: 14px/23px 'Open Sans', sans-serif; PADDING-LEFT: 0px; MARGIN: 0px 0px 10px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px"><SPAN 
style="FONT-WEIGHT: 700">hbase.hregion.max.filesize</SPAN><BR><SPAN 
style="FONT-WEIGHT: 700">默认值</SPAN>：256M<BR><SPAN 
style="FONT-WEIGHT: 700">说明</SPAN>：在当前ReigonServer上单个Reigon的最大存储空间，单个Region超过该值时，这个Region会被自动split成更小的region。<BR><SPAN 
style="FONT-WEIGHT: 700">调优</SPAN>：<BR>小region对split和compaction友好，因为拆分region或compact小region里的storefile速度很快，内存占用低。缺点是split和compaction会很频繁。<BR>特别是数量较多的小region不停地split, 
compaction，会导致集群响应时间波动很大，region数量太多不仅给管理上带来麻烦，甚至会引发一些Hbase的bug。<BR>一般512以下的都算小region。</P>
<P 
style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(107,107,107); PADDING-BOTTOM: 0px; TEXT-ALIGN: left; PADDING-TOP: 0px; FONT: 14px/23px 'Open Sans', sans-serif; PADDING-LEFT: 0px; MARGIN: 0px 0px 10px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">大region，则不太适合经常split和compaction，因为做一次compact和split会产生较长时间的停顿，对应用的读写性能冲击非常大。此外，大region意味着较大的storefile，compaction时对内存也是一个挑战。<BR>当然，大region也有其用武之地。如果你的应用场景中，某个时间点的访问量较低，那么在此时做compact和split，既能顺利完成split和compaction，又能保证绝大多数时间平稳的读写性能。</P>
<P 
style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(107,107,107); PADDING-BOTTOM: 0px; TEXT-ALIGN: left; PADDING-TOP: 0px; FONT: 14px/23px 'Open Sans', sans-serif; PADDING-LEFT: 0px; MARGIN: 0px 0px 10px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">既然split和compaction如此影响性能，有没有办法去掉？<BR>compaction是无法避免的，split倒是可以从自动调整为手动。<BR>只要通过将这个参数值调大到某个很难达到的值，比如100G，就可以间接禁用自动split（RegionServer不会对未到达100G的region做split）。<BR>再配合<A 
title="class in org.apache.hadoop.hbase.util" 
style="TEXT-DECORATION: none; COLOR: rgb(255,153,0)" 
href="http://hbase.apache.org/apidocs/org/apache/hadoop/hbase/util/RegionSplitter.html" 
target=_blank>RegionSplitter</A>这个工具，在需要split时，手动split。<BR>手动split在灵活性和稳定性上比起自动split要高很多，相反，管理成本增加不多，比较推荐online实时系统使用。</P>
<P 
style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(107,107,107); PADDING-BOTTOM: 0px; TEXT-ALIGN: left; PADDING-TOP: 0px; FONT: 14px/23px 'Open Sans', sans-serif; PADDING-LEFT: 0px; MARGIN: 0px 0px 10px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">内存方面，小region在设置memstore的大小值上比较灵活，大region则过大过小都不行，过大会导致flush时app的IO 
wait增高，过小则因store file过多影响读性能。</P>
<P 
style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(107,107,107); PADDING-BOTTOM: 0px; TEXT-ALIGN: left; PADDING-TOP: 0px; FONT: 14px/23px 'Open Sans', sans-serif; PADDING-LEFT: 0px; MARGIN: 0px 0px 10px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px"><SPAN 
style="FONT-WEIGHT: 700">hbase.regionserver.global.memstore.upperLimit/lowerLimit</SPAN></P>
<P 
style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(107,107,107); PADDING-BOTTOM: 0px; TEXT-ALIGN: left; PADDING-TOP: 0px; FONT: 14px/23px 'Open Sans', sans-serif; PADDING-LEFT: 0px; MARGIN: 0px 0px 10px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px"><SPAN 
style="FONT-WEIGHT: 700">默认值：</SPAN>0.4/0.35<BR><SPAN 
style="FONT-WEIGHT: 700">upperlimit说明</SPAN>：hbase.hregion.memstore.flush.size 
这个参数的作用是当单个Region内所有的memstore大小总和超过指定值时，flush该region的所有memstore。RegionServer的flush是通过将请求添加一个队列，模拟生产消费模式来异步处理的。那这里就有一个问题，当队列来不及消费，产生大量积压请求时，可能会导致内存陡增，最坏的情况是触发OOM。<BR>这个参数的作用是防止内存占用过大，当ReigonServer内所有region的memstores所占用内存总和达到heap的40%时，HBase会强制block所有的更新并flush这些region以释放所有memstore占用的内存。<BR><SPAN 
style="FONT-WEIGHT: 700">lowerLimit说明</SPAN>： 
同upperLimit，只不过lowerLimit在所有region的memstores所占用内存达到Heap的35%时，不flush所有的memstore。它会找一个memstore内存占用最大的region，做个别flush，此时写更新还是会被block。lowerLimit算是一个在所有region强制flush导致性能降低前的补救措施。在日志中，表现为 
“** Flush thread woke up with memory above low water.”<BR><SPAN 
style="FONT-WEIGHT: 700">调优</SPAN>：这是一个Heap内存保护参数，默认值已经能适用大多数场景。<BR>参数调整会影响读写，如果写的压力大导致经常超过这个阀值，则调小读缓存hfile.block.cache.size增大该阀值，或者Heap余量较多时，不修改读缓存大小。<BR>如果在高压情况下，也没超过这个阀值，那么建议你适当调小这个阀值再做压测，确保触发次数不要太多，然后还有较多Heap余量的时候，调大hfile.block.cache.size提高读性能。<BR>还有一种可能性是?hbase.hregion.memstore.flush.size保持不变，但RS维护了过多的region，要知道 
region数量直接影响占用内存的大小。</P>
<P 
style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(107,107,107); PADDING-BOTTOM: 0px; TEXT-ALIGN: left; PADDING-TOP: 0px; FONT: 14px/23px 'Open Sans', sans-serif; PADDING-LEFT: 0px; MARGIN: 0px 0px 10px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px"><SPAN 
style="FONT-WEIGHT: 700">hfile.block.cache.size</SPAN></P>
<P 
style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(107,107,107); PADDING-BOTTOM: 0px; TEXT-ALIGN: left; PADDING-TOP: 0px; FONT: 14px/23px 'Open Sans', sans-serif; PADDING-LEFT: 0px; MARGIN: 0px 0px 10px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px"><SPAN 
style="FONT-WEIGHT: 700">默认值</SPAN>：0.2<BR><SPAN 
style="FONT-WEIGHT: 700">说明</SPAN>：storefile的读缓存占用Heap的大小百分比，0.2表示20%。该值直接影响数据读的性能。<BR><SPAN 
style="FONT-WEIGHT: 700">调优</SPAN>：当然是越大越好，如果写比读少很多，开到0.4-0.5也没问题。如果读写较均衡，0.3左右。如果写比读多，果断默认吧。设置这个值的时候，你同时要参考?hbase.regionserver.global.memstore.upperLimit?，该值是memstore占heap的最大百分比，两个参数一个影响读，一个影响写。如果两值加起来超过80-90%，会有OOM的风险，谨慎设置。</P>
<P 
style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(107,107,107); PADDING-BOTTOM: 0px; TEXT-ALIGN: left; PADDING-TOP: 0px; FONT: 14px/23px 'Open Sans', sans-serif; PADDING-LEFT: 0px; MARGIN: 0px 0px 10px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px"><SPAN 
style="FONT-WEIGHT: 700">hbase.hstore.blockingStoreFiles</SPAN></P>
<P 
style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(107,107,107); PADDING-BOTTOM: 0px; TEXT-ALIGN: left; PADDING-TOP: 0px; FONT: 14px/23px 'Open Sans', sans-serif; PADDING-LEFT: 0px; MARGIN: 0px 0px 10px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px"><SPAN 
style="FONT-WEIGHT: 700">默认值：</SPAN>7<BR><SPAN 
style="FONT-WEIGHT: 700">说明</SPAN>：在flush时，当一个region中的Store（Coulmn 
Family）内有超过7个storefile时，则block所有的写请求进行compaction，以减少storefile数量。<BR><SPAN 
style="FONT-WEIGHT: 700">调优</SPAN>：block写请求会严重影响当前regionServer的响应时间，但过多的storefile也会影响读性能。从实际应用来看，为了获取较平滑的响应时间，可将值设为无限大。如果能容忍响应时间出现较大的波峰波谷，那么默认或根据自身场景调整即可。</P>
<P 
style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(107,107,107); PADDING-BOTTOM: 0px; TEXT-ALIGN: left; PADDING-TOP: 0px; FONT: 14px/23px 'Open Sans', sans-serif; PADDING-LEFT: 0px; MARGIN: 0px 0px 10px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px"><SPAN 
style="FONT-WEIGHT: 700">hbase.hregion.memstore.block.multiplier</SPAN></P>
<P 
style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(107,107,107); PADDING-BOTTOM: 0px; TEXT-ALIGN: left; PADDING-TOP: 0px; FONT: 14px/23px 'Open Sans', sans-serif; PADDING-LEFT: 0px; MARGIN: 0px 0px 10px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px"><SPAN 
style="FONT-WEIGHT: 700">默认值：</SPAN>2<BR><SPAN 
style="FONT-WEIGHT: 700">说明</SPAN>：当一个region里的memstore占用内存大小超过hbase.hregion.memstore.flush.size两倍的大小时，block该region的所有请求，进行flush，释放内存。<BR>虽然我们设置了region所占用的memstores总内存大小，比如64M，但想象一下，在最后63.9M的时候，我Put了一个200M的数据，此时memstore的大小会瞬间暴涨到超过预期的hbase.hregion.memstore.flush.size的几倍。这个参数的作用是当memstore的大小增至超过hbase.hregion.memstore.flush.size 
2倍时，block所有请求，遏制风险进一步扩大。<BR><SPAN style="FONT-WEIGHT: 700">调优</SPAN>： 
这个参数的默认值还是比较靠谱的。如果你预估你的正常应用场景（不包括异常）不会出现突发写或写的量可控，那么保持默认值即可。如果正常情况下，你的写请求量就会经常暴长到正常的几倍，那么你应该调大这个倍数并调整其他参数值，比如hfile.block.cache.size和hbase.regionserver.global.memstore.upperLimit/lowerLimit，以预留更多内存，防止HBase 
server OOM。</P>
<P 
style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(107,107,107); PADDING-BOTTOM: 0px; TEXT-ALIGN: left; PADDING-TOP: 0px; FONT: 14px/23px 'Open Sans', sans-serif; PADDING-LEFT: 0px; MARGIN: 0px 0px 10px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px"><SPAN 
style="FONT-WEIGHT: 700">hbase.hregion.memstore.mslab.enabled</SPAN></P>
<P 
style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(107,107,107); PADDING-BOTTOM: 0px; TEXT-ALIGN: left; PADDING-TOP: 0px; FONT: 14px/23px 'Open Sans', sans-serif; PADDING-LEFT: 0px; MARGIN: 0px 0px 10px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px"><SPAN 
style="FONT-WEIGHT: 700">默认值：</SPAN>true<BR><SPAN 
style="FONT-WEIGHT: 700">说明</SPAN>：减少因内存碎片导致的Full GC，提高整体性能。<BR><SPAN 
style="FONT-WEIGHT: 700">调优</SPAN>：详见&nbsp;<A 
style="TEXT-DECORATION: none; COLOR: rgb(255,153,0)" 
href="http://kenwublog.com/avoid-full-gc-in-hbase-using-arena-allocation" 
target=_blank>http://kenwublog.com/avoid-full-gc-in-hbase-using-arena-allocation</A></P>
<H3 
style="FONT-SIZE: 20px; FONT-FAMILY: 'Roboto Slab', serif; FONT-VARIANT: normal; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(218,68,83); PADDING-BOTTOM: 0px; FONT-STYLE: normal; TEXT-ALIGN: left; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 20px 0px 10px; LETTER-SPACING: normal; LINE-HEIGHT: 1.1; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px"><A 
name=t1></A>其他</H3>
<P 
style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(107,107,107); PADDING-BOTTOM: 0px; TEXT-ALIGN: left; PADDING-TOP: 0px; FONT: 14px/23px 'Open Sans', sans-serif; PADDING-LEFT: 0px; MARGIN: 0px 0px 10px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px"><SPAN 
style="FONT-WEIGHT: 700">启用LZO压缩</SPAN><BR>LZO对比Hbase默认的GZip，前者性能较高，后者压缩比较高，具体参见?<SPAN 
style="FONT-WEIGHT: 700"><A style="TEXT-DECORATION: none; COLOR: rgb(255,153,0)" 
href="http://wiki.apache.org/hadoop/UsingLzoCompression" target=_blank>Using LZO 
Compression</A>&nbsp;。</SPAN>对于想提高HBase读写性能的开发者，采用LZO是比较好的选择。对于非常在乎存储空间的开发者，则建议保持默认。</P>
<P 
style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(107,107,107); PADDING-BOTTOM: 0px; TEXT-ALIGN: left; PADDING-TOP: 0px; FONT: 14px/23px 'Open Sans', sans-serif; PADDING-LEFT: 0px; MARGIN: 0px 0px 10px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px"><SPAN 
style="FONT-WEIGHT: 700">不要在一张表里定义太多的Column Family</SPAN></P>
<P 
style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(107,107,107); PADDING-BOTTOM: 0px; TEXT-ALIGN: left; PADDING-TOP: 0px; FONT: 14px/23px 'Open Sans', sans-serif; PADDING-LEFT: 0px; MARGIN: 0px 0px 10px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">Hbase目前不能良好的处理超过包含2-3个CF的表。因为某个CF在flush发生时，它邻近的CF也会因关联效应被触发flush，最终导致系统产生更多IO。</P>
<P 
style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(107,107,107); PADDING-BOTTOM: 0px; TEXT-ALIGN: left; PADDING-TOP: 0px; FONT: 14px/23px 'Open Sans', sans-serif; PADDING-LEFT: 0px; MARGIN: 0px 0px 10px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px"><SPAN 
style="FONT-WEIGHT: 700">批量导入</SPAN></P>
<P 
style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(107,107,107); PADDING-BOTTOM: 0px; TEXT-ALIGN: left; PADDING-TOP: 0px; FONT: 14px/23px 'Open Sans', sans-serif; PADDING-LEFT: 0px; MARGIN: 0px 0px 10px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">在批量导入数据到Hbase前，你可以通过预先创建regions，来平衡数据的负载。详见?<A 
style="TEXT-DECORATION: none; COLOR: rgb(255,153,0)" 
href="http://hbase.apache.org/book.html#precreate.regions" target=_blank>Table 
Creation: Pre-Creating Regions</A></P>
<P 
style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(107,107,107); PADDING-BOTTOM: 0px; TEXT-ALIGN: left; PADDING-TOP: 0px; FONT: 14px/23px 'Open Sans', sans-serif; PADDING-LEFT: 0px; MARGIN: 0px 0px 10px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px"><SPAN 
style="FONT-WEIGHT: 700">避免CMS concurrent mode failure</SPAN></P>
<P 
style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(107,107,107); PADDING-BOTTOM: 0px; TEXT-ALIGN: left; PADDING-TOP: 0px; FONT: 14px/23px 'Open Sans', sans-serif; PADDING-LEFT: 0px; MARGIN: 0px 0px 10px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">HBase使用CMS 
GC。默认触发GC的时机是当年老代内存达到90%的时候，这个百分比由 -XX:CMSInitiatingOccupancyFraction=N 
这个参数来设置。concurrent mode 
failed发生在这样一个场景：<BR>当年老代内存达到90%的时候，CMS开始进行并发垃圾收集，于此同时，新生代还在迅速不断地晋升对象到年老代。当年老代CMS还未完成并发标记时，年老代满了，悲剧就发生了。CMS因为没内存可用不得不暂停mark，并触发一次stop 
the world（挂起所有jvm线程），然后采用单线程拷贝方式清理所有垃圾对象。这个过程会非常漫长。为了避免出现concurrent mode 
failed，建议让GC在未到90%时，就触发。</P>
<P 
style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(107,107,107); PADDING-BOTTOM: 0px; TEXT-ALIGN: left; PADDING-TOP: 0px; FONT: 14px/23px 'Open Sans', sans-serif; PADDING-LEFT: 0px; MARGIN: 0px 0px 10px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">通过设置?-XX:CMSInitiatingOccupancyFraction=N</P>
<P 
style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(107,107,107); PADDING-BOTTOM: 0px; TEXT-ALIGN: left; PADDING-TOP: 0px; FONT: 14px/23px 'Open Sans', sans-serif; PADDING-LEFT: 0px; MARGIN: 0px 0px 10px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">这个百分比， 
可以简单的这么计算。如果你的?hfile.block.cache.size 
和?hbase.regionserver.global.memstore.upperLimit 加起来有60%（默认），那么你可以设置 
70-80，一般高10%左右差不多。</P>
<H3 
style="FONT-SIZE: 20px; FONT-FAMILY: 'Roboto Slab', serif; FONT-VARIANT: normal; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(218,68,83); PADDING-BOTTOM: 0px; FONT-STYLE: normal; TEXT-ALIGN: left; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 20px 0px 10px; LETTER-SPACING: normal; LINE-HEIGHT: 1.1; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px"><A 
name=t2></A>Hbase客户端优化</H3>
<P 
style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(107,107,107); PADDING-BOTTOM: 0px; TEXT-ALIGN: left; PADDING-TOP: 0px; FONT: 14px/23px 'Open Sans', sans-serif; PADDING-LEFT: 0px; MARGIN: 0px 0px 10px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px"><SPAN 
style="FONT-WEIGHT: 700">AutoFlush</SPAN></P>
<P 
style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(107,107,107); PADDING-BOTTOM: 0px; TEXT-ALIGN: left; PADDING-TOP: 0px; FONT: 14px/23px 'Open Sans', sans-serif; PADDING-LEFT: 0px; MARGIN: 0px 0px 10px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">将<A 
style="TEXT-DECORATION: none; COLOR: rgb(255,153,0)" 
href="http://hbase.apache.org/apidocs/org/apache/hadoop/hbase/client/HTable.html" 
target=_blank>HTable</A>的setAutoFlush设为false，可以支持客户端批量更新。即当Put填满客户端flush缓存时，才发送到服务端。<BR>默认是true。</P>
<P 
style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(107,107,107); PADDING-BOTTOM: 0px; TEXT-ALIGN: left; PADDING-TOP: 0px; FONT: 14px/23px 'Open Sans', sans-serif; PADDING-LEFT: 0px; MARGIN: 0px 0px 10px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px"><SPAN 
style="FONT-WEIGHT: 700">Scan Caching</SPAN></P>
<P 
style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(107,107,107); PADDING-BOTTOM: 0px; TEXT-ALIGN: left; PADDING-TOP: 0px; FONT: 14px/23px 'Open Sans', sans-serif; PADDING-LEFT: 0px; MARGIN: 0px 0px 10px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">scanner一次缓存多少数据来scan（从服务端一次抓多少数据回来scan）。<BR>默认值是 
1，一次只取一条。</P>
<P 
style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(107,107,107); PADDING-BOTTOM: 0px; TEXT-ALIGN: left; PADDING-TOP: 0px; FONT: 14px/23px 'Open Sans', sans-serif; PADDING-LEFT: 0px; MARGIN: 0px 0px 10px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px"><SPAN 
style="FONT-WEIGHT: 700">Scan Attribute Selection</SPAN></P>
<P 
style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(107,107,107); PADDING-BOTTOM: 0px; TEXT-ALIGN: left; PADDING-TOP: 0px; FONT: 14px/23px 'Open Sans', sans-serif; PADDING-LEFT: 0px; MARGIN: 0px 0px 10px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">scan时建议指定需要的Column 
Family，减少通信量，否则scan操作默认会返回整个row的所有数据（所有Coulmn Family）。</P>
<P 
style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(107,107,107); PADDING-BOTTOM: 0px; TEXT-ALIGN: left; PADDING-TOP: 0px; FONT: 14px/23px 'Open Sans', sans-serif; PADDING-LEFT: 0px; MARGIN: 0px 0px 10px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px"><SPAN 
style="FONT-WEIGHT: 700">Close ResultScanners</SPAN></P>
<P 
style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(107,107,107); PADDING-BOTTOM: 0px; TEXT-ALIGN: left; PADDING-TOP: 0px; FONT: 14px/23px 'Open Sans', sans-serif; PADDING-LEFT: 0px; MARGIN: 0px 0px 10px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">通过scan取完数据后，记得要关闭ResultScanner，否则RegionServer可能会出现问题（对应的Server资源无法释放）。</P>
<P 
style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(107,107,107); PADDING-BOTTOM: 0px; TEXT-ALIGN: left; PADDING-TOP: 0px; FONT: 14px/23px 'Open Sans', sans-serif; PADDING-LEFT: 0px; MARGIN: 0px 0px 10px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px"><SPAN 
style="FONT-WEIGHT: 700">Optimal Loading of Row Keys</SPAN></P>
<P 
style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(107,107,107); PADDING-BOTTOM: 0px; TEXT-ALIGN: left; PADDING-TOP: 0px; FONT: 14px/23px 'Open Sans', sans-serif; PADDING-LEFT: 0px; MARGIN: 0px 0px 10px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">当你scan一张表的时候，返回结果只需要row 
key（不需要CF, qualifier,values,timestaps）时，你可以在scan实例中添加一个filterList，并设置 
MUST_PASS_ALL操作，filterList中add?<A 
style="TEXT-DECORATION: none; COLOR: rgb(255,153,0)" 
href="http://hbase.apache.org/apidocs/org/apache/hadoop/hbase/filter/FirstKeyOnlyFilter.html" 
target=_blank>FirstKeyOnlyFilter</A>或<A 
style="TEXT-DECORATION: none; COLOR: rgb(255,153,0)" 
href="http://hbase.apache.org/apidocs/org/apache/hadoop/hbase/filter/KeyOnlyFilter.html" 
target=_blank>KeyOnlyFilter</A>。这样可以减少网络通信量。</P>
<P 
style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(107,107,107); PADDING-BOTTOM: 0px; TEXT-ALIGN: left; PADDING-TOP: 0px; FONT: 14px/23px 'Open Sans', sans-serif; PADDING-LEFT: 0px; MARGIN: 0px 0px 10px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px"><SPAN 
style="FONT-WEIGHT: 700">Turn off WAL on Puts</SPAN></P>
<P 
style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(107,107,107); PADDING-BOTTOM: 0px; TEXT-ALIGN: left; PADDING-TOP: 0px; FONT: 14px/23px 'Open Sans', sans-serif; PADDING-LEFT: 0px; MARGIN: 0px 0px 10px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">当Put某些非重要数据时，你可以设置writeToWAL(false)，来进一步提高写性能。writeToWAL(false)会在Put时放弃写WAL 
log。风险是，当RegionServer宕机时，可能你刚才Put的那些数据会丢失，且无法恢复。</P>
<P 
style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(107,107,107); PADDING-BOTTOM: 0px; TEXT-ALIGN: left; PADDING-TOP: 0px; FONT: 14px/23px 'Open Sans', sans-serif; PADDING-LEFT: 0px; MARGIN: 0px 0px 10px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px"><SPAN 
style="FONT-WEIGHT: 700">启用Bloom Filter</SPAN></P>
<P 
style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(107,107,107); PADDING-BOTTOM: 0px; TEXT-ALIGN: left; PADDING-TOP: 0px; FONT: 14px/23px 'Open Sans', sans-serif; PADDING-LEFT: 0px; MARGIN: 0px 0px 10px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px"><A 
style="TEXT-DECORATION: none; COLOR: rgb(255,153,0)" 
href="http://hbase.apache.org/book.html#blooms" target=_blank>Bloom 
Filter</A>通过空间换时间，提高读操作性能。</P>
<P 
style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(107,107,107); PADDING-BOTTOM: 0px; TEXT-ALIGN: left; PADDING-TOP: 0px; FONT: 14px/23px 'Open Sans', sans-serif; PADDING-LEFT: 0px; MARGIN: 0px 0px 10px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">最后，感谢<A 
style="TEXT-DECORATION: none; COLOR: rgb(255,153,0)" 
href="http://lidejiasw.wordpress.com/" rel="external nofollow" 
target=_blank>嬴北望</A>同学对”hbase.hregion.memstore.flush.size”和“hbase.hstore.blockingStoreFiles”错误观点的修正。</P>
<P 
style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(107,107,107); PADDING-BOTTOM: 0px; TEXT-ALIGN: left; PADDING-TOP: 0px; FONT: 14px/23px 'Open Sans', sans-serif; PADDING-LEFT: 0px; MARGIN: 0px 0px 10px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">原文：<A 
style="TEXT-DECORATION: none; COLOR: rgb(255,153,0)" 
href="http://write.blog.csdn.net/postedit?ref=toolbar" 
target=_blank>http://write.blog.csdn.net/postedit?ref=toolbar</A></P>
<P 
style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(107,107,107); PADDING-BOTTOM: 0px; TEXT-ALIGN: left; PADDING-TOP: 0px; FONT: 14px/23px 'Open Sans', sans-serif; PADDING-LEFT: 0px; MARGIN: 0px 0px 10px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">另外找了网上的Hbase调优的内容：</P>
<P 
style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(107,107,107); PADDING-BOTTOM: 0px; TEXT-ALIGN: left; PADDING-TOP: 0px; FONT: 14px/23px 'Open Sans', sans-serif; PADDING-LEFT: 0px; MARGIN: 0px 0px 10px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px"></P>
<P 
style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; TEXT-ALIGN: left; PADDING-TOP: 0px; FONT: 14px/26px Arial; PADDING-LEFT: 0px; MARGIN: 0px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px"><STRONG>1、使用bloomfilter和mapfile_index_interval</STRONG></P>
<TABLE class=zeroBorder 
style="HEIGHT: 459px; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-ALIGN: left; FONT: 14px/26px Arial; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px" 
width=665 align=left border=1>
  <CAPTION></CAPTION>
  
  <TR height=19>
    <TD class=et11 
    style="HEIGHT: 14.25pt; WIDTH: 306pt; VERTICAL-ALIGN: middle; COLOR: rgb(0,0,255)" 
    height=19 width=408>Bloomfilter(开启/未开启=1/0)</TD>
    <TD class=et10 
    style="HEIGHT: 14.25pt; WIDTH: 207.75pt; VERTICAL-ALIGN: middle; COLOR: rgb(0,0,255)" 
    height=19 width=277>mapfile_index_interval</TD>
    <TD class=et10 
    style="HEIGHT: 14.25pt; WIDTH: 102pt; VERTICAL-ALIGN: middle; COLOR: rgb(0,0,255)" 
    height=19 width=136>Exists(0-10000)/ms</TD>
    <TD class=et9 
    style="HEIGHT: 14.25pt; WIDTH: 111.75pt; VERTICAL-ALIGN: middle; COLOR: rgb(0,0,255)" 
    height=19 width=149>Get(10001 - 20000)/ms</TD></TR>
  <TR height=19>
    <TD class=et8 style="HEIGHT: 14.25pt; WIDTH: 306pt; VERTICAL-ALIGN: middle" 
    height=19 width=408>0</TD>
    <TD class=et7 
    style="HEIGHT: 14.25pt; WIDTH: 207.75pt; VERTICAL-ALIGN: middle" height=19 
    width=277>128</TD>
    <TD class=et7 style="HEIGHT: 14.25pt; WIDTH: 102pt; VERTICAL-ALIGN: middle" 
    height=19 width=136>22460</TD>
    <TD class=et6 
    style="HEIGHT: 14.25pt; WIDTH: 111.75pt; VERTICAL-ALIGN: middle" height=19 
    width=149>23715</TD></TR>
  <TR height=19>
    <TD class=et8 style="HEIGHT: 14.25pt; WIDTH: 306pt; VERTICAL-ALIGN: middle" 
    height=19 width=408>0</TD>
    <TD class=et7 
    style="HEIGHT: 14.25pt; WIDTH: 207.75pt; VERTICAL-ALIGN: middle" height=19 
    width=277>0</TD>
    <TD class=et7 style="HEIGHT: 14.25pt; WIDTH: 102pt; VERTICAL-ALIGN: middle" 
    height=19 width=136>11897</TD>
    <TD class=et6 
    style="HEIGHT: 14.25pt; WIDTH: 111.75pt; VERTICAL-ALIGN: middle" height=19 
    width=149>11416</TD></TR>
  <TR height=19>
    <TD class=et8 style="HEIGHT: 14.25pt; WIDTH: 306pt; VERTICAL-ALIGN: middle" 
    height=19 width=408>0</TD>
    <TD class=et7 
    style="HEIGHT: 14.25pt; WIDTH: 207.75pt; VERTICAL-ALIGN: middle" height=19 
    width=277>64</TD>
    <TD class=et7 style="HEIGHT: 14.25pt; WIDTH: 102pt; VERTICAL-ALIGN: middle" 
    height=19 width=136>13692</TD>
    <TD class=et6 
    style="HEIGHT: 14.25pt; WIDTH: 111.75pt; VERTICAL-ALIGN: middle" height=19 
    width=149>14034</TD></TR>
  <TR height=19>
    <TD class=et8 style="HEIGHT: 14.25pt; WIDTH: 306pt; VERTICAL-ALIGN: middle" 
    height=19 width=408>1</TD>
    <TD class=et7 
    style="HEIGHT: 14.25pt; WIDTH: 207.75pt; VERTICAL-ALIGN: middle" height=19 
    width=277>128</TD>
    <TD class=et7 style="HEIGHT: 14.25pt; WIDTH: 102pt; VERTICAL-ALIGN: middle" 
    height=19 width=136>3275</TD>
    <TD class=et6 
    style="HEIGHT: 14.25pt; WIDTH: 111.75pt; VERTICAL-ALIGN: middle" height=19 
    width=149>3686</TD></TR>
  <TR height=19>
    <TD class=et8 style="HEIGHT: 14.25pt; WIDTH: 306pt; VERTICAL-ALIGN: middle" 
    height=19 width=408>1</TD>
    <TD class=et7 
    style="HEIGHT: 14.25pt; WIDTH: 207.75pt; VERTICAL-ALIGN: middle" height=19 
    width=277>64</TD>
    <TD class=et7 style="HEIGHT: 14.25pt; WIDTH: 102pt; VERTICAL-ALIGN: middle" 
    height=19 width=136>2961</TD>
    <TD class=et6 
    style="HEIGHT: 14.25pt; WIDTH: 111.75pt; VERTICAL-ALIGN: middle" height=19 
    width=149>3010</TD></TR>
  <TR height=19>
    <TD class=et5 style="HEIGHT: 14.25pt; WIDTH: 306pt; VERTICAL-ALIGN: middle" 
    height=19 width=408>1</TD>
    <TD class=et4 
    style="HEIGHT: 14.25pt; WIDTH: 207.75pt; VERTICAL-ALIGN: middle" height=19 
    width=277>0</TD>
    <TD class=et4 style="HEIGHT: 14.25pt; WIDTH: 102pt; VERTICAL-ALIGN: middle" 
    height=19 width=136>3339</TD>
    <TD class=et3 
    style="HEIGHT: 14.25pt; WIDTH: 111.75pt; VERTICAL-ALIGN: middle" height=19 
    width=149>3498</TD></TR>
  <TR height=19>
    <TD height=19>&nbsp;</TD>
    <TD height=19>&nbsp;</TD>
    <TD height=19>&nbsp;</TD>
    <TD height=19>&nbsp;</TD></TR>
  <TR height=19>
    <TD class=et1 style="HEIGHT: 14.25pt; WIDTH: 306pt; VERTICAL-ALIGN: middle" 
    height=19 width=408>测试环境为:单机,规模为10万条数据。随机在10000条数据中有99条存在的情况下。</TD>
    <TD height=19>&nbsp;</TD>
    <TD height=19>&nbsp;</TD>
    <TD height=19>&nbsp;</TD></TR>
  <TR height=19>
    <TD class=et2 
    style="HEIGHT: 14.25pt; WIDTH: 306pt; VERTICAL-ALIGN: middle; COLOR: rgb(255,0,0)" 
    height=19 
      width=408>结论：开启bloomfilter比没开启要快3、4倍。而适当的减少mapfile_index_interval可以提升性能</TD>
    <TD height=19>&nbsp;</TD>
    <TD height=19>&nbsp;</TD>
    <TD height=19>&nbsp;</TD></TR></TABLE>
<P 
style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; TEXT-ALIGN: left; PADDING-TOP: 0px; FONT: 14px/26px Arial; PADDING-LEFT: 0px; MARGIN: 0px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px"></P>
<P 
style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; TEXT-ALIGN: left; PADDING-TOP: 0px; FONT: 14px/26px Arial; PADDING-LEFT: 0px; MARGIN: 0px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px"></P>
<P 
style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; TEXT-ALIGN: left; PADDING-TOP: 0px; FONT: 14px/26px Arial; PADDING-LEFT: 0px; MARGIN: 0px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px"></P>
<P 
style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; TEXT-ALIGN: left; PADDING-TOP: 0px; FONT: 14px/26px Arial; PADDING-LEFT: 0px; MARGIN: 0px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px"></P>
<P 
style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; TEXT-ALIGN: left; PADDING-TOP: 0px; FONT: 14px/26px Arial; PADDING-LEFT: 0px; MARGIN: 0px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px"></P>
<P 
style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; TEXT-ALIGN: left; PADDING-TOP: 0px; FONT: 14px/26px Arial; PADDING-LEFT: 0px; MARGIN: 0px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px"></P>
<P 
style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; TEXT-ALIGN: left; PADDING-TOP: 0px; FONT: 14px/26px Arial; PADDING-LEFT: 0px; MARGIN: 0px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px"></P>
<P 
style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; TEXT-ALIGN: left; PADDING-TOP: 0px; FONT: 14px/26px Arial; PADDING-LEFT: 0px; MARGIN: 0px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px"></P>
<P 
style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; TEXT-ALIGN: left; PADDING-TOP: 0px; FONT: 14px/26px Arial; PADDING-LEFT: 0px; MARGIN: 0px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px"></P>
<P 
style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; TEXT-ALIGN: left; PADDING-TOP: 0px; FONT: 14px/26px Arial; PADDING-LEFT: 0px; MARGIN: 0px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px"></P>
<P 
style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; TEXT-ALIGN: left; PADDING-TOP: 0px; FONT: 14px/26px Arial; PADDING-LEFT: 0px; MARGIN: 0px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px"></P>
<P 
style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; TEXT-ALIGN: left; PADDING-TOP: 0px; FONT: 14px/26px Arial; PADDING-LEFT: 0px; MARGIN: 0px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px"></P>
<P 
style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; TEXT-ALIGN: left; PADDING-TOP: 0px; FONT: 14px/26px Arial; PADDING-LEFT: 0px; MARGIN: 0px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px"></P>
<P 
style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; TEXT-ALIGN: left; PADDING-TOP: 0px; FONT: 14px/26px Arial; PADDING-LEFT: 0px; MARGIN: 0px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px"></P>
<P 
style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; TEXT-ALIGN: left; PADDING-TOP: 0px; FONT: 14px/26px Arial; PADDING-LEFT: 0px; MARGIN: 0px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px"></P>
<P 
style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; TEXT-ALIGN: left; PADDING-TOP: 0px; FONT: 14px/26px Arial; PADDING-LEFT: 0px; MARGIN: 0px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px"></P>
<P 
style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; TEXT-ALIGN: left; PADDING-TOP: 0px; FONT: 14px/26px Arial; PADDING-LEFT: 0px; MARGIN: 0px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px"></P>
<P 
style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; TEXT-ALIGN: left; PADDING-TOP: 0px; FONT: 14px/26px Arial; PADDING-LEFT: 0px; MARGIN: 0px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px"></P>
<P 
style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; TEXT-ALIGN: left; PADDING-TOP: 0px; FONT: 14px/26px Arial; PADDING-LEFT: 0px; MARGIN: 0px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px"></P>
<P 
style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; TEXT-ALIGN: left; PADDING-TOP: 0px; FONT: 14px/26px Arial; PADDING-LEFT: 0px; MARGIN: 0px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px"></P>
<P 
style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; TEXT-ALIGN: left; PADDING-TOP: 0px; FONT: 14px/26px Arial; PADDING-LEFT: 0px; MARGIN: 0px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px"><BR></P>
<P 
style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; TEXT-ALIGN: left; PADDING-TOP: 0px; FONT: 14px/26px Arial; PADDING-LEFT: 0px; MARGIN: 0px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px"><BR></P>
<P 
style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; TEXT-ALIGN: left; PADDING-TOP: 0px; FONT: 14px/26px Arial; PADDING-LEFT: 0px; MARGIN: 0px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px"><BR></P>
<P 
style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; TEXT-ALIGN: left; PADDING-TOP: 0px; FONT: 14px/26px Arial; PADDING-LEFT: 0px; MARGIN: 0px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px"><BR></P>
<P 
style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; TEXT-ALIGN: left; PADDING-TOP: 0px; FONT: 14px/26px Arial; PADDING-LEFT: 0px; MARGIN: 0px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px"><BR></P>
<P 
style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; TEXT-ALIGN: left; PADDING-TOP: 0px; FONT: 14px/26px Arial; PADDING-LEFT: 0px; MARGIN: 0px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px"><BR></P>
<P 
style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; TEXT-ALIGN: left; PADDING-TOP: 0px; FONT: 14px/26px Arial; PADDING-LEFT: 0px; MARGIN: 0px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px"><BR></P>
<P 
style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; TEXT-ALIGN: left; PADDING-TOP: 0px; FONT: 14px/26px Arial; PADDING-LEFT: 0px; MARGIN: 0px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px"><BR></P>
<P 
style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; TEXT-ALIGN: left; PADDING-TOP: 0px; FONT: 14px/26px Arial; PADDING-LEFT: 0px; MARGIN: 0px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px"><BR></P>
<P 
style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; TEXT-ALIGN: left; PADDING-TOP: 0px; FONT: 14px/26px Arial; PADDING-LEFT: 0px; MARGIN: 0px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px"><BR></P>
<P 
style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; TEXT-ALIGN: left; PADDING-TOP: 0px; FONT: 14px/26px Arial; PADDING-LEFT: 0px; MARGIN: 0px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px"><BR></P>
<P 
style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; TEXT-ALIGN: left; PADDING-TOP: 0px; FONT: 14px/26px Arial; PADDING-LEFT: 0px; MARGIN: 0px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px"><BR></P>
<P 
style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; TEXT-ALIGN: left; PADDING-TOP: 0px; FONT: 14px/26px Arial; PADDING-LEFT: 0px; MARGIN: 0px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px"><BR></P>
<P 
style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; TEXT-ALIGN: left; PADDING-TOP: 0px; FONT: 14px/26px Arial; PADDING-LEFT: 0px; MARGIN: 0px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px"><BR></P>
<P 
style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; TEXT-ALIGN: left; PADDING-TOP: 0px; FONT: 14px/26px Arial; PADDING-LEFT: 0px; MARGIN: 0px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px"><BR></P>
<P 
style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; TEXT-ALIGN: left; PADDING-TOP: 0px; FONT: 14px/26px Arial; PADDING-LEFT: 0px; MARGIN: 0px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px"><BR></P>
<P 
style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; TEXT-ALIGN: left; PADDING-TOP: 0px; FONT: 14px/26px Arial; PADDING-LEFT: 0px; MARGIN: 0px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px"><BR></P>
<P 
style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; TEXT-ALIGN: left; PADDING-TOP: 0px; FONT: 14px/26px Arial; PADDING-LEFT: 0px; MARGIN: 0px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px"><BR></P>
<P 
style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; TEXT-ALIGN: left; PADDING-TOP: 0px; FONT: 14px/26px Arial; PADDING-LEFT: 0px; MARGIN: 0px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">&nbsp; 
&nbsp; 
注意：在1.9.3版本的hbase中，bloomfilter是不支持的，存在一个bug，可以通过如下的修改加以改正：<BR>&nbsp;&nbsp;&nbsp; 
(1)、在方法org.apache.hadoop.hbase.regionserver.HStore.createReaders()中，找到如下行<BR>&nbsp;&nbsp;&nbsp; 
BloomFilterMapFile.Reader reader = file.getReader(fs, false, 
false);<BR>&nbsp;&nbsp;&nbsp; 将其改成<BR>&nbsp;&nbsp;&nbsp; 
BloomFilterMapFile.Reader reader = file.getReader(fs, 
this.family.isBloomfilter(), false);<BR>&nbsp;&nbsp;&nbsp; 
(2)、在方法org.apache.hadoop.hbase.HColumnDescriptor.toString()中，找到如下的代码行<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
if (key != null &amp;&amp; key.toUpperCase().equals(BLOOMFILTER)) 
{<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // Don't emit bloomfilter.&nbsp; 
Its not working.<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
continue;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<BR>&nbsp;&nbsp;&nbsp; 
将其注释掉<BR><BR>2、hbase对于内存有特别的嗜好，在硬件允许的情况下配足够多的内存给它。<BR>&nbsp;&nbsp;&nbsp; 
通过修改hbase-env.sh中的<BR>&nbsp;&nbsp;&nbsp; export HBASE_HEAPSIZE=3000 
#这里默认为1000m<BR><BR>3、修改java虚拟机属性<BR>&nbsp;&nbsp;&nbsp; 
(1)、在环境允许的情况下换64位的虚拟机<BR>&nbsp;&nbsp;&nbsp; 
(2)、替换掉默认的垃圾回收器，因为默认的垃圾回收器在多线程环境下会有更多的wait等待<BR>&nbsp;&nbsp;&nbsp; export 
HBASE_OPTS="-server -XX:NewSize=6m -XX:MaxNewSize=6m -XX:+UseConcMarkSweepGC 
-XX:+CMSIncrementalMode"<BR><BR>4、增大RPC数量<BR>&nbsp;&nbsp;&nbsp; 
通过修改hbase-site.xml中的&nbsp;&nbsp;&nbsp;&nbsp;<BR>&nbsp;&nbsp;&nbsp; 
hbase.regionserver.handler.count属性，可以适当的放大。默认值为10有点小<BR><BR>5、做程序开发是注意的地方<BR>&nbsp;&nbsp;&nbsp; 
(1)、需要判断所求的数据行是否存在时，尽量不要用HTable.exists(final byte [] row) 而用HTable.exists(final 
byte [] row, final byte[] column)等带列族的方法替代。<BR>&nbsp;&nbsp;&nbsp; 
(2)、不要使用HTable.get(final byte [] row, final byte [] column) == 
null来判断所求的数据存在，而是用HTable.exists(final byte [] row, final byte[] 
column)替代<BR>&nbsp;&nbsp;&nbsp; 
(3)、HTable.close()方法少用.因为我遇到过一些很令人费解的错误<BR><BR>6、记住HBase是基于列模式的存储，如果一个列族能搞定就不要把它分开成两个，关系数据库的那套在这里很不实用.分成多个列来存储会浪费更多的空间，除非你认为现在的硬盘和白菜一个价。<BR><BR>7、如果数据量没有达到TB级别或者没有上亿条记录，很难发挥HBase的优势，建议换关系数据库或别的存储技术。</P></body>
</html>
